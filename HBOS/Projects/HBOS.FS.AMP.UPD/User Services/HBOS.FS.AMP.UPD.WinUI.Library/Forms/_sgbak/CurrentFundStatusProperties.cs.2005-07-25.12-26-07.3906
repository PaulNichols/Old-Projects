using System;
using System.ComponentModel;
using System.Configuration;
using System.Drawing;
using System.Windows.Forms;
using HBOS.FS.AMP.UPD.Controllers;
using HBOS.FS.AMP.UPD.Types.AssetFunds;
using HBOS.FS.AMP.UPD.Types.Funds;
using HBOS.FS.AMP.UPD.WinUI.Classes;
using HBOS.FS.Support.Tex;
using DataGrid = HBOS.FS.AMP.Windows.Controls.DataGrid;

namespace HBOS.FS.AMP.UPD.WinUI.Forms
{
	/// <summary>
	/// CurrentFundStatusProperties - Popup for Current Fund Status
	/// </summary>
	public class CurrentFundStatusProperties : Form
	{
		#region Controls

		private TabControl tabControl;
		private TabPage toleranceTabPage;
		private TabPage factorTabPage;
		private TabPage tabAssetMovement;
		private Label assetMovementLabel;
		private Label assetMovementValueLabel;
		private Label upperToleranceValueLabel;
		private Label upperToleranceLabel;
		private Label lowerToleranceValueLabel;
		private Label lowerToleranceLabel;
		private Label priceIncreaseLabel;
		private CheckBox priceIncreaseCheckBox;
		private Button cancelButton;

		/// <summary>
		/// Required designer variable.
		/// </summary>
		private Container components = null;

		#endregion

		private PropertiesAssetFundMovement propertiesAssetFundMovement;
		private DataGrid fundFactorsGrid;

		#region Variables and Constants

		// Really 5 decimal places as this is a percentage
		private const string formatAsPercentage = "p3";

		#endregion

		#region Constructor

		/// <summary>
		/// Defualt Constructor
		/// </summary>
		public CurrentFundStatusProperties()
		{
			T.E();

			try
			{
				InitializeComponent();

				//
				// TODO: Add any constructor code after InitializeComponent call
				//
				this.Text = "Fund Propreties";

				this.assetMovementValueLabel.Text = string.Empty;
				this.upperToleranceValueLabel.Text = string.Empty;
				this.upperToleranceValueLabel.Text = string.Empty;
				this.lowerToleranceValueLabel.Text = string.Empty;
				this.priceIncreaseCheckBox.Checked = false;

				// Bind factor controls to the fund object
//				this.valuationFactorValueLabel.Text = string.Empty;
//				this.scalingFactorValueLabel.Text = string.Empty;
//				this.xFactorValueLabel.Text = string.Empty;
			}
			finally
			{
				T.X();
			}
		}

		/// <summary>
		/// Overloaded constructor.  
		/// </summary>
		/// <param name="currentFund">Fund object</param>
		public CurrentFundStatusProperties(Fund currentFund) : this()
		{
			T.E();

			try
			{
				this.Text = currentFund.FullName.Trim() + " Properties";

				// Bind tolerance controls to fund object
				this.assetMovementValueLabel.Text = currentFund.AssetMovementTolerance.ToString(formatAsPercentage);
				this.upperToleranceValueLabel.Text = currentFund.UpperTolerance.ToString(formatAsPercentage);
				this.lowerToleranceValueLabel.Text = currentFund.LowerTolerance.ToString(formatAsPercentage);
				this.priceIncreaseCheckBox.Checked = currentFund.PriceIncreaseOnly;

				// Bind factor controls to the fund object
				//this.valuationFactorValueLabel.Text = currentFund.ValuationFactor
//				LinkedFund linkedFund = currentFund as LinkedFund;
//				Composite composite = currentFund as Composite;
//				if (linkedFund != null)
//				{
//					this.scalingFactorValueLabel.Text = linkedFund.ScalingFactor.ToString( formatAsPercentage );
//				}
//				else if (composite != null)
//				{
//					this.scalingFactorValueLabel.Text = composite.ScalingFactor.ToString( formatAsPercentage );
//				}
//				else
//				{
//					decimal sclFactor = 0M;
//					this.scalingFactorValueLabel.Text =  sclFactor.ToString( formatAsPercentage );
//				}
//
//				this.xFactorValueLabel.Text = currentFund.XFactor.ToString( formatAsPercentage );

			//	AssetFundController AFController = new AssetFundController();
				AssetFund assetFund = AssetFundController.LoadAssetFund(
					ConfigurationSettings.AppSettings["connectionString"],
					currentFund.AssetFundID, true);

				propertiesAssetFundMovement.Populate(assetFund);


				DataGridTableStyle style = new DataGridTableStyle();

				fundFactorsGrid.TableStyles.Clear();
				fundFactorsGrid.TableStyles.Add(style);

				style.AlternatingBackColor = Color.WhiteSmoke;
				style.DataGrid = fundFactorsGrid;
				style.HeaderForeColor = SystemColors.ControlText;
				style.MappingName = "";

				const int defaultColWidth = 80;

				// Hack to allow for multi-line header rows.
				// This requires a large font (36pt) to be set for grid.HeaderFont through the properties window
				style.HeaderFont = fundFactorsGrid.Font;

				//set-up the columns
				StatusViewController.AddTextBoxReadOnlyColumnStyle(fundFactorsGrid, "DisplayName", "Type.", 150, HorizontalAlignment.Left, "");
				StatusViewController.AddPercentColumnStyle(fundFactorsGrid, "RatioValue", "Value.", defaultColWidth, 2, HorizontalAlignment.Right, "");

				//Retrieve and fill the grid with the factors for the Current Fund
				fundFactorsGrid.BindToCustomCollection(currentFund.Factors);

			}
			finally
			{
				T.X();
			}
		}

		#endregion

		#region Windows Form Designer generated code

		/// <summary>
		/// Required method for Designer support - do not modify
		/// the contents of this method with the code editor.
		/// </summary>
		private void InitializeComponent()
		{
			this.tabControl = new System.Windows.Forms.TabControl();
			this.toleranceTabPage = new System.Windows.Forms.TabPage();
			this.upperToleranceValueLabel = new System.Windows.Forms.Label();
			this.priceIncreaseCheckBox = new System.Windows.Forms.CheckBox();
			this.priceIncreaseLabel = new System.Windows.Forms.Label();
			this.lowerToleranceValueLabel = new System.Windows.Forms.Label();
			this.lowerToleranceLabel = new System.Windows.Forms.Label();
			this.upperToleranceLabel = new System.Windows.Forms.Label();
			this.assetMovementValueLabel = new System.Windows.Forms.Label();
			this.assetMovementLabel = new System.Windows.Forms.Label();
			this.factorTabPage = new System.Windows.Forms.TabPage();
			this.fundFactorsGrid = new HBOS.FS.AMP.Windows.Controls.DataGrid();
			this.tabAssetMovement = new System.Windows.Forms.TabPage();
			this.propertiesAssetFundMovement = new HBOS.FS.AMP.UPD.WinUI.Forms.PropertiesAssetFundMovement();
			this.cancelButton = new System.Windows.Forms.Button();
			this.tabControl.SuspendLayout();
			this.toleranceTabPage.SuspendLayout();
			this.factorTabPage.SuspendLayout();
			((System.ComponentModel.ISupportInitialize)(this.fundFactorsGrid)).BeginInit();
			this.tabAssetMovement.SuspendLayout();
			this.SuspendLayout();
			// 
			// tabControl
			// 
			this.tabControl.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) 
				| System.Windows.Forms.AnchorStyles.Left) 
				| System.Windows.Forms.AnchorStyles.Right)));
			this.tabControl.Controls.Add(this.toleranceTabPage);
			this.tabControl.Controls.Add(this.factorTabPage);
			this.tabControl.Controls.Add(this.tabAssetMovement);
			this.tabControl.Location = new System.Drawing.Point(8, 8);
			this.tabControl.Name = "tabControl";
			this.tabControl.SelectedIndex = 0;
			this.tabControl.Size = new System.Drawing.Size(418, 352);
			this.tabControl.TabIndex = 0;
			// 
			// toleranceTabPage
			// 
			this.toleranceTabPage.Controls.Add(this.upperToleranceValueLabel);
			this.toleranceTabPage.Controls.Add(this.priceIncreaseCheckBox);
			this.toleranceTabPage.Controls.Add(this.priceIncreaseLabel);
			this.toleranceTabPage.Controls.Add(this.lowerToleranceValueLabel);
			this.toleranceTabPage.Controls.Add(this.lowerToleranceLabel);
			this.toleranceTabPage.Controls.Add(this.upperToleranceLabel);
			this.toleranceTabPage.Controls.Add(this.assetMovementValueLabel);
			this.toleranceTabPage.Controls.Add(this.assetMovementLabel);
			this.toleranceTabPage.Location = new System.Drawing.Point(4, 22);
			this.toleranceTabPage.Name = "toleranceTabPage";
			this.toleranceTabPage.Size = new System.Drawing.Size(410, 318);
			this.toleranceTabPage.TabIndex = 0;
			this.toleranceTabPage.Text = "Tolerance";
			// 
			// upperToleranceValueLabel
			// 
			this.upperToleranceValueLabel.Location = new System.Drawing.Point(120, 40);
			this.upperToleranceValueLabel.Name = "upperToleranceValueLabel";
			this.upperToleranceValueLabel.Size = new System.Drawing.Size(184, 16);
			this.upperToleranceValueLabel.TabIndex = 8;
			this.upperToleranceValueLabel.Text = "upper tolerance value";
			this.upperToleranceValueLabel.TextAlign = System.Drawing.ContentAlignment.MiddleLeft;
			// 
			// priceIncreaseCheckBox
			// 
			this.priceIncreaseCheckBox.Enabled = false;
			this.priceIncreaseCheckBox.Location = new System.Drawing.Point(120, 88);
			this.priceIncreaseCheckBox.Name = "priceIncreaseCheckBox";
			this.priceIncreaseCheckBox.Size = new System.Drawing.Size(104, 16);
			this.priceIncreaseCheckBox.TabIndex = 7;
			// 
			// priceIncreaseLabel
			// 
			this.priceIncreaseLabel.Location = new System.Drawing.Point(16, 88);
			this.priceIncreaseLabel.Name = "priceIncreaseLabel";
			this.priceIncreaseLabel.Size = new System.Drawing.Size(112, 16);
			this.priceIncreaseLabel.TabIndex = 6;
			this.priceIncreaseLabel.Text = "Price Increase Only:";
			// 
			// lowerToleranceValueLabel
			// 
			this.lowerToleranceValueLabel.Location = new System.Drawing.Point(120, 64);
			this.lowerToleranceValueLabel.Name = "lowerToleranceValueLabel";
			this.lowerToleranceValueLabel.Size = new System.Drawing.Size(184, 16);
			this.lowerToleranceValueLabel.TabIndex = 5;
			this.lowerToleranceValueLabel.Text = "lower tolerance value";
			this.lowerToleranceValueLabel.TextAlign = System.Drawing.ContentAlignment.MiddleLeft;
			// 
			// lowerToleranceLabel
			// 
			this.lowerToleranceLabel.Location = new System.Drawing.Point(16, 64);
			this.lowerToleranceLabel.Name = "lowerToleranceLabel";
			this.lowerToleranceLabel.Size = new System.Drawing.Size(96, 16);
			this.lowerToleranceLabel.TabIndex = 4;
			this.lowerToleranceLabel.Text = "Lower Tolerance:";
			// 
			// upperToleranceLabel
			// 
			this.upperToleranceLabel.Location = new System.Drawing.Point(16, 40);
			this.upperToleranceLabel.Name = "upperToleranceLabel";
			this.upperToleranceLabel.Size = new System.Drawing.Size(96, 16);
			this.upperToleranceLabel.TabIndex = 2;
			this.upperToleranceLabel.Text = "Upper Tolerance:";
			// 
			// assetMovementValueLabel
			// 
			this.assetMovementValueLabel.Location = new System.Drawing.Point(120, 16);
			this.assetMovementValueLabel.Name = "assetMovementValueLabel";
			this.assetMovementValueLabel.Size = new System.Drawing.Size(184, 16);
			this.assetMovementValueLabel.TabIndex = 1;
			this.assetMovementValueLabel.Text = "asset movement value";
			this.assetMovementValueLabel.TextAlign = System.Drawing.ContentAlignment.MiddleLeft;
			// 
			// assetMovementLabel
			// 
			this.assetMovementLabel.Location = new System.Drawing.Point(16, 16);
			this.assetMovementLabel.Name = "assetMovementLabel";
			this.assetMovementLabel.Size = new System.Drawing.Size(96, 16);
			this.assetMovementLabel.TabIndex = 0;
			this.assetMovementLabel.Text = "Asset Movement:";
			// 
			// factorTabPage
			// 
			this.factorTabPage.Controls.Add(this.fundFactorsGrid);
			this.factorTabPage.Location = new System.Drawing.Point(4, 22);
			this.factorTabPage.Name = "factorTabPage";
			this.factorTabPage.Size = new System.Drawing.Size(410, 318);
			this.factorTabPage.TabIndex = 1;
			this.factorTabPage.Text = "Factors";
			// 
			// fundFactorsGrid
			// 
			this.fundFactorsGrid.DataMember = "";
			this.fundFactorsGrid.Dock = System.Windows.Forms.DockStyle.Fill;
			this.fundFactorsGrid.FlatMode = false;
			this.fundFactorsGrid.Font = new System.Drawing.Font("Tahoma", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((System.Byte)(0)));
			this.fundFactorsGrid.GridLineColor = System.Drawing.Color.Black;
			this.fundFactorsGrid.HeaderFont = new System.Drawing.Font("Tahoma", 27.75F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((System.Byte)(0)));
			this.fundFactorsGrid.Location = new System.Drawing.Point(0, 0);
			this.fundFactorsGrid.Name = "fundFactorsGrid";
			this.fundFactorsGrid.PrintColumnHeadingFont = new System.Drawing.Font("Arial", 10F, System.Drawing.FontStyle.Bold);
			this.fundFactorsGrid.PrintColumnSettings = null;
			this.fundFactorsGrid.PrintPageHeadingFont = new System.Drawing.Font("Arial", 12F, System.Drawing.FontStyle.Bold);
			this.fundFactorsGrid.PrintStandardFont = new System.Drawing.Font("Arial", 8F);
			this.fundFactorsGrid.Size = new System.Drawing.Size(410, 318);
			this.fundFactorsGrid.TabIndex = 7;
			// 
			// tabAssetMovement
			// 
			this.tabAssetMovement.Anchor = ((System.Windows.Forms.AnchorStyles)((((System.Windows.Forms.AnchorStyles.Top | System.Windows.Forms.AnchorStyles.Bottom) 
				| System.Windows.Forms.AnchorStyles.Left) 
				| System.Windows.Forms.AnchorStyles.Right)));
			this.tabAssetMovement.Controls.Add(this.propertiesAssetFundMovement);
			this.tabAssetMovement.Location = new System.Drawing.Point(4, 22);
			this.tabAssetMovement.Name = "tabAssetMovement";
			this.tabAssetMovement.Size = new System.Drawing.Size(410, 326);
			this.tabAssetMovement.TabIndex = 0;
			this.tabAssetMovement.Text = "Asset Fund Movement";
			// 
			// propertiesAssetFundMovement
			// 
			this.propertiesAssetFundMovement.Dock = System.Windows.Forms.DockStyle.Fill;
			this.propertiesAssetFundMovement.Location = new System.Drawing.Point(0, 0);
			this.propertiesAssetFundMovement.Name = "propertiesAssetFundMovement";
			this.propertiesAssetFundMovement.Size = new System.Drawing.Size(410, 326);
			this.propertiesAssetFundMovement.TabIndex = 0;
			// 
			// cancelButton
			// 
			this.cancelButton.Anchor = ((System.Windows.Forms.AnchorStyles)((System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Right)));
			this.cancelButton.Location = new System.Drawing.Point(346, 368);
			this.cancelButton.Name = "cancelButton";
			this.cancelButton.TabIndex = 1;
			this.cancelButton.Text = "Cancel";
			this.cancelButton.Click += new System.EventHandler(this.cancelButton_Click);
			// 
			// CurrentFundStatusProperties
			// 
			this.AutoScaleBaseSize = new System.Drawing.Size(5, 13);
			this.ClientSize = new System.Drawing.Size(434, 400);
			this.Controls.Add(this.cancelButton);
			this.Controls.Add(this.tabControl);
			this.FormBorderStyle = System.Windows.Forms.FormBorderStyle.FixedDialog;
			this.MaximizeBox = false;
			this.MinimizeBox = false;
			this.Name = "CurrentFundStatusProperties";
			this.ShowInTaskbar = false;
			this.StartPosition = System.Windows.Forms.FormStartPosition.CenterParent;
			this.Text = "Fund Properties";
			this.TopMost = true;
			this.tabControl.ResumeLayout(false);
			this.toleranceTabPage.ResumeLayout(false);
			this.factorTabPage.ResumeLayout(false);
			((System.ComponentModel.ISupportInitialize)(this.fundFactorsGrid)).EndInit();
			this.tabAssetMovement.ResumeLayout(false);
			this.ResumeLayout(false);

		}

		/// <summary>
		/// Clean up any resources being used.
		/// </summary>
		protected override void Dispose(bool disposing)
		{
			if (disposing)
			{
				if (components != null)
				{
					components.Dispose();
				}
			}
			base.Dispose(disposing);
		}

		#endregion

		#region Event Handlers

		/// <summary>
		/// Close the dialog
		/// </summary>
		/// <param name="sender"></param>
		/// <param name="e"></param>
		private void cancelButton_Click(object sender, EventArgs e)
		{
			T.E();

			try
			{
				this.Close();
			}
			finally
			{
				T.X();
			}
		}

		#endregion
	}
}