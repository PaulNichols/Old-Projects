<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HBOS.FS.AMP.UPD.Exceptions</name>
    </assembly>
    <members>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.AssetFundAssocDeletionException">
            <summary>
            An exception to be used if attempting to delete an asset fund which has associated funds
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.UPDException">
            <summary>
            Used purely so we can distinguish UPD exceptions from other exceptions
            (in addition to namespace) and so that we can in future add base UPD specific functionality if required.
            Is abstract class - always derive from this (you cant just use it).
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UPDException.#ctor">
            <summary>
            ctor - just passes back to base
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UPDException.#ctor(System.String)">
            <summary>
            ctor - just passes back to base
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UPDException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UPDException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UPDException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UPDException"/> instance. This is the final required constructor which
            makes sure you can create your custom data from the serialization info.
            </summary>
            <param name="info">The deserialization info</param>
            <param name="context">The deserialization context</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.AssetFundAssocDeletionException.#ctor">
            <summary>
            ctor - just passes back to base
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.AssetFundAssocDeletionException.#ctor(System.String)">
            <summary>
            ctor - just passes back to base
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.AssetFundAssocDeletionException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.AssetFundAssocDeletionException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.AssetFundAssocDeletionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.AssetFundAssocDeletionException"/> instance. This is the final required constructor which
            makes sure you can create your custom data from the serialization info.
            </summary>
            <param name="info">The deserialization info</param>
            <param name="context">The deserialization context</param>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.ConcurrencyViolationException">
            <summary>
            Exception thrown whenever an update to the database has resulted in a constraint violation.
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.DatabaseException">
            <summary>
            DatabaseException - UPD Application Database exception
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Exceptions.DatabaseException.m_DatabaseExceptionInfo">
            <summary>
            Additional database information
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.DatabaseException.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.DatabaseException"/> instance. This is the equivalent of the
            default constructor, but enforces the provision of some database exception information.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.DatabaseException.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.DatabaseException"/> instance. This is the equivalent of the
            default constructor, but enforces the provision of some database exception information.
            </summary>
            <param name="message">A string, in this case, representing the error message.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.DatabaseException.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.DatabaseException"/> instance. This is the first over-loaded
            constructor, following the template above.
            </summary>
            <param name="message">Diagnostic message </param>
            <param name="databaseInfo">Again, some database info.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.DatabaseException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.DatabaseException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.DatabaseException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.DatabaseException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="databaseInfo">Some database info.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.DatabaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.DatabaseException"/> instance. This is the final required constructor which
            makes sure you can create your custom data from the serialization info.
            </summary>
            <param name="info">The deserialization info</param>
            <param name="context">The deserialization context</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.DatabaseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Override GetObjectData to ensure any custom data can be serialized
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.DatabaseException.DatabaseInfo">
            <summary>
            Read-only access to the exception's custom data.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ConcurrencyViolationException.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ConcurrencyViolationException"/> instance. This is the
            default constructor.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ConcurrencyViolationException.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ConcurrencyViolationException"/> instance.  This is the
            equivalent of the default constructor but enforces the provision of an error message.
            </summary>
            <param name="message">A diagnostic message.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ConcurrencyViolationException.#ctor(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ConcurrencyViolationException"/> instance. This is the equivalent
            of the default constructor but enforces the provision of the extra custom information.
            </summary>
            <param name="databaseInfo">Some extra database exception info.</param>
            <param name="procedureName">The name of the stored procedure causing the violation.</param>
            <param name="parameters">The parameters passed to the stored procedure.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ConcurrencyViolationException.#ctor(System.String,System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ConcurrencyViolationException"/> instance. This enforces the
            provision of extra custom information and a diagnostic message.
            </summary>
            <param name="message">A diagnostic message.</param>
            <param name="databaseInfo">Some extra database exception info.</param>
            <param name="procedureName">The name of the stored procedure causing the violation.</param>
            <param name="parameters">The parameters passed to the stored procedure.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ConcurrencyViolationException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ConcurrencyViolationException"/> instance. This enforces the
            provision of a diagnostic message and the originating exception to be wrapped as the
            inner exception.
            </summary>
            <param name="message">A diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ConcurrencyViolationException.#ctor(System.String,System.String,System.String,System.Data.SqlClient.SqlParameter[],System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ConcurrencyViolationException"/> instance. This enforces the
            provision of a diagnostic message, some database excpetion information and the originating
            exception to be wrapped as the inner exception.
            </summary>
            <param name="message">A diagnostic message.</param>
            <param name="databaseInfo">Some extra database exception info.</param>
            <param name="procedureName">The name of the stored procedure causing the violation.</param>
            <param name="parameters">The parameters passed to the stored procedure.</param>
            <param name="inner">The inner exception to be wrapped.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ConcurrencyViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ConcurrencyViolationException"/> instance. This ensures that the
            custom data can be created from the serialisation info.
            </summary>
            <param name="info">The deserialisation info.</param>
            <param name="context">The deserialisation context.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ConcurrencyViolationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Override GetObjectData to ensure that any custom data can be serialised.
            </summary>
            <param name="info">The serialisation info.</param>
            <param name="context">The serialisation context.</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.ConcurrencyViolationException.ProcedureName">
            <summary>
            The name of the stored procedure that resulted in the constraint violation.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.ConcurrencyViolationException.Parameters">
            <summary>
            The parameters being passed to the stored procedure when the violation occurred.
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.ConstraintViolationException">
            <summary>
            Exception thrown whenever an update to the database has resulted in a constraint violation.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ConstraintViolationException.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ConstraintViolationException"/> instance. This is the
            default constructor.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ConstraintViolationException.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ConstraintViolationException"/> instance.  This is the
            equivalent of the default constructor but enforces the provision of an error message.
            </summary>
            <param name="message">A diagnostic message.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ConstraintViolationException.#ctor(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ConstraintViolationException"/> instance. This is the equivalent
            of the default constructor but enforces the provision of the extra custom information.
            </summary>
            <param name="databaseInfo">Some extra database exception info.</param>
            <param name="procedureName">The name of the stored procedure causing the violation.</param>
            <param name="parameters">The parameters passed to the stored procedure.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ConstraintViolationException.#ctor(System.String,System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ConstraintViolationException"/> instance. This enforces the
            provision of extra custom information and a diagnostic message.
            </summary>
            <param name="message">A diagnostic message.</param>
            <param name="databaseInfo">Some extra database exception info.</param>
            <param name="procedureName">The name of the stored procedure causing the violation.</param>
            <param name="parameters">The parameters passed to the stored procedure.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ConstraintViolationException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ConstraintViolationException"/> instance. This enforces the
            provision of a diagnostic message and the originating exception to be wrapped as the
            inner exception.
            </summary>
            <param name="message">A diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ConstraintViolationException.#ctor(System.String,System.String,System.String,System.Data.SqlClient.SqlParameter[],System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ConstraintViolationException"/> instance. This enforces the
            provision of a diagnostic message, some database excpetion information and the originating
            exception to be wrapped as the inner exception.
            </summary>
            <param name="message">A diagnostic message.</param>
            <param name="databaseInfo">Some extra database exception info.</param>
            <param name="procedureName">The name of the stored procedure causing the violation.</param>
            <param name="parameters">The parameters passed to the stored procedure.</param>
            <param name="inner">The inner exception to be wrapped.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ConstraintViolationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ConstraintViolationException"/> instance. This ensures that the
            custom data can be created from the serialisation info.
            </summary>
            <param name="info">The deserialisation info.</param>
            <param name="context">The deserialisation context.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ConstraintViolationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Override GetObjectData to ensure that any custom data can be serialised.
            </summary>
            <param name="info">The serialisation info.</param>
            <param name="context">The serialisation context.</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.ConstraintViolationException.ProcedureName">
            <summary>
            The name of the stored procedure that resulted in the constraint violation.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.ConstraintViolationException.Parameters">
            <summary>
            The parameters being passed to the stored procedure when the violation occurred.
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.DatabaseError">
            <summary>
            Database Errors (from sysmessages)
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Exceptions.DatabaseError.None">
            <summary>
            Sql Server does not exist (17)
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Exceptions.DatabaseError.SQLServerDoesNotExist">
            <summary>
            Sql Server does not exist (17)
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Exceptions.DatabaseError.NullParameter">
            <summary>
            Null Parameter (515)
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Exceptions.DatabaseError.ConstraintViolation">
            <summary>
            Constraint Violation (547)
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Exceptions.DatabaseError.ConstraintViolationDuplicateKey">
            <summary>
            Constraint Violation Duplicate Key (2627)
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Exceptions.DatabaseError.NoDatabaseAccess">
            <summary>
            No Database Access (4060)
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Exceptions.DatabaseError.LoginFailedNotAssociatedWithTrustedConnection">
            <summary>
            Login Failed not associated with trusted connection (18452)
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Exceptions.DatabaseError.LoginFailed">
            <summary>
            Login Failed (18456)
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Exceptions.DatabaseError.CustomError">
            <summary>
            Custom error was raised which is not in sysmessages (50000)
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.ExportException">
            <summary>
            ExportExceptions - UPD Application Export data exception
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Exceptions.ExportException.m_ExportExceptionsInfo">
            <summary>
            Custom Export information
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ExportException.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ExportException"/> instance. This is the equivalent of the
            default constructor, but enforces the provision of some export exception information.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ExportException.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ExportException"/> instance. This is the equivalent of the
            default constructor, but enforces the provision of some export exception information.
            </summary>
            <param name="message">A string, in this case, representing the error message.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ExportException.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ExportException"/> instance. This is the first over-loaded
            constructor, following the template above.
            </summary>
            <param name="message">Diagnostic message </param>
            <param name="exportInfo">Again, some export info.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ExportException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ExportException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ExportException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ExportException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="exportInfo">Some database info.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ExportException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ExportException"/> instance. This is the final required constructor which
            makes sure you can create your custom data from the serialization info.
            </summary>
            <param name="info">The deserialization info</param>
            <param name="context">The deserialization context</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ExportException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Override GetObjectData to ensure any custom data can be serialized
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.ExportException.DatabaseInfo">
            <summary>
            Read-only access to the exception's custom data.
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.FundGroupFileAssociationException">
            <summary>
            Summary description for SecondLevelAuthoriseException.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.FundGroupFileAssociationException.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.FundGroupFileAssociationException.#ctor(System.Object,System.Object,System.Data.SqlClient.SqlException)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.SecondLevelAuthorisationException"/> instance. This enforces the
            provision of a diagnostic message and the originating exception to be wrapped as the
            inner exception.
            </summary>
            <param name="inner">The inner exception to be wrapped.</param>
            <param name="fundGroup">Fund Group that has caused the exception</param>
            <param name="file"></param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.FundGroupFileAssociationException.FundGroup">
            <summary>
            Fund that has caused the exception
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.FundGroupFileAssociationException.File">
            <summary>
            The File the fund group was being associated to at the time of the exception
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.FundLoadException">
            <summary>
            The custom exception thrown when there has been an error loading funds from the database.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.FundLoadException.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.FundLoadException"/> instance. This is the
            default constructor.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.FundLoadException.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.FundLoadException"/> instance. This is the equivalent
            of the default constructor, but enforces the provision of some database exception
            information.
            </summary>
            <param name="exceptionInfo">A string representing some form of exception info.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.FundLoadException.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.FundLoadException"/> instance. This enforces the
            provision of some database exception information and a diagnostic message.
            </summary>
            <param name="message">A diagnostic message.</param>
            <param name="exceptionInfo">A string representing some form of exception info.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.FundLoadException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.FundLoadException"/> instance. This enforces the
            provision of a diagnostic message and the originating exception to be wrapped as the
            inner exception.
            </summary>
            <param name="message">A diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.FundLoadException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.FundLoadException"/> instance. This enforces the
            provision of a diagnostic message, some database excpetion information and the originating
            exception to be wrapped as the inner exception.
            </summary>
            <param name="message">A diagnostic message.</param>
            <param name="exceptionInfo">A string representing some form of exception info.</param>
            <param name="inner">The inner exception to be wrapped.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.FundLoadException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.FundLoadException"/> instance. This ensures that the
            custom data can be created from the serialisation info.
            </summary>
            <param name="info">The deserialisation info.</param>
            <param name="context">The deserialisation context.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.FundLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Override GetObjectData to ensure any custom data can be serialized
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.FundLoadException.DatabaseInfo">
            <summary>
            Read-only access to the exception's custom data.
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.FundSaveException">
            <summary>
            The custom exception thrown when there has been an error updating funds and related details
            on the database.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.FundSaveException.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.FundSaveException"/> instance. This is the
            default constructor.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.FundSaveException.#ctor(System.Object)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.FundSaveException"/> instance. This is the equivalent
            of the default constructor, but enforces the provision of some database exception
            information.
            </summary>
            <param name="fund">The fund for which the attempted save failed.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.FundSaveException.#ctor(System.String,System.Object)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.FundSaveException"/> instance. This enforces the
            provision of some database exception information and a diagnostic message.
            </summary>
            <param name="message">A diagnostic message.</param>
            <param name="fund">The fund for which the attempted save failed.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.FundSaveException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.FundSaveException"/> instance. This enforces the
            provision of a diagnostic message and the originating exception to be wrapped as the
            inner exception.
            </summary>
            <param name="message">A diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.FundSaveException.#ctor(System.String,System.Object,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.FundSaveException"/> instance. This enforces the
            provision of a diagnostic message, some database excpetion information and the originating
            exception to be wrapped as the inner exception.
            </summary>
            <param name="message">A diagnostic message.</param>
            <param name="fund">The fund for which the attempted save failed.</param>
            <param name="inner">The inner exception to be wrapped.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.FundSaveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.FundSaveException"/> instance. This ensures that the
            custom data can be created from the serialisation info.
            </summary>
            <param name="info">The deserialisation info.</param>
            <param name="context">The deserialisation context.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.FundSaveException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Override GetObjectData to ensure any custom data can be serialized
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.FundSaveException.Fund">
            <summary>
            The fund for which the attempted save failed.
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.ImportIncorrectDateException">
            <summary>
            
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ImportIncorrectDateException.#ctor">
            <summary>
            ctor - just passes back to base
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ImportIncorrectDateException.#ctor(System.String,System.DateTime,System.DateTime)">
            <summary>
            ctor - just passes back to base
            </summary>
            <param name="message"></param>
            <param name="expectedDate"></param>
            <param name="fileDate"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ImportIncorrectDateException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ImportIncorrectDateException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ImportIncorrectDateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ImportIncorrectDateException"/> instance. This is the final required constructor which
            makes sure you can create your custom data from the serialization info.
            </summary>
            <param name="info">The deserialization info</param>
            <param name="context">The deserialization context</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.ImportIncorrectDateException.ExpectedDate">
            <summary>
            Gets the expected date.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.ImportIncorrectDateException.FileDate">
            <summary>
            Gets the file date.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.ImportInvalidDateFormatException">
            <summary>
            
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ImportInvalidDateFormatException.#ctor">
            <summary>
            ctor - just passes back to base
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ImportInvalidDateFormatException.#ctor(System.String)">
            <summary>
            ctor - just passes back to base
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ImportInvalidDateFormatException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ImportInvalidDateFormatException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ImportInvalidDateFormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ImportInvalidDateFormatException"/> instance. This is the final required constructor which
            makes sure you can create your custom data from the serialization info.
            </summary>
            <param name="info">The deserialization info</param>
            <param name="context">The deserialization context</param>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.ImportFileSchemaMismatchException">
            <summary>
            An exception to be used if attempting to delete an asset fund which has associated funds
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ImportFileSchemaMismatchException.#ctor">
            <summary>
            ctor - just passes back to base
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ImportFileSchemaMismatchException.#ctor(System.String)">
            <summary>
            ctor - just passes back to base
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ImportFileSchemaMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ImportFileSchemaMismatchException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ImportFileSchemaMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.ImportFileSchemaMismatchException"/> instance. This is the final required constructor which
            makes sure you can create your custom data from the serialization info.
            </summary>
            <param name="info">The deserialization info</param>
            <param name="context">The deserialization context</param>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.InvalidFactorException">
            <summary>
            An exception to be used if data in a factor is not valid (for example when attempting to save)
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidFactorException.#ctor">
            <summary>
            ctor - just passes back to base
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidFactorException.#ctor(System.String)">
            <summary>
            ctor - just passes back to base
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidFactorException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UPDException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidFactorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UPDException"/> instance. This is the final required constructor which
            makes sure you can create your custom data from the serialization info.
            </summary>
            <param name="info">The deserialization info</param>
            <param name="context">The deserialization context</param>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.InvalidXFactorException">
            <summary>
            An exception to be used if data in an X factor is not valid (for example when attempting to save)
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidXFactorException.#ctor">
            <summary>
            ctor - just passes back to base
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidXFactorException.#ctor(System.String)">
            <summary>
            ctor - just passes back to base
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidXFactorException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UPDException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidXFactorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UPDException"/> instance. This is the final required constructor which
            makes sure you can create your custom data from the serialization info.
            </summary>
            <param name="info">The deserialization info</param>
            <param name="context">The deserialization context</param>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.InvalidRevaluationFactorException">
            <summary>
            An exception to be used if data in a Revaluation factor is not valid (for example when attempting to save)
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidRevaluationFactorException.#ctor">
            <summary>
            ctor - just passes back to base
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidRevaluationFactorException.#ctor(System.String)">
            <summary>
            ctor - just passes back to base
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidRevaluationFactorException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UPDException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidRevaluationFactorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UPDException"/> instance. This is the final required constructor which
            makes sure you can create your custom data from the serialization info.
            </summary>
            <param name="info">The deserialization info</param>
            <param name="context">The deserialization context</param>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.InvalidTaxProvisionEstimateException">
            <summary>
            An exception to be used if data in a Revaluation factor is not valid (for example when attempting to save)
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidTaxProvisionEstimateException.#ctor">
            <summary>
            ctor - just passes back to base
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidTaxProvisionEstimateException.#ctor(System.String)">
            <summary>
            ctor - just passes back to base
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidTaxProvisionEstimateException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UPDException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidTaxProvisionEstimateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UPDException"/> instance. This is the final required constructor which
            makes sure you can create your custom data from the serialization info.
            </summary>
            <param name="info">The deserialization info</param>
            <param name="context">The deserialization context</param>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.InvalidScalingFactorException">
            <summary>
            An exception to be used if data in a Revaluation factor is not valid (for example when attempting to save)
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidScalingFactorException.#ctor">
            <summary>
            ctor - just passes back to base
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidScalingFactorException.#ctor(System.String)">
            <summary>
            ctor - just passes back to base
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidScalingFactorException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UPDException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidScalingFactorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UPDException"/> instance. This is the final required constructor which
            makes sure you can create your custom data from the serialization info.
            </summary>
            <param name="info">The deserialization info</param>
            <param name="context">The deserialization context</param>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.InvalidFundGroupNumber">
            <summary>
            An exception to be used if data in a factor is not valid (for example when attempting to save)
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidFundGroupNumber.#ctor">
            <summary>
            ctor - just passes back to base
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidFundGroupNumber.#ctor(System.String)">
            <summary>
            ctor - just passes back to base
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidFundGroupNumber.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UPDException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidFundGroupNumber.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UPDException"/> instance. This is the final required constructor which
            makes sure you can create your custom data from the serialization info.
            </summary>
            <param name="info">The deserialization info</param>
            <param name="context">The deserialization context</param>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.InvalidSqlParameterException">
            <summary>
            Exception thrown whenever a call to a stored procedure fails because of invalid parameters.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidSqlParameterException.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.InvalidSqlParameterException"/> instance. This is the
            default constructor.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidSqlParameterException.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.InvalidSqlParameterException"/> instance.  This is the
            equivalent of the default constructor but enforces the provision of an error message.
            </summary>
            <param name="message">A diagnostic message.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidSqlParameterException.#ctor(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.InvalidSqlParameterException"/> instance. This is the equivalent
            of the default constructor, but enforces the provision of some database exception
            information.
            </summary>
            <param name="databaseInfo">Some extra database exception info.</param>
            <param name="procedureName">The name of the stored procedure causing the violation.</param>
            <param name="parameters">The parameters passed to the stored procedure.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidSqlParameterException.#ctor(System.String,System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.InvalidSqlParameterException"/> instance. This enforces the
            provision of some database exception information and a diagnostic message.
            </summary>
            <param name="message">A diagnostic message.</param>
            <param name="databaseInfo">Some extra database exception info.</param>
            <param name="procedureName">The name of the stored procedure causing the violation.</param>
            <param name="parameters">The parameters passed to the stored procedure.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidSqlParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.InvalidSqlParameterException"/> instance. This enforces the
            provision of a diagnostic message and the originating exception to be wrapped as the
            inner exception.
            </summary>
            <param name="message">A diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidSqlParameterException.#ctor(System.String,System.String,System.String,System.Data.SqlClient.SqlParameter[],System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.InvalidSqlParameterException"/> instance. This enforces the
            provision of a diagnostic message, some database excpetion information and the originating
            exception to be wrapped as the inner exception.
            </summary>
            <param name="message">A diagnostic message.</param>
            <param name="databaseInfo">Some extra database exception info.</param>
            <param name="procedureName">The name of the stored procedure causing the violation.</param>
            <param name="parameters">The parameters passed to the stored procedure.</param>
            <param name="inner">The inner exception to be wrapped.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidSqlParameterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.InvalidSqlParameterException"/> instance. This ensures that the
            custom data can be created from the serialisation info.
            </summary>
            <param name="info">The deserialisation info.</param>
            <param name="context">The deserialisation context.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.InvalidSqlParameterException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Override GetObjectData to ensure that any custom data can be serialised.
            </summary>
            <param name="info">The seriaslisation info.</param>
            <param name="context">The serialisation context.</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.InvalidSqlParameterException.ProcedureName">
            <summary>
            The name of the stored procedure that resulted in the constraint violation.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.InvalidSqlParameterException.Parameters">
            <summary>
            The parameters being passed to the stored procedure when the violation occurred.
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.PersisterColumnListEmptyException">
            <summary>
            PersisterColumnListEmptyException - UPD Application Database exception
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.PersisterColumnListEmptyException.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.PersisterColumnListEmptyException"/> instance. This is the equivalent of the
            default constructor, but enforces the provision of some database exception information.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.PersisterColumnListEmptyException.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.PersisterColumnListEmptyException"/> instance. This is the equivalent of the
            default constructor, but enforces the provision of some database exception information.
            </summary>
            <param name="message">A string, in this case, representing the error message.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.PersisterColumnListEmptyException.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.PersisterColumnListEmptyException"/> instance. This is the first over-loaded
            constructor, following the template above.
            </summary>
            <param name="message">Diagnostic message </param>
            <param name="persisterName">The name of the persister class</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.PersisterColumnListEmptyException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.PersisterColumnListEmptyException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.PersisterColumnListEmptyException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.PersisterColumnListEmptyException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="persisterName">The name of the persister class</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.PersisterColumnListEmptyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.PersisterColumnListEmptyException"/> instance. This is the final required constructor which
            makes sure you can create your custom data from the serialization info.
            </summary>
            <param name="info">The deserialization info</param>
            <param name="context">The deserialization context</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.PersisterColumnListEmptyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Override GetObjectData to ensure any custom data can be serialized
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.PersisterColumnListEmptyException.PersisterName">
            <summary>
            Read-only access to the exception's custom data.
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.ReleaseException">
            <summary>
            Summary description for ReleaseException.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ReleaseException.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.ReleaseException.#ctor(System.Object,System.Data.SqlClient.SqlException)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.SecondLevelAuthorisationException"/> instance. This enforces the
            provision of a diagnostic message and the originating exception to be wrapped as the
            inner exception.
            </summary>
            <param name="inner">The inner exception to be wrapped.</param>
            <param name="fund">Fund that has caused the exception</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.ReleaseException.Fund">
            <summary>
            Fund that has caused the exception
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException">
            <summary>
            Exception raised when a column is not found in a returned query
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException"/> instance. This is the equivalent of the
            default constructor, but enforces the provision of some custom exception information.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException"/> instance. This is the equivalent of the
            default constructor, but enforces the provision of some custom exception information.
            </summary>
            <param name="column">The column not found.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException"/> instance. 
            </summary>
            <param name="message">Diagnostic message </param>
            <param name="column">The column not found.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="column">Some custom info.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException.#ctor(System.String,System.String,System.String)">
            
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException"/> instance. 
            </summary>
            <param name="message">Diagnostic message </param>
            <param name="databaseInfo">Some database info.</param>
            <param name="column">The column not found.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException.#ctor(System.String,System.String,System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="column">Some custom info.</param>
            <param name="databaseInfo">Some database info.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException"/> instance. This is the final required constructor which
            makes sure you can create your custom data from the serialization info.
            </summary>
            <param name="info">The deserialization info</param>
            <param name="context">The deserialization context</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Override GetObjectData to ensure any custom data can be serialized
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.SchemaMismatchException.Column">
            <summary>
            Read-only access to the exception's custom data.
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.SecondLevelAuthorisationException">
            <summary>
            Summary description for SecondLevelAuthoriseException.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.SecondLevelAuthorisationException.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.SecondLevelAuthorisationException.#ctor(System.Object,System.Data.SqlClient.SqlException)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.SecondLevelAuthorisationException"/> instance. This enforces the
            provision of a diagnostic message and the originating exception to be wrapped as the
            inner exception.
            </summary>
            <param name="inner">The inner exception to be wrapped.</param>
            /// <param name="fund">Fund that has caused the exception</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.SecondLevelAuthorisationException.Fund">
            <summary>
            Fund that has caused the exception
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.TransactionRollbackException">
            <summary>
            The custome exception thrown when there has been an error rolling back a database transaction.
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Exceptions.TransactionRollbackException.m_RollbackExceptionInfo">
            <summary>
            Custom database transaction rollback information
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.TransactionRollbackException.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.TransactionRollbackException"/> instance. 
            This is the equivalent of the default constructor, but enforces the 
            provision of some transaction rollback exception information.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.TransactionRollbackException.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.TransactionRollbackException"/> instance. 
            This is the equivalent of the default constructor, but enforces 
            the provision of some transaction rollback exception information.
            </summary>
            <param name="message">A string, in this case, representing the error message.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.TransactionRollbackException.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.TransactionRollbackException"/> instance. 
            This is the first over-loaded constructor, following the template above.
            </summary>
            <param name="message">Diagnostic message </param>
            <param name="rollbackInfo">Again, some export info.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.TransactionRollbackException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.TransactionRollbackException"/> instance. 
            This is the 3rd constructor, in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.TransactionRollbackException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.TransactionRollbackException"/> instance. 
            This is the 4th constructor, in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="rollbackInfo">Some database info.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.TransactionRollbackException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.TransactionRollbackException"/> instance. 
            This is the final required constructor which
            makes sure you can create your custom data from the serialization info.
            </summary>
            <param name="info">The deserialization info</param>
            <param name="context">The deserialization context</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.TransactionRollbackException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Override GetObjectData to ensure any custom data can be serialized
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.TransactionRollbackException.RollbackInfo">
            <summary>
            Read-only access to the exception's custom data.
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.UnableToCastEditedValueException">
            <summary>
            Exception for list to list control, raised when user types in a value in an
            inline edit that cannot be set back on the property
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UnableToCastEditedValueException.#ctor">
            <summary>
            ctor - just passes to base
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UnableToCastEditedValueException.#ctor(System.String)">
            <summary>
            ctor - just passes back to base
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UnableToCastEditedValueException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UnableToCastEditedValueException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UnableToCastEditedValueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UnableToCastEditedValueException"/> instance. This is the final required constructor which
            makes sure you can create your custom data from the serialization info.
            </summary>
            <param name="info">The deserialization info</param>
            <param name="context">The deserialization context</param>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.UnexpectedTypeForEditedValueException">
            <summary>
            Exception for list to list control, raised when property being edited is of an
            unknown type
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UnexpectedTypeForEditedValueException.#ctor">
            <summary>
            ctor - just passes back to base
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UnexpectedTypeForEditedValueException.#ctor(System.String)">
            <summary>
            ctor - just passes back to base
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UnexpectedTypeForEditedValueException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UnexpectedTypeForEditedValueException"/> instance. This is the 3rd constructor,
            in accordance with the best practice template
            </summary>
            <param name="message">Diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UnexpectedTypeForEditedValueException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UnexpectedTypeForEditedValueException"/> instance. This is the final required constructor which
            makes sure you can create your custom data from the serialization info.
            </summary>
            <param name="info">The deserialization info</param>
            <param name="context">The deserialization context</param>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Exceptions.UsersSaveException">
            <summary>
            The custom exception thrown when there has been an error updating users and related details
            on the database.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UsersSaveException.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UsersSaveException"/> instance. This is the
            default constructor.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UsersSaveException.#ctor(System.Object)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UsersSaveException"/> instance. This is the equivalent
            of the default constructor, but enforces the provision of some database exception
            information.
            </summary>
            <param name="user">The User for which the attempted save failed.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UsersSaveException.#ctor(System.String,System.Object)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UsersSaveException"/> instance. This enforces the
            provision of some database exception information and a diagnostic message.
            </summary>
            <param name="message">A diagnostic message.</param>
            <param name="user">The User for which the attempted save failed.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UsersSaveException.#ctor(System.String,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UsersSaveException"/> instance. This enforces the
            provision of a diagnostic message and the originating exception to be wrapped as the
            inner exception.
            </summary>
            <param name="message">A diagnostic message.</param>
            <param name="inner">The inner exception to be wrapped.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UsersSaveException.#ctor(System.String,System.Object,System.Exception)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UsersSaveException"/> instance. This enforces the
            provision of a diagnostic message, some database excpetion information and the originating
            exception to be wrapped as the inner exception.
            </summary>
            <param name="message">A diagnostic message.</param>
            <param name="user">The User for which the attempted save failed.</param>
            <param name="inner">The inner exception to be wrapped.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UsersSaveException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Exceptions.UsersSaveException"/> instance. This ensures that the
            custom data can be created from the serialisation info.
            </summary>
            <param name="info">The deserialisation info.</param>
            <param name="context">The deserialisation context.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Exceptions.UsersSaveException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Override GetObjectData to ensure any custom data can be serialized
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The serialization context.</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Exceptions.UsersSaveException.Users">
            <summary>
            The Users for which the attempted save failed.
            </summary>
        </member>
    </members>
</doc>
