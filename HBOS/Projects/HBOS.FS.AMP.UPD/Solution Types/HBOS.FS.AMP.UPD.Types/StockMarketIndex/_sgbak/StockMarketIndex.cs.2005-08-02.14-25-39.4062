using System;
using HBOS.FS.AMP.UPD.Types.BenchMark;

namespace HBOS.FS.AMP.UPD.Types.StockMarketIndex
{
	/// <summary>
	/// Summary description for StockMarketIndex.
	/// </summary>
	public class StockMarketIndex : IBenchMark
	{
		private string marketName;
		private readonly decimal movement;
		private readonly Currency.Currency currency;

		/// <summary>
		/// Creates a new <see cref="StockMarketIndex"/> instance.
		/// </summary>
		public StockMarketIndex(string marketName, decimal movement, Currency.Currency currency)
		{
			this.marketName = marketName;
			this.movement = movement;
			this.currency = currency;
		
		}

		#region IBenchMark implementation

		/// <summary>
		/// Gets the Bench Mark movement.
		/// </summary>
		/// <value></value>
		public decimal Movement
		{
			get { return movement; }
		}

		/// <summary>
		/// Gets the Bench Mark currency.
		/// </summary>
		/// <value></value>
		public Currency.Currency Currency
		{
			get { return currency; }
		}

		/// <summary>
		/// Gets the state of availability for the Bench Mark.
		/// </summary>
		/// <value></value>
		public BenchMarkAvailabilityState Availability
		{
			//has a current and previous import price
			get { return BenchMarkAvailabilityState.AvailableWithWarnings; }
		}

		/// <summary>
		/// Toes the string.
		/// </summary>
		/// <returns></returns>
		public override string ToString()
		{
			return marketName;
		}

		/// <summary>
		/// This message will show more explination for the BenchMarkAvailabilityState status.
		/// </summary>
		/// <value></value>
		public string AvailableMessage
		{
			get { throw new NotImplementedException(); }
		}

		#endregion
	}
}