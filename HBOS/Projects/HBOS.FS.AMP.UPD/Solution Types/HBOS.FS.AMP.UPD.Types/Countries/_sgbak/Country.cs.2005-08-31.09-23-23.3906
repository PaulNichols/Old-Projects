namespace HBOS.FS.AMP.UPD.Types.Countries
{
    /// <summary>
    /// Class representing data for a country
    /// </summary>
    public class Country
    {
        #region Private variable declaration
        //
        // Data fields
        //
        private string m_countryCode;
        private string m_countryName;

        #endregion
        
        #region Country constructor
		/// <summary>
		/// Creates a new <see cref="Country"/> instance.
		/// </summary>
        public Country()
        {
            m_countryCode = "";
            m_countryName = "";
        }

		/// <summary>
		/// Creates a rehydrated <see cref="Country"/> instance.
		/// </summary>
		/// <param name="countryCode">Country code.</param>
		public Country(string countryCode)
		{
			m_countryCode = countryCode;
		}


		/// <summary>
		/// Creates a rehydrated <see cref="Country"/> instance.
		/// </summary>
		/// <param name="countryCode">Country code.</param>
		/// <param name="countryName">Name of the country.</param>
        public Country(string countryCode, string countryName)
        {
            m_countryCode = countryCode;
            m_countryName = countryName;
        }

        #endregion

        #region Country properties

        /// <summary>
        /// Country code for the country
        /// </summary>
        public string CountryCode
        {
            get 
            { 
                return m_countryCode; 
            }

            
            set 
            { 
                m_countryCode = value;
            }
        }

        /// <summary>
        /// Name of the country
        /// </summary>
        public string CountryName
        {
            get 
            { 
                return m_countryName; 
            }
            set 
            {
                m_countryName = value;
            }
        }

        #endregion Country properties

		
		/// <summary>
		/// Overridden to return equality of two currency objects based on the CurrencyCode
		/// </summary>
		/// <param name="obj">Obj.</param>
		/// <returns></returns>
		public override bool Equals(object obj)
		{
			if (!(obj is Country))
			{
				return false;
			}
			else
			{
				Country check = (Country) obj;
				if (check.CountryCode == this.CountryCode)
				{
					return true;
				}
				else
				{
					return false;
				}
			}
		}

		/// <summary>
		/// Gets the hash code.
		/// </summary>
		/// <returns></returns>
    	public override int GetHashCode()
    	{
    		return base.GetHashCode();
    	}

    }
}
