<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HBOS.FS.AMP.UPD.Types</name>
    </assembly>
    <members>
        <member name="T:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund">
            <summary>
            The asset fund holding a collection of funds.
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.EntityBase">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.EntityBase.m_isDirty">
            <summary>
            Dirt flag
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.EntityBase.m_isNew">
            <summary>
            New Flag
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.EntityBase.m_isDeleted">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.EntityBase.m_timestamp">
            <summary>
            
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.EntityBase.SetDirtyFlag">
            <summary>
            Set the modified flag to be true
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.EntityBase.IsDirty">
            <summary>
            Returns true if the object needs to be updated in the database.
            Otherwise false.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.EntityBase.IsNew">
            <summary>
            Returns true if the object is a newly created object being added to the database.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.EntityBase.IsDeleted">
            <summary>
            Returns true if the object has been flagged as deleted.  Set to false if the
            data has been un-deleted
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.EntityBase.TimeStamp">
            <summary>
            Returns the time stamp of the data 
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.#ctor">
            <summary>
            Constructor to be used when you create a new Asset Fund
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.#ctor(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AssetFundTypeEnum)">
            <summary>
            Constructor to be used when you create a new Asset Fund
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.#ctor(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AssetFundTypeEnum,System.String,System.String,System.String,System.String,System.Decimal,System.DateTime,System.Decimal,System.Decimal,System.Boolean,System.Decimal,System.Boolean,System.Boolean,System.Decimal,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Byte[],HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection,HBOS.FS.AMP.UPD.Types.Currency.Currency,System.Int64,System.Boolean,System.Int64,System.Boolean,System.Int64,System.Boolean)">
            <summary>
            Constructor to be used when you create an existing <see cref="T:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund"/> instance.
            </summary>
            <param name="assetFundCode">Asset fund code.</param>
            <param name="shortName">Name of the short.</param>
            <param name="fullName">Full name.</param>
            <param name="companyCode">Company code.</param>
            <param name="unitPrice">Unit price.</param>
            <param name="valuationPoint">Valuation point.</param>
            <param name="unitPriceMovement">Unit price movement.</param>
            <param name="previousUnitPrice">Previous unit price.</param>
            <param name="previousUnitPriceSet">Previous unit price set.</param>
            <param name="authorisedUnitPrice">Authorised unit price.</param>
            <param name="authorisedUnitPriceSet">Authorised unit price set.</param>
            <param name="lockedForCalculation">Locked for calculation.</param>
            <param name="AMTolerance">AM tolerance.</param>
            <param name="unitPriceSet">Unit price set.</param>
            <param name="unitPriceMovementSet">Unit price movement set.</param>
            <param name="AMToleranceSet">AM tolerance set.</param>
            <param name="valuationPointSet">Valuation point set.</param>
            <param name="timeStamp">Time stamp.</param>
            <param name="assetMovementConstituentCollection">Asset movement consitituent collection.</param>
            <param name="assetFundCurrency"></param>
            <param name="type">O=OEIC,L=Linked or C=Composite </param>
            <param name="benchmarkSplitSnapshotID"></param>
            <param name="benchmarkSplitSnapshotIDSet"></param>
            <param name="currencyRateSnapshotID"></param>
            <param name="currencyRateSnapshotIDSet"></param>
            <param name="indexValueSnapshotID"></param>
            <param name="indexValueSnapshotIDSet"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.#ctor(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AssetFundTypeEnum,System.String,System.String,System.String,System.String,System.Byte[],HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection,HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection,HBOS.FS.AMP.UPD.Types.Currency.Currency,System.Int32)">
            <summary>
            Initialises the asset fund with data for light use only (eg static data)
            </summary>
            <param name="assetFundCode">The HiPortfolio fund code.</param>
            <param name="shortName">The short name of the asset fund</param>
            <param name="fullName">The full name of the asset fund</param>
            <param name="companyCode"></param>
            <param name="lastUpdatedTimeStamp">The database timestamp used for concurrency checking</param>
            <param name="fundGroups">The collection of fund groups associated with this asset fund</param>
            <param name="priceFileId"></param>
            <param name="assetMovementConstituentCollection">The collection of benchmarks with weightings associated with this asset fund</param>
            <param name="type"></param>
            <param name="currency">The Asset Funds Currency</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.#ctor(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AssetFundTypeEnum,System.String,System.String,System.String,System.String,System.Decimal,HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection,HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection)">
            <summary>
            Initialises the asset fund with data for static export use only
            </summary>
            <param name="assetFundCode">The HiPortfolio fund code.</param>
            <param name="shortName">The short name of the asset fund</param>
            <param name="fullName">The full name of the asset fund</param>
            <param name="companyCode">The company code for this asset fund</param>
            <param name="assetMovementTolerance">am tolerance derived from child funds</param>
            <param name="fundGroups">The collection of fund groups associated with this asset fund</param>
            <param name="assetMovementConstituentCollection">The collection of weighted benchmarks associated with this asset fund</param>
            <param name="type">Linked,Composte or OEIC</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.checkTolerance">
            <summary>
            Perform the calculations necessary to check whether the asset movement is within the
            allowed tolerance or not.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.predictAssetMovement">
            <summary>
            Calculate the predicted asset movement.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.Equals(System.Object)">
            <summary>
            Override the Equals as we are only worried if the indexname is the same and not the actual objects
            </summary>
            <param name="obj"></param>
            <returns>true is they have the same index name</returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.op_Equality(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund,HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund)">
            <summary>
            Overloaded equality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.op_Inequality(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund,HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund)">
            <summary>
            Overloaded inequality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.IsLocked(HBOS.FS.AMP.UPD.Types.Funds.FundCollection)">
            <summary>
            Indicates whether the asset fund is locked. 
            Checks child fund is authorised for this.
            </summary>
            <param name="assetFundChildFunds"></param>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.FundGroups">
            <summary>
            The collection of AssetFundGroup that detail the fund groups that this asset fund is linked to.
            This collection shall always exist and shall return an empty collection if the fund is not associated
            with any fund groups.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AssetFundTypeString">
            <summary>
            A string representation of the type used for display and reporting purposes.
            This is just to make life easier for xslt etc
            todo - can we remove display properties from the entity?
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AssetFundCode">
            <summary>
            The unique identifier for the asset fund.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.ShortName">
            <summary>
            The short asset fund name.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.FullName">
            <summary>
            The full asset fund name.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.CompanyCode">
            <summary>
            A code that represents the Company that this Asset Fund belongs to
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.UnitPrice">
            <summary>
            Today's price of the Asset Fund
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.UnitPriceSet">
            <summary>
            Whether the Current price has been set for this asset fund
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AuthorisedUnitPrice">
            <summary>
            Today's authorised price of the Asset Fund
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AuthorisedUnitPriceSet">
            <summary>
            Whether the Current authorised price has been set for this asset fund
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.UnitPriceMovement">
            <summary>
            The proportional movement in the price from previous to current
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.UnitPriceMovementSet">
            <summary>
            Whether the AM has been set for this asset fund
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.PredictedUnitPrice">
            <summary>
            A calculated predicted unit price to use when the actual unit price is not available.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.PredictedUnitPriceSet">
            <summary>
            Flag indicating that the PredictedUnitPrice is a valid value.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.PredictedAssetMovement">
            <summary>
            The predicted Asset Movement for this Asset Fund (derived from Market Value splits)
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.PredictedAssetMovementSet">
            <summary>
            Shows whether the Predicted Asset Movement has been set for this Asset Fund
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.PreviousUnitPrice">
            <summary>
            The previous authorised asset unit price.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.PreviousUnitPriceSet">
            <summary>
            Flag inidcating whether the PreviousUnitPrice is a valid value or not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AssetMovementVariance">
            <summary>
            The difference between Price movement and Predicted Asset Movement
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AssetMovementVarianceSet">
            <summary>
            Whether the difference between Price movement and Predicted Asset Movement has been set
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AssetMovementTolerance">
            <summary>
            The tolerance level set for this asset fund
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AssetMovementTolerancePercentage">
            <summary>
            The tolerance level set for this asset fund as a percentage 
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AssetMovementToleranceSet">
            <summary>
            Whether the AM Tolerance has been set for this asset fund
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.WithinAssetMovementTolerance">
            <summary>
            Whether the Predicted AM movement - Price movement is greater than the tolerance
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.ValuationPoint">
            <summary>
            The latest valuation point for this asset fund
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.ValuationPointSet">
            <summary>
            Whether the Valuation Point has been set for this asset fund
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.LockedForCalculation">
            <summary>
            True if any one fund for the asset fund has a current authorised price.  This means the
            imported data at the time of authorisation is used rather than the latest (in the case of
            reimports).
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.Currency">
            <summary>
            Gets the currency.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AssetMovementConstituents">
            <summary>
            Gets the asset movement constitute collection containing all the weighted benchmarks.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.IndexValueSnapshotIDSet">
            <summary>
            Gets or sets a value indicating whether [currency rate snapshot ID set].
            </summary>
            <value>
            	<c>true</c> if [currency rate snapshot ID set]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.IndexValueSnapshotID">
            <summary>
            Gets or sets the currency rate snapshot ID.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.CurrencyRateSnapshotIDSet">
            <summary>
            Gets or sets a value indicating whether [currency rate snapshot ID set].
            </summary>
            <value>
            	<c>true</c> if [currency rate snapshot ID set]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.CurrencyRateSnapshotID">
            <summary>
            Gets or sets the currency rate snapshot ID.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.BenchmarkSplitSnapshotIDSet">
            <summary>
            Gets or sets a value indicating whether [benchmark split snapshot ID set].
            </summary>
            <value>
            	<c>true</c> if [benchmark split snapshot ID set]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.BenchmarkSplitSnapshotID">
            <summary>
            Gets or sets the benchmark split snapshot ID.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AssetFundType">
            <summary>
            Gets the asset fund type.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.PriceFileId">
            <summary>
            Gets the price file id.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AssetFundTypeEnum">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AssetFundTypeEnum.Linked">
            <summary>
            LinkedFund
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AssetFundTypeEnum.Oeic">
            <summary>
            Open Ended Investment Company (OEIC) fund type
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund.AssetFundTypeEnum.Composite">
            <summary>
            Composite Price Series
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection">
            <summary>
            Summary description for AssetFundCollection.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.#ctor">
            <summary>
            Asset Fund collection constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.#ctor(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection)">
            <summary>
            Asset Fun collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.#ctor(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund[])">
            <summary>
            Asset Fund collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Get the List name for the colleciton
            </summary>
            <param name="listAccessors">Can be null</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Access to the Item Properties.
            </summary>
            <param name="listAccessors"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.CopyTo(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund[])">
            <summary>
            Copies all the AssetFundCollection in the collection to the specified target object
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.CopyTo(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund[],System.Int32)">
            <summary>
            Extract a range of items from the collection starting at the specified start index  
            </summary>
            <param name="array"></param>
            <param name="start"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.Add(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund)">
            <summary>
            Add a new fund to the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.Clear">
            <summary>
            Empty the collection of items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.Contains(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund)">
            <summary>
            Does the collection contain the specified item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.IndexOf(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund)">
            <summary>
            Returns the index of the specified item if it exists in the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.Insert(System.Int32,HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund)">
            <summary>
            Insert an item at the specified position
            </summary>
            <param name="position"></param>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.Remove(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund)">
            <summary>
            Remove the specified item from the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.RemoveAt(System.Int32)">
            <summary>
            Remove an item from the specified position of the collection
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.GetEnumerator">
            <summary>
            Allows ForEach functionality
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.Clone">
            <summary>
            Create a new copy of the collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.AddRange(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection)">
            <summary>
            Add a new range of AssetFundCollection from a AssetFundCollection collection
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.AddRange(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund[])">
            <summary>
            Add a new range of AssetFundCollection from an array
            AddRange Overload
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.ValidateIndex(System.Int32)">
            <summary>
            Is the specified Item index valid
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.ValidateIndex(System.Int32,System.Boolean)">
            <summary>
            Is the specified item index valid
            ValidateIndex overload
            </summary>
            <param name="index"></param>
            <param name="allowEqualEnd"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.NeedsGrowth">
            <summary>
            Does the collection need to increase in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.Grow">
            <summary>
            Increase the size of the collection
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.NeedsTrimming">
            <summary>
            Does the collection needs reducing in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.Trim">
            <summary>
            Reduce the size of the collection to the number of valid items
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.Item(System.Int32)">
            <summary>
            Assign or extract a specific item value from the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.Item(System.String)">
            <summary>
            Extract a specific item from the collection using AssetFundCode
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.Capacity">
            <summary>
            Set or return the size of collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.Enumerator">
            <summary>
            Nested enumerator class
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.Enumerator.MoveNext">
            <summary>
            Move to the next item
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.Enumerator.Reset">
            <summary>
            Reset the current item index to the previous item index
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFundCollection.Enumerator.Current">
            <summary>
            Get the currently selected item from the collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection">
            <summary>
            Summary description for AssetMovementConsitituentCollection.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.#ctor">
            <summary>
            Asset Fund collection constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.#ctor(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection)">
            <summary>
            Asset Fun collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.#ctor(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent[])">
            <summary>
            Asset Fund collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Get the List name for the colleciton
            </summary>
            <param name="listAccessors">Can be null</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Access to the Item Properties.
            </summary>
            <param name="listAccessors"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.CopyTo(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent[])">
            <summary>
            Copies all the Consitituents in the collection to the specified target object
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.CopyTo(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent[],System.Int32)">
            <summary>
            Extract a range of items from the collection starting at the specified start index  
            </summary>
            <param name="array"></param>
            <param name="start"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.Add(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent)">
            <summary>
            Add a new fund to the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.Clear">
            <summary>
            Empty the collection of items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.Contains(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent)">
            <summary>
            Does the collection contain the specified item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.IndexOf(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent)">
            <summary>
            Returns the index of the specified item if it exists in the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.Insert(System.Int32,HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent)">
            <summary>
            Insert an item at the specified position
            </summary>
            <param name="position"></param>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.Remove(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent)">
            <summary>
            Remove the specified item from the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.RemoveAt(System.Int32)">
            <summary>
            Remove an item from the specified position of the collection
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.GetEnumerator">
            <summary>
            Allows ForEach functionality
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.Clone">
            <summary>
            Create a new copy of the collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.AddRange(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection)">
            <summary>
            Add a new range of AssetMovementConsitituentCollection from a AssetMovementConsitituentCollection collection
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.AddRange(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent[])">
            <summary>
            Add a new range of AssetMovementConsitituentCollection from an array
            AddRange Overload
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.ValidateIndex(System.Int32)">
            <summary>
            Is the specified Item index valid
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.ValidateIndex(System.Int32,System.Boolean)">
            <summary>
            Is the specified item index valid
            ValidateIndex overload
            </summary>
            <param name="index"></param>
            <param name="allowEqualEnd"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.NeedsGrowth">
            <summary>
            Does the collection need to increase in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.Grow">
            <summary>
            Increase the size of the collection
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.NeedsTrimming">
            <summary>
            Does the collection needs reducing in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.Trim">
            <summary>
            Reduce the size of the collection to the number of valid items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.TotalMovement">
            <summary>
            Totals the movement of each of the constitute.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.TotalProportion">
            <summary>
            Totals the proportion of all the benchmarks, to 4 dp.
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.Item(System.Int32)">
            <summary>
            Assign or extract a specific item value from the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.Capacity">
            <summary>
            Set or return the size of collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.IsDirty">
            <summary>
            Gets or sets a value indicating whether this instance is dirty.
            </summary>
            <value>
            	<c>true</c> if this instance is dirty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.DoAnyItemsHaveAProportionOfZero">
            <summary>
            Gets a value indicating whether [if any items have A proportion of zero].
            </summary>
            <value>
            	<c>true</c> if [do any items have A proportion of zero]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.Enumerator">
            <summary>
            Nested enumerator class
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.Enumerator.MoveNext">
            <summary>
            Move to the next item
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.Enumerator.Reset">
            <summary>
            Reset the current item index to the previous item index
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituentCollection.Enumerator.Current">
            <summary>
            Get the currently selected item from the collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent">
            <summary>
            Summary description for AssetFundConstituent.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent.CalculateEffect">
            <summary>
            Calculates the  effect (movement*proportion).
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent.CalculateMovement">
            <summary>
            Calculates the movement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent.TotalMovement(System.Decimal)">
            <summary>
            Totals the movement.
            </summary>
            <param name="currencyMovement">Currency movement.</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent.CurrencyMovement">
            <summary>
            Works out the movement.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent.PreviousConversionRate">
            <summary>
            The previous conversion rate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent.CurrentConversionRate">
            <summary>
            The current conversion rate.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent.#ctor(System.Decimal,HBOS.FS.AMP.UPD.Types.BenchMark.IBenchMark)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent"/> instance.
            </summary>
            <param name="proportion">Proportion.</param>
            <param name="benchMark">Bench mark.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent.Equals(System.Object)">
            <summary>
            Override the Equals as we are only worried if the indexname is the same and not the actual objects
            </summary>
            <param name="obj"></param>
            <returns>true is they have the same index name</returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent.op_Equality(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent,HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent)">
            <summary>
            Overloaded equality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent.op_Inequality(HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent,HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent)">
            <summary>
            Overloaded inequality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent.GetHashCode">
            <summary>
            Gets the hash code. Overridden to call the base implementation (????)
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent.ParentAssetFund">
            <summary>
            Gets the parent asset fund.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent.Proportion">
            <summary>
            Gets the proportion this benchmark is of the asset fund split.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetMovementConstituent.BenchMark">
            <summary>
            Gets the bench mark.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile">
            <summary>
            Class representing data for a PriceFile
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile.#ctor(System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="fileName">The Price File name</param>
            <param name="fileDescription">The Price File description</param>
            <param name="extension">File extension</param>
            /// <param name="companyCode">The code of the company this file relates to </param>
            <param name="fileId">Unique Id</param>
            
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile.#ctor(System.String,System.String,System.String,System.Int32,System.String,System.Byte[])">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile"/> instance.
            </summary>
            <param name="fileName">The Price File name</param>
            <param name="fileDescription">The Price File description</param>
            <param name="extension">File extension</param>
            <param name="fileId">Unique Id</param>
            <param name="companyCode">The code of the company this file relates to </param>
            <param name="timestamp">Timestamp.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile.Equals(System.Object)">
            <summary>
            Overridden to return equality of two PriceFile objects based on the PriceFileCode
            </summary>
            <param name="obj">Obj.</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile.op_Equality(HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile,HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile)">
            <summary>
            Overloaded equality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile.op_Inequality(HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile,HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile)">
            <summary>
            Overloaded inequality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile.FileId">
            <summary>
            Gets or sets the file id.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile.FileDescription">
            <summary>
            Gets or sets the description of the file.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile.Extension">
            <summary>
            Gets or sets the extension of the file.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile.CompanyCode">
            <summary>
            Gets or sets the company code.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection">
            <summary>
            Summary description for PriceFileCollection.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.#ctor">
            <summary>
            Asset Fund collection constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.#ctor(HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection)">
            <summary>
            Asset Fun collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.#ctor(HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile[])">
            <summary>
            Asset Fund collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Get the List name for the colleciton
            </summary>
            <param name="listAccessors">Can be null</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Access to the Item Properties.
            </summary>
            <param name="listAccessors"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.CopyTo(HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile[])">
            <summary>
            Copies all the PriceFileCollection in the collection to the specified target object
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.CopyTo(HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile[],System.Int32)">
            <summary>
            Extract a range of items from the collection starting at the specified start index  
            </summary>
            <param name="array"></param>
            <param name="start"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.Add(HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile)">
            <summary>
            Add a new fund to the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.Clear">
            <summary>
            Empty the collection of items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.Contains(HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile)">
            <summary>
            Does the collection contain the specified item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.IndexOf(HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile)">
            <summary>
            Returns the index of the specified item if it exists in the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.Insert(System.Int32,HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile)">
            <summary>
            Insert an item at the specified position
            </summary>
            <param name="position"></param>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.Remove(HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile)">
            <summary>
            Remove the specified item from the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.RemoveAt(System.Int32)">
            <summary>
            Remove an item from the specified position of the collection
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.GetEnumerator">
            <summary>
            Allows ForEach functionality
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.Clone">
            <summary>
            Create a new copy of the collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.AddRange(HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection)">
            <summary>
            Add a new range of PriceFileCollection from a PriceFileCollection collection
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.AddRange(HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFile[])">
            <summary>
            Add a new range of PriceFileCollection from an array
            AddRange Overload
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.ValidateIndex(System.Int32)">
            <summary>
            Is the specified Item index valid
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.ValidateIndex(System.Int32,System.Boolean)">
            <summary>
            Is the specified item index valid
            ValidateIndex overload
            </summary>
            <param name="index"></param>
            <param name="allowEqualEnd"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.NeedsGrowth">
            <summary>
            Does the collection need to increase in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.Grow">
            <summary>
            Increase the size of the collection
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.NeedsTrimming">
            <summary>
            Does the collection needs reducing in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.Trim">
            <summary>
            Reduce the size of the collection to the number of valid items
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.Item(System.Int32)">
            <summary>
            Assign or extract a specific item value from the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.Capacity">
            <summary>
            Set or return the size of collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.Enumerator">
            <summary>
            Nested enumerator class
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.Enumerator.MoveNext">
            <summary>
            Move to the next item
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.Enumerator.Reset">
            <summary>
            Reset the current item index to the previous item index
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.PriceFileCollection.Enumerator.Current">
            <summary>
            Get the currently selected item from the collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.BenchMark.BenchMarkAvailabilityState">
            <summary>
            Enumeration of the state of avalibility of this enum, 
            this (for example) will depend on Authorisation state if the benchmark is a fund.
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.BenchMark.BenchMarkAvailabilityState.Available">
            <summary>
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.BenchMark.BenchMarkAvailabilityState.AvailableWithWarnings">
            <summary>
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.BenchMark.BenchMarkAvailabilityState.Unavailable">
            <summary>
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.BenchMark.IBenchMark">
            <summary>
            An interface to be implemented by all type which Asset Funds can be Benchmarked against.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.BenchMark.IBenchMark.Movement">
            <summary>
            Gets the Bench Mark movement.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.BenchMark.IBenchMark.Currency">
            <summary>
            Gets the Bench Mark currency.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.BenchMark.IBenchMark.Availability">
            <summary>
            Gets the state of availability for the Bench Mark.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.BenchMark.IBenchMark.BenchMarkType">
            <summary>
            Gets the bench mark type.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.BenchMark.IBenchMark.BenchMarkSubType">
            <summary>
            Gets the bench mark sub type.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.BenchMark.IBenchMark.PreviousBenchmarkValue">
            <summary>
            Gets the previous benchmark value.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.BenchMark.IBenchMark.CurrentBenchmarkValue">
            <summary>
            Gets the current benchmark value.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Companies.Company">
            <summary>
            The HBOS company with which users and funds are associated.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.Company.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.Company.#ctor(System.String)">
            <summary>
            Initialise the CompanyCode as this is a read-only property.
            </summary>
            <param name="companyCode">The instance company code.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.Company.#ctor(System.String,System.String)">
            <summary>
            Overloaded constructor
            </summary>
            <param name="companyCode">The company code for the company</param>
            <param name="companyName">The company name for the company</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.Company.#ctor(System.String,System.String,System.DateTime,System.DateTime,System.Byte[])">
            <summary>
            Overloaded constructor
            </summary>
            <param name="companyCode">The company code for the company</param>
            <param name="companyName">The company name for the company</param>
            <param name="timeStamp">Modification time stamp</param>
            <param name="valuationPointTime">The company valuation point time part</param>
            <param name="valuationDay">The companies valuation day</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.Company.#ctor(System.String,System.String,System.DateTime,System.DateTime,System.DateTime,System.Byte[],System.DateTime)">
            <summary>
            Overloaded constructor
            </summary>
            <param name="companyCode">The company code for the company</param>
            <param name="companyName">The company name for the company</param>
            <param name="timeStamp">Modification time stamp</param>
            <param name="valuationPointTime">The company valuation point time part</param>
            <param name="valuationDay">The companies valuation day</param>
            <param name="nextvaluationPointTime"></param>
            <param name="previousvaluationPointTime"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.Company.#ctor(System.String,System.String,System.Byte[])">
            <summary>
            Overloaded constructor
            </summary>
            <param name="companyCode">The company code for the company</param>
            <param name="companyName">The company name for the company</param>
            <param name="timeStamp">Modification time stamp</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Companies.Company.CompanyCode">
            <summary>
            The unique identifier for the company.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Companies.Company.CompanyName">
            <summary>
            The company name.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Companies.Company.ValuationDate">
            <summary>
            Gets or sets the valuation point time.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Companies.Company.NextValuationDate">
            <summary>
            Gets the next valuation point time.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Companies.Company.PreviousValuationDate">
            <summary>
            Gets the previous valuation point time.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection">
            <summary>
            Summary description for CompanyCollection.
            </summary>	
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.#ctor">
            <summary>
            FundGroup collection constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.#ctor(HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection)">
            <summary>
            FundGroup collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.#ctor(HBOS.FS.AMP.UPD.Types.Companies.Company[])">
            <summary>
            FundGroup collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Get the List name for the colleciton
            </summary>
            <param name="listAccessors">Can be null</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Access to the Item Properties.
            </summary>
            <param name="listAccessors"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.CopyTo(HBOS.FS.AMP.UPD.Types.Companies.Company[])">
            <summary>
            Copies all the CompanyCollection in the collection to the specified target object
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.CopyTo(HBOS.FS.AMP.UPD.Types.Companies.Company[],System.Int32)">
            <summary>
            Extract a range of items from the collection starting at the specified start index  
            </summary>
            <param name="array"></param>
            <param name="start"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.Add(HBOS.FS.AMP.UPD.Types.Companies.Company)">
            <summary>
            Add a new fund to the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.Clear">
            <summary>
            Empty the collection of items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.Contains(HBOS.FS.AMP.UPD.Types.Companies.Company)">
            <summary>
            Does the collection contain the specified item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.IndexOf(HBOS.FS.AMP.UPD.Types.Companies.Company)">
            <summary>
            Returns the index of the specified item if it exists in the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.Insert(System.Int32,HBOS.FS.AMP.UPD.Types.Companies.Company)">
            <summary>
            Insert an item at the specified position
            </summary>
            <param name="position"></param>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.Remove(HBOS.FS.AMP.UPD.Types.Companies.Company)">
            <summary>
            Remove the specified item from the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.RemoveAt(System.Int32)">
            <summary>
            Remove an item from the specified position of the collection
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.GetEnumerator">
            <summary>
            Allows ForEach functionality
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.Clone">
            <summary>
            Create a new copy of the collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.AddRange(HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection)">
            <summary>
            Add a new range of CompanyCollection from a CompanyCollection collection
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.AddRange(HBOS.FS.AMP.UPD.Types.Companies.Company[])">
            <summary>
            Add a new range of CompanyCollection from an array
            AddRange Overload
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.ValidateIndex(System.Int32)">
            <summary>
            Is the specified Item index valid
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.ValidateIndex(System.Int32,System.Boolean)">
            <summary>
            Is the specified item index valid
            ValidateIndex overload
            </summary>
            <param name="index"></param>
            <param name="allowEqualEnd"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.NeedsGrowth">
            <summary>
            Does the collection need to increase in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.Grow">
            <summary>
            Increase the size of the collection
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.NeedsTrimming">
            <summary>
            Does the collection needs reducing in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.Trim">
            <summary>
            Reduce the size of the collection to the number of valid items
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.Item(System.Int32)">
            <summary>
            Assign or extract a specific item value from the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.Capacity">
            <summary>
            Set or return the size of collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.Enumerator">
            <summary>
            Nested enumerator class
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.Enumerator.MoveNext">
            <summary>
            Move to the next item
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.Enumerator.Reset">
            <summary>
            Reset the current item index to the previous item index
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Companies.CompanyCollection.Enumerator.Current">
            <summary>
            Get the currently selected item from the collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Countries.Country">
            <summary>
            Class representing data for a country
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.Country.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.Country.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="CountryCode">The Country code</param>
            
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.Country.#ctor(System.String,System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="CountryCode">The Country code</param>
            <param name="countryName"></param>
            
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.Country.#ctor(System.String,System.String,System.String,System.Byte[])">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.Countries.Country"/> instance.
            </summary>
            <param name="CountryCode">Country code.</param>
            <param name="CountryName">Name of the Country.</param>
            <param name="currencyCode">The Code of the Counties default currency</param>
            <param name="timestamp">Timestamp.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.Country.Equals(System.Object)">
            <summary>
            Overridden to return equality of two Country objects based on the CountryCode
            </summary>
            <param name="obj">Obj.</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.Country.op_Equality(HBOS.FS.AMP.UPD.Types.Countries.Country,HBOS.FS.AMP.UPD.Types.Countries.Country)">
            <summary>
            Overloaded equality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.Country.op_Inequality(HBOS.FS.AMP.UPD.Types.Countries.Country,HBOS.FS.AMP.UPD.Types.Countries.Country)">
            <summary>
            Overloaded inequality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.Country.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Countries.Country.CountryCode">
            <summary>
            Country code for the country
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Countries.Country.CurrentCountryCode">
            <summary>
            Gets or sets the current country code (used for updating).
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Countries.Country.CountryName">
            <summary>
            Name of the country
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Countries.Country.CurrencyCode">
            <summary>
            Gets or sets the currency.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection">
            <summary>
            Summary description for CountryCollection.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.#ctor">
            <summary>
            Asset Fund collection constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.#ctor(HBOS.FS.AMP.UPD.Types.Countries.CountryCollection)">
            <summary>
            Asset Fun collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.#ctor(HBOS.FS.AMP.UPD.Types.Countries.Country[])">
            <summary>
            Asset Fund collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Get the List name for the colleciton
            </summary>
            <param name="listAccessors">Can be null</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Access to the Item Properties.
            </summary>
            <param name="listAccessors"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.CopyTo(HBOS.FS.AMP.UPD.Types.Countries.Country[])">
            <summary>
            Copies all the CountryCollection in the collection to the specified target object
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.CopyTo(HBOS.FS.AMP.UPD.Types.Countries.Country[],System.Int32)">
            <summary>
            Extract a range of items from the collection starting at the specified start index  
            </summary>
            <param name="array"></param>
            <param name="start"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.Add(HBOS.FS.AMP.UPD.Types.Countries.Country)">
            <summary>
            Add a new fund to the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.Clear">
            <summary>
            Empty the collection of items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.Contains(HBOS.FS.AMP.UPD.Types.Countries.Country)">
            <summary>
            Does the collection contain the specified item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.IndexOf(HBOS.FS.AMP.UPD.Types.Countries.Country)">
            <summary>
            Returns the index of the specified item if it exists in the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.Insert(System.Int32,HBOS.FS.AMP.UPD.Types.Countries.Country)">
            <summary>
            Insert an item at the specified position
            </summary>
            <param name="position"></param>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.Remove(HBOS.FS.AMP.UPD.Types.Countries.Country)">
            <summary>
            Remove the specified item from the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.RemoveAt(System.Int32)">
            <summary>
            Remove an item from the specified position of the collection
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.GetEnumerator">
            <summary>
            Allows ForEach functionality
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.Clone">
            <summary>
            Create a new copy of the collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.AddRange(HBOS.FS.AMP.UPD.Types.Countries.CountryCollection)">
            <summary>
            Add a new range of CountryCollection from a CountryCollection collection
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.AddRange(HBOS.FS.AMP.UPD.Types.Countries.Country[])">
            <summary>
            Add a new range of CountryCollection from an array
            AddRange Overload
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.ValidateIndex(System.Int32)">
            <summary>
            Is the specified Item index valid
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.ValidateIndex(System.Int32,System.Boolean)">
            <summary>
            Is the specified item index valid
            ValidateIndex overload
            </summary>
            <param name="index"></param>
            <param name="allowEqualEnd"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.NeedsGrowth">
            <summary>
            Does the collection need to increase in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.Grow">
            <summary>
            Increase the size of the collection
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.NeedsTrimming">
            <summary>
            Does the collection needs reducing in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.Trim">
            <summary>
            Reduce the size of the collection to the number of valid items
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.Item(System.Int32)">
            <summary>
            Assign or extract a specific item value from the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.Capacity">
            <summary>
            Set or return the size of collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.Enumerator">
            <summary>
            Nested enumerator class
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.Enumerator.MoveNext">
            <summary>
            Move to the next item
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.Enumerator.Reset">
            <summary>
            Reset the current item index to the previous item index
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Countries.CountryCollection.Enumerator.Current">
            <summary>
            Get the currently selected item from the collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Currency.Currency">
            <summary>
            Use this class for currency objects
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.Currency.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.Currency.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="currencyCode">The currency code</param>
            
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.Currency.#ctor(System.String,System.Decimal,System.Decimal)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.Currency.Currency"/> instance.
            </summary>
            <param name="currencyCode">Currency code.</param>
            <param name="currentRate">Current rate.</param>
            <param name="previousRate">Previous rate.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.Currency.#ctor(System.String,System.String,System.Byte[])">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.Currency.Currency"/> instance.
            </summary>
            <param name="currencyCode">Currency code.</param>
            <param name="currencyName">Name of the currency.</param>
            <param name="timestamp">Timestamp.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.Currency.CalculateMovement(HBOS.FS.AMP.UPD.Types.Currency.Currency,HBOS.FS.AMP.UPD.Types.Currency.Currency)">
            <summary>
            Calculates the movement based on todays conversion rate - the last conversion rate all divided by the last conversion rate.
            </summary>
            <param name="currencyFrom">Currency from.</param>
            <param name="currencyTo">Currency to.</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.Currency.PreviousConversionRate(HBOS.FS.AMP.UPD.Types.Currency.Currency,HBOS.FS.AMP.UPD.Types.Currency.Currency)">
            <summary>
            Previouses the conversion rate.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.Currency.TodaysConversionRate(HBOS.FS.AMP.UPD.Types.Currency.Currency,HBOS.FS.AMP.UPD.Types.Currency.Currency)">
            <summary>
            Todayses the conversion rate.
            </summary>
            <param name="from">From.</param>
            <param name="to">To.</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.Currency.Equals(System.Object)">
            <summary>
            Overridden to return equality of two currency objects based on the CurrencyCode
            </summary>
            <param name="obj">Obj.</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.Currency.op_Equality(HBOS.FS.AMP.UPD.Types.Currency.Currency,HBOS.FS.AMP.UPD.Types.Currency.Currency)">
            <summary>
            Overloaded equality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.Currency.op_Inequality(HBOS.FS.AMP.UPD.Types.Currency.Currency,HBOS.FS.AMP.UPD.Types.Currency.Currency)">
            <summary>
            Overloaded inequality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.Currency.GetHashCode">
            <summary>
            Gets the hash code. Overridden to return the has code of the CurrencyCode
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Currency.Currency.CurrencyCode">
            <summary>
            The currency code
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Currency.Currency.CurrencyName">
            <summary>
            Gets or sets the name of the currency.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Currency.Currency.CurrentCurrencyCode">
            <summary>
            Gets or sets the current currency code.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Currency.Currency.CurrentRate">
            <summary>
            Gets the current rate.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Currency.Currency.PreviousRate">
            <summary>
            Gets the previous rate.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Currency.Currency.GBPound">
            <summary>
            Gets the gb pound.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Currency.Currency.GlobalMarket">
            <summary>
            Gets the global market which can be compared against to 
            determine if an object has no Currency.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection">
            <summary>
            Collection of Currency objects
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection"/> instance.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Get the List name for the colleciton
            </summary>
            <param name="listAccessors">Can be null</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Access to the Item Properties.
            </summary>
            <param name="listAccessors"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.CopyTo(HBOS.FS.AMP.UPD.Types.Currency.Currency[])">
            <summary>
            Copies all the FundCollection in the collection to the specified target object
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.CopyTo(HBOS.FS.AMP.UPD.Types.Currency.Currency[],System.Int32)">
            <summary>
            Extract a range of items from the collection starting at the specified start index  
            </summary>
            <param name="array"></param>
            <param name="start"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.Add(HBOS.FS.AMP.UPD.Types.Currency.Currency)">
            <summary>
            Add a new fund to the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.Clear">
            <summary>
            Empty the collection of items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.Contains(HBOS.FS.AMP.UPD.Types.Currency.Currency)">
            <summary>
            Does the collection contain the specified item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.IndexOf(HBOS.FS.AMP.UPD.Types.Currency.Currency)">
            <summary>
            Returns the index of the specified item if it exists in the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.Insert(System.Int32,HBOS.FS.AMP.UPD.Types.Currency.Currency)">
            <summary>
            Insert an item at the specified position
            </summary>
            <param name="position"></param>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.Remove(HBOS.FS.AMP.UPD.Types.Currency.Currency)">
            <summary>
            Remove the specified item from the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.RemoveAt(System.Int32)">
            <summary>
            Remove an item from the specified position of the collection
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.GetEnumerator">
            <summary>
            Allows ForEach functionality
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.Clone">
            <summary>
            Create a new copy of the collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.AddRange(HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection)">
            <summary>
            Add a new range of CurrencyCollection from a 
            CurrencyCollection collection
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.AddRange(HBOS.FS.AMP.UPD.Types.Currency.Currency[])">
            <summary>
            Add a new range of CurrencyCollection from an array
            AddRange Overload
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.ValidateIndex(System.Int32)">
            <summary>
            Is the specified Item index valid
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.ValidateIndex(System.Int32,System.Boolean)">
            <summary>
            Is the specified item index valid
            ValidateIndex overload
            </summary>
            <param name="index"></param>
            <param name="allowEqualEnd"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.NeedsGrowth">
            <summary>
            Does the collection need to increase in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.Grow">
            <summary>
            Increase the size of the collection
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.NeedsTrimming">
            <summary>
            Does the collection needs reducing in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.Trim">
            <summary>
            Reduce the size of the collection to the number of valid items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copy To Method implementation
            </summary>
            <param name="array"></param>
            <param name="start"></param>
            <remarks>IB The other implementation was defective and should use this implementation</remarks>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.Item(System.Int32)">
            <summary>
            Assign or extract a specific item value from the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.Capacity">
            <summary>
            Set or return the size of collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.Enumerator">
            <summary>
            Nested enumerator class
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.Enumerator.MoveNext">
            <summary>
            Move to the next item
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.Enumerator.Reset">
            <summary>
            Reset the current item index to the previous item index
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Currency.CurrencyCollection.Enumerator.Current">
            <summary>
            Get the currently selected item from the collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.DistributionFiles.DatabaseXsltLoader">
            <summary>
            Summary description for DatabaseXsltLoader.
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.DistributionFiles.IXsltLoader">
            <summary>
            Interface to be implemented by classes that load xslt
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.IXsltLoader.Load">
            <summary>
            Loads this XSLT from the source
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DatabaseXsltLoader.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.DistributionFiles.DatabaseXsltLoader"/> instance.
            </summary>
            <param name="xsltSource">XSLT source.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DatabaseXsltLoader.Load">
            <summary>
            Loads the xslt from the database into a XslTransform object
            </summary>
            <returns>A loaded XslTransform object</returns>
            <exception cref="T:HBOS.FS.AMP.UPD.Exceptions.ExportException">
            If the xml/xslt is invalid or the user has insufficient rights to load the transformation
            </exception>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile">
            <summary>
            Summary description for DistributionFile.
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.m_ManipulationClassToInvoke">
            <summary>
            Represents a physical file that the system will distribute.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.#ctor">
            <summary>
            Create a new Distribution File
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.#ctor(System.Int32,System.String,System.String,System.String,HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileStatuses,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Byte[])">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile"/> instance for static data maintenance
            </summary>
            <param name="fileID">File ID.</param>
            <param name="fileDescription">File description.</param>
            <param name="fileName">Name of the file.</param>
            <param name="filePath">File path.</param>
            <param name="status">Status.</param>
            <param name="manipulationClassToInvoke">Manipulation class to invoke.</param>
            <param name="fundGroupNumberRequired">Fund group number required.</param>
            <param name="decimalPlacesRequired">Decimal places required.</param>
            <param name="significantDecimalPlacesRequired">Significant decimal places required.</param>
            <param name="majorDenominationRequired">Major denomination required.</param>
            <param name="timeStamp">Time stamp.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.#ctor(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileStatuses,System.Int32,System.Int32,System.Int32,HBOS.FS.AMP.UPD.Types.DistributionFiles.IXsltLoader,System.Byte[])">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile"/> instance for distribution.
            </summary>
            <param name="fileID">File ID.</param>
            <param name="fileDescription">File description.</param>
            <param name="fileName">Name of the file.</param>
            <param name="filePath">File path.</param>
            <param name="archiveFolder">Archive folder.</param>
            <param name="companyCode">Company code.</param>
            <param name="manipulationClassToInvoke">Manipulation class to invoke.</param>
            <param name="status">Status.</param>
            <param name="distributedCount">Distributed count.</param>
            <param name="distributableCount">Distributable count.</param>
            <param name="totalFundCount">Total fund count.</param>
            <param name="xsltLoader">XSLT loader.</param>
            <param name="timeStamp">Time stamp.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.ToString">
            <summary>
            Override the ToString method to provide useful information.
            </summary>
            <returns>The FileDescription</returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.Equals(System.Object)">
            <summary>
            Overridden to check equality based on FileId
            </summary>
            <param name="obj">Obj.</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.op_Equality(HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile,HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile)">
            <summary>
            Overloaded equality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.op_Inequality(HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile,HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile)">
            <summary>
            Overloaded inequality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.LoadXslt">
            <summary>
            Loads the XSLT for this distribution.
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.ManipulationClassToInvoke">
            <summary>
            Gets the manipulation class to invoke.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.FileID">
            <summary>
            The database unique key for this file.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.FileDescription">
            <summary>
            The description of this file.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.FileName">
            <summary>
            The physical file name of this file.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.FilePath">
            <summary>
            The physical file path of this file.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.Status">
            <summary>
            The status for this file
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.ArchiveFolder">
            <summary>
            The folder location to archive this file
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.CompanyCode">
            <summary>
            The company code associated with this files data
            </summary>
            <remarks>This is used for archiving to attach the company code to the archive filename</remarks>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.DistributedCount">
            <summary>
            Gets the count of distributed funds for this file.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.DistributableCount">
            <summary>
            Gets the count of distributable funds for this file.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.TotalFundCount">
            <summary>
            Gets the total count of funds expected on the output file.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.FundGroupNumberRequired">
            <summary>
            Gets or sets a value indicating whether [fund group number required].
            </summary>
            <value>
            	<c>true</c> if [fund group number required]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.DecimalPlacesRequired">
            <summary>
            Gets or sets a value indicating whether [decimal places required].
            </summary>
            <value>
            	<c>true</c> if [decimal places required]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.SignificantDecimalPlacesRequired">
            <summary>
            Gets or sets a value indicating whether [significant decimal places required].
            </summary>
            <value>
            	<c>true</c> if [significant decimal places required]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.MajorDenimonationRequired">
            <summary>
            Gets or sets a value indicating whether [major denimonation required].
            </summary>
            <value>
            	<c>true</c> if [major denimonation required]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile.xsltLoader">
            <summary>
            Gets or sets the XSLT loader.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileStatuses">
            <summary>
            Enumeration of the status for each distribution file
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileStatuses.Unavailable">
            <summary>
            Not all the funds in this distribution have been released
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileStatuses.Partial">
            <summary>
            Not all of the funds in this distribution have been released but partial distributions
            are allowed
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileStatuses.Available">
            <summary>
            All funds in the distribution have been released and this distribution can be carried out
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileStatuses.Distributed">
            <summary>
            This distribution has already been distributed, it may be re-distributed
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection">
            <summary>
            Summary description for DistributionFileCollection.
            </summary>	
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.#ctor">
            <summary>
            DistributionFile collection constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.#ctor(HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection)">
            <summary>
            DistributionFile collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.#ctor(HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile[])">
            <summary>
            DistributionFile collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Get the List name for the colleciton
            </summary>
            <param name="listAccessors">Can be null</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Access to the Item Properties.
            </summary>
            <param name="listAccessors"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.CopyTo(HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile[])">
            <summary>
            Copies all the DistributionFiles in the collection to the specified target object
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.CopyTo(HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile[],System.Int32)">
            <summary>
            Extract a range of items from the collection starting at the specified start index  
            </summary>
            <param name="array"></param>
            <param name="start"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.Add(HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile)">
            <summary>
            Add a new fund to the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.Clear">
            <summary>
            Empty the collection of items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.Contains(HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile)">
            <summary>
            Does the collection contain the specified item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.IndexOf(HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile)">
            <summary>
            Returns the index of the specified item if it exists in the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.Insert(System.Int32,HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile)">
            <summary>
            Insert an item at the specified position
            </summary>
            <param name="position"></param>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.Remove(HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile)">
            <summary>
            Remove the specified item from the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.RemoveAt(System.Int32)">
            <summary>
            Remove an item from the specified position of the collection
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.GetEnumerator">
            <summary>
            Allows ForEach functionality
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.Clone">
            <summary>
            Create a new copy of the collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.AddRange(HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection)">
            <summary>
            Add a new range of DistributionFileCollection from a DistributionFileCollection collection
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.AddRange(HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFile[])">
            <summary>
            Add a new range of DistributionFileCollection from an array
            AddRange Overload
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.ValidateIndex(System.Int32)">
            <summary>
            Is the specified Item index valid
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.ValidateIndex(System.Int32,System.Boolean)">
            <summary>
            Is the specified item index valid
            ValidateIndex overload
            </summary>
            <param name="index"></param>
            <param name="allowEqualEnd"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.NeedsGrowth">
            <summary>
            Does the collection need to increase in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.Grow">
            <summary>
            Increase the size of the collection
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.NeedsTrimming">
            <summary>
            Does the collection needs reducing in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.Trim">
            <summary>
            Reduce the size of the collection to the number of valid items
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.Item(System.Int32)">
            <summary>
            Assign or extract a specific item value from the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.Capacity">
            <summary>
            Set or return the size of collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.Enumerator">
            <summary>
            Nested enumerator class
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.Enumerator.MoveNext">
            <summary>
            Move to the next item
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.Enumerator.Reset">
            <summary>
            Reset the current item index to the previous item index
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileCollection.Enumerator.Current">
            <summary>
            Get the currently selected item from the collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.DistributionFiles.EmbeddedResourceXsltLoader">
            <summary>
            Loads xslt from embedded resources
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.EmbeddedResourceXsltLoader.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.DistributionFiles.EmbeddedResourceXsltLoader"/> instance.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.EmbeddedResourceXsltLoader.Load">
            <summary>
            Loads the xslt from the embedded resource
            </summary>
            <returns></returns>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.DistributionFiles.FileXsltLoader">
            <summary>
            Loads xslt files from the file system
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.FileXsltLoader.#ctor(System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.DistributionFiles.FileXsltLoader"/> instance.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.FileXsltLoader.Load">
            <summary>
            Loads xslt from the file
            </summary>
            <returns></returns>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.DistributionFiles.FundGroupDistributionFile">
            <summary>
            Summary description for FundGroupDistributionFile.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.FundGroupDistributionFile.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.DistributionFiles.FundGroupDistributionFile"/> instance.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DistributionFiles.FundGroupDistributionFile.#ctor(System.Int32,System.String,System.String,System.String,HBOS.FS.AMP.UPD.Types.DistributionFiles.DistributionFileStatuses,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Object,System.Boolean,System.Int32,System.Int32,System.Byte[])">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.DistributionFiles.FundGroupDistributionFile"/> instance for static data maintenance
            </summary>
            <param name="fileID">File ID.</param>
            <param name="fileDescription">File description.</param>
            <param name="fileName">Name of the file.</param>
            <param name="filePath">File path.</param>
            <param name="status">Status.</param>
            <param name="manipulationClassToInvoke">Manipulation class to invoke.</param>
            <param name="fundGroupNumberRequired">Fund group number required.</param>
            <param name="decimalPlacesRequired">Decimal places required.</param>
            <param name="significantDecimalPlacesRequired">Significant decimal places required.</param>
            <param name="majorDenominationRequired">Major denomination required.</param>
            <param name="fundGroupNumber">Fund group number.</param>
            <param name="majorDenimonation">Major denimonation.</param>
            <param name="decimalPlaces">Decimal places.</param>
            <param name="significantDecimalPlaces">Significant decimal places.</param>
            <param name="timeStamp">Time stamp.</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.FundGroupDistributionFile.MajorDenomination">
            <summary>
            Gets or sets a value indicating whether to use [major denomination].
            </summary>
            <value>
            	<c>true</c> if [major denomination]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.FundGroupDistributionFile.FundGroupNumber">
            <summary>
            Gets or sets the fund group number.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.FundGroupDistributionFile.NumberOfDecimalPlaces">
            <summary>
            Gets or sets the number of decimal places.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.DistributionFiles.FundGroupDistributionFile.NumberOfSignificantDecimalPlaces">
            <summary>
            Gets or sets the number of significant decimal places.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Factors.Factor">
            <summary>
            The base class for the various factors that can affect the predicted price.
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Factors.IFactor">
            <summary>
            The interface to be implemented by a factor in order for its effect to be calculated generically
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.IFactor.CalculateEffect">
            <summary>
            Calculates the effect of this factor on the predicted price
            using properties that have been set through the concrete class interface
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.IFactor.IsValid">
            <summary>
            Indicates that the factor data is valid and ok to save (or use in calculations)
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.IFactor.IsIncludedInSummation">
            <summary>
            Indicates to calling collection that this factor
            is used in SumFactors, i.e. is in the factor summation
            part of the movement calculation formula
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.IFactor.IsSet">
            <summary>
            Indicates to caller that the property values constitute a valid factor,
            and that the factor hasn't just been created due to property access.
            i.e. this flag indicates whether any properties make it worth saving or not.
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.IFactor.effectToday">
            <summary>
            Gets the effect today.
            </summary>
            <value></value>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Factors.Factor.m_ratioValue">
            <summary>
            The base percent by which this factor affects the predicted price (in conjunction with any other variables).
            Is protected so that sub class can use directly in calculations for the Factor Effect
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Factors.Factor.m_authorisedRatioValue">
            <summary>
            The base percent by which this factor affects the predicted price (in conjunction with any other variables),
            once it has been authorised
            Is protected so that sub class can use directly in calculations for the Factor Effect
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Factors.Factor.m_effectiveDate">
            <summary>
            The date that the factor becomes effective. Is DateTime.MinValue if not set (00:00:00.0000000, January 1, 0001)
            Is protected so that sub class can use directly in calculations for the Factor Effect
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Factors.Factor.m_factorID">
            <summary>
            The unique id set by the database
            Is protected so that sub class can set it directly (and without setting dirty flag if necessary)
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.Factor.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.Factor.#ctor(System.Decimal,System.Int32,System.DateTime,System.Byte[])">
            <summary>
            Base constructor to be called from sub class
            </summary>
            <param name="ratioValue"></param>
            <param name="factorID"></param>
            <param name="effectiveDate"></param>
            <param name="timestamp"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.Factor.#ctor(System.Decimal)">
            <summary>
            Base constructor to be called from sub class, for read only factor types
            </summary>
            <param name="ratioValue"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.Factor.setDirtyFlag">
            <summary>
            Set the modified flag to be true
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.Factor.CalculateEffect">
            <summary>
            Is the default calculation
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.Factor.IsValid">
            <summary>
            Default validity check
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.Factor.IsIncludedInSummation">
            <summary>
            Indicates to calling collection that this factor
            is used in SumFactors, i.e. is in the factor summation
            part of the movement calculation formula. Default is to include.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.Factor.IsSet">
            <summary>
            Indicates to caller that the property values constitute a valid factor,
            and that the factor hasn't just been created due to property access.
            i.e. this flag indicates whether any properties make it worth saving or not.
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.Factor.FactorID">
            <summary>
            The ID for the  factor used in the price calculation.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.Factor.FactorIDSet">
            <summary>
            Flag indicating whether the  factor ID contains a valid value.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.Factor.RatioValue">
            <summary>
            The base percent by which this factor affects the predicted price (in conjunction with any other variables).
            Is as a ratio relative to 1.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.Factor.PercentValue">
            <summary>
            The base percent by which this factor affects the predicted price (in conjunction with any other variables).
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.Factor.AuthorisedRatioValue">
            <summary>
            The base percent by which this factor affects the predicted price (in conjunction with any other variables),
            once it has been authorised
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.Factor.AuthorisedPercentValue">
            <summary>
            The base percent by which this factor affects the predicted price (in conjunction with any other variables),
            once it has been authorised
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.Factor.EffectiveDate">
            <summary>
            The date that the factor becomes effective. Is DateTime.MinValue if not set (00:00:00.0000000, January 1, 0001)
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.Factor.EffectiveDateSet">
            <summary>
            Flag indicating whether the  factor ID contains a valid value.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.Factor.DisplayName">
            <summary>
            Used in Fund status property Grid, maybe ToString 
            could have been overriden but it looked like that 
            was used elsewhere for a different reason?
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.Factor.effectToday">
            <summary>
            Gets the effect today.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.#ctor">
            <summary>
            Fund collection constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.#ctor(HBOS.FS.AMP.UPD.Types.Factors.FactorCollection)">
            <summary>
            Fund collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.#ctor(HBOS.FS.AMP.UPD.Types.Factors.Factor[])">
            <summary>
            Fund collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Get the List name for the colleciton
            </summary>
            <param name="listAccessors">Can be null</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Access to the Item Properties.
            </summary>
            <param name="listAccessors"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.CopyTo(HBOS.FS.AMP.UPD.Types.Factors.Factor[])">
            <summary>
            Copies all the FactorCollection in the collection to the specified target object
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.CopyTo(HBOS.FS.AMP.UPD.Types.Factors.Factor[],System.Int32)">
            <summary>
            Extract a range of items from the collection starting at the specified start index  
            </summary>
            <param name="array"></param>
            <param name="start"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.Add(HBOS.FS.AMP.UPD.Types.Factors.Factor)">
            <summary>
            Add a new fund to the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.Clear">
            <summary>
            Empty the collection of items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.Contains(HBOS.FS.AMP.UPD.Types.Factors.Factor)">
            <summary>
            Does the collection contain the specified item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.IndexOf(HBOS.FS.AMP.UPD.Types.Factors.Factor)">
            <summary>
            Returns the index of the specified item if it exists in the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.Insert(System.Int32,HBOS.FS.AMP.UPD.Types.Factors.Factor)">
            <summary>
            Insert an item at the specified position
            </summary>
            <param name="position"></param>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.Remove(HBOS.FS.AMP.UPD.Types.Factors.Factor)">
            <summary>
            Remove the specified item from the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.RemoveAt(System.Int32)">
            <summary>
            Remove an item from the specified position of the collection
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.GetEnumerator">
            <summary>
            Allows ForEach functionality
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.Clone">
            <summary>
            Create a new copy of the collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.AddRange(HBOS.FS.AMP.UPD.Types.Factors.FactorCollection)">
            <summary>
            Add a new range of FactorCollection from a FactorCollection collection
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.AddRange(HBOS.FS.AMP.UPD.Types.Factors.Factor[])">
            <summary>
            Add a new range of FactorCollection from an array
            AddRange Overload
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.ValidateIndex(System.Int32)">
            <summary>
            Is the specified Item index valid
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.ValidateIndex(System.Int32,System.Boolean)">
            <summary>
            Is the specified item index valid
            ValidateIndex overload
            </summary>
            <param name="index"></param>
            <param name="allowEqualEnd"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.NeedsGrowth">
            <summary>
            Does the collection need to increase in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.Grow">
            <summary>
            Increase the size of the collection
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.NeedsTrimming">
            <summary>
            Does the collection needs reducing in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.Trim">
            <summary>
            Reduce the size of the collection to the number of valid items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.SumFactors">
            <summary>
            Sums the effect of each factor within the collection
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.Item(System.Int32)">
            <summary>
            Assign or extract a specific item value from the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.Capacity">
            <summary>
            Set or return the size of collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.Holidays">
            <summary>
            the cached holidays - stored here so that if a new reval factor is added automatically,
            holidays are also added automatically.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.RevaluationFctr">
            <summary>
            The collection contains only one RevaluationFactor, which this property returns.
            If the collection did not contain a revaluation factor, then one is created and added
            to the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.ScalingFctr">
            <summary>
            The collection contains only one ScalingFactor, which this property returns.
            If the collection did not contain a revaluation factor, then one is created and added
            to the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.XFctr">
            <summary>
            The collection contains only one XFactor, which this property returns.
            If the collection did not contain a XFactor factor, then one is created and added
            to the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.ValuationBasisFctr">
            <summary>
            The collection contains only one valuation basis, which this property returns.
            If the collection did not contain a valuation factor, then one is created and added
            to the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.TPE">
            <summary>
            The collection contains only one TaxProvisionEstimate, which this property returns.
            If the collection did not contain a revaluation factor, then one is created and added
            to the collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.Enumerator">
            <summary>
            Nested enumerator class
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.Enumerator.MoveNext">
            <summary>
            Move to the next item
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.Enumerator.Reset">
            <summary>
            Reset the current item index to the previous item index
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.FactorCollection.Enumerator.Current">
            <summary>
            Get the currently selected item from the collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Factors.RevaluationFactor">
            <summary>
            Summary description for RevaluationFactor.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.RevaluationFactor.#ctor">
            <summary>
            Creates a new factor and initialises factor name
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.RevaluationFactor.#ctor(System.Decimal,System.Int32,System.DateTime,System.DateTime,System.Byte[],System.DateTime)">
            <summary>
            Constructor that initialises member variables without setting dirty flag and also initialises factors
            </summary>
            <param name="ratioValue"></param>
            <param name="factorID"></param>
            <param name="effectiveDate"></param>
            <param name="endDate"></param>
            <param name="timestamp"></param>
            <param name="currentValuationDate"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.RevaluationFactor.CalculateEffect">
            <summary>
            Calculates the effect of the Revaulation Factor on the unit price. Overrides default implementation
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.RevaluationFactor.IsValid">
            <summary>
            Default validity check - ensures XFactor >= 0
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.RevaluationFactor.IsSet">
            <summary>
            Indicates to caller that the property values constitute a valid factor,
            and that the factor hasn't just been created due to property access.
            i.e. this flag indicates whether any properties make it worth saving or not.
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.RevaluationFactor.EndDate">
            <summary>
            The base percent by which this factor affects the predicted price (in conjunction with any other variables).
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.RevaluationFactor.EndDateSet">
            <summary>
            Has the end date been set?
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.RevaluationFactor.DisplayName">
            <summary>
            Used in Fund status property Grid, maybe ToString 
            could have been overriden but it looked like that 
            was used elsewhere for a different reason?
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.RevaluationFactor.Holidays">
            <summary>
            the collection of holiday dates required for validation
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.RevaluationFactor.effectToday">
            <summary>
            Gets the effect today.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Factors.ScalingFactor">
            <summary>
            Summary description for ScalingFactor.
            This class currently just uses all defaults and facilities provided by the base class,
            but is used to distinguish as a type.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.ScalingFactor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.ScalingFactor.#ctor(System.Decimal,System.Int32,System.DateTime,System.Byte[])">
            <summary>
            Constructor that initialises member variables without setting dirty flag and also initialises factors
            </summary>
            <param name="ratioValue"></param>
            <param name="factorID"></param>
            <param name="effectiveDate"></param>
            <param name="timestamp"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.ScalingFactor.IsValid">
            <summary>
            Default validity check - ensures XFactor >= 0
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.ScalingFactor.DisplayName">
            <summary>
            Used in Fund status property Grid, maybe ToString 
            could have been overriden but it looked like that 
            was used elsewhere for a different reason?
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Factors.TaxProvisionEstimate">
            <summary>
            Summary description for TaxProvisionEstimate.
            This class just uses all defaults and facilities provided by the base class,
            but is used to distinguish as a type.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.TaxProvisionEstimate.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.TaxProvisionEstimate.#ctor(System.Decimal,System.Int32,System.DateTime,System.Byte[])">
            <summary>
            Constructor that initialises member variables without setting dirty flag and also initialises factors
            </summary>
            <param name="ratioValue"></param>
            <param name="factorID"></param>
            <param name="effectiveDate"></param>
            <param name="timestamp"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.TaxProvisionEstimate.IsValid">
            <summary>
            Default validity check - ensures XFactor >= 0
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.TaxProvisionEstimate.CalculateEffect">
            <summary>
            Calculates the effect of the TPE
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.TaxProvisionEstimate.IsIncludedInSummation">
            <summary>
            Indicates to calling collection that this factor
            is used in SumFactors, i.e. is in the factor summation
            part of the movement calculation formula. 
            Overriden here as TPE is not in this part of the formula
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.TaxProvisionEstimate.DisplayName">
            <summary>
            Used in Fund status property Grid, maybe ToString 
            could have been overriden but it looked like that 
            was used elsewhere for a different reason?
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Factors.ValuationBasis">
            <summary>
            Summary description for ValuationBasis.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.ValuationBasis.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.ValuationBasis.#ctor(System.Decimal)">
            <summary>
            Constructor that initialises member variables without setting dirty flag and also initialises factors
            </summary>
            <param name="ratioValue"></param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.ValuationBasis.DisplayName">
            <summary>
            Used in Fund status property Grid, maybe ToString 
            could have been overriden but it looked like that 
            was used elsewhere for a different reason?
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Factors.XFactor">
            <summary>
            Summary description for XFactor.
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Factors.XFactor.m_description">
            <summary>
            The xfactor description, describing what this percentage is that affects the price
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.XFactor.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.XFactor.#ctor(System.Decimal,System.Int32,System.DateTime,System.String,System.Byte[])">
            <summary>
            Constructor that initialises member variables without setting dirty flag and also initialises factors
            </summary>
            <param name="ratioValue"></param>
            <param name="factorID"></param>
            <param name="effectiveDate"></param>
            <param name="description"></param>
            <param name="timestamp"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.XFactor.IsValid">
            <summary>
            Default validity check - ensures XFactor >= 0
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Factors.XFactor.IsSet">
            <summary>
            Indicates to caller that the property values constitute a valid factor,
            and that the factor hasn't just been created due to property access.
            i.e. this flag indicates whether any properties make it worth saving or not.
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.XFactor.Description">
            <summary>
            The xfactor description, describing what this percentage is that affects the price
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Factors.XFactor.DisplayName">
            <summary>
            Used in Fund status property Grid, maybe ToString 
            could have been overriden but it looked like that 
            was used elsewhere for a different reason?
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.FundGroups.AssetFundGroup">
            <summary>
            Summary description for AssetFundGroup.
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup">
            <summary>
            An entity that represents a group of either Asset Funds or Funds
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup.#ctor">
            <summary>
            Used to create a new fund group from the GUI
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup.#ctor(System.Int32,System.String,System.String,System.String,System.Byte[],System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Create an existing fund group
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup.Equals(System.Object)">
            <summary>
            Overridden to check equality based on FileId
            </summary>
            <param name="obj">Obj.</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup.op_Equality(HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup,HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup)">
            <summary>
            Overloaded equality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup.op_Inequality(HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup,HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup)">
            <summary>
            Overloaded inequality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup.ToString">
            <summary>
            Override the ToString method to provide useful information.
            </summary>
            <returns>The FundGroupName for display purposes.</returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup.AllowSelectAllAuthorisation">
            <summary>
            Returns whether or not this fund group allows the user to click select all on authorisation screen in order to reduce
            number of button clicks for its child funds to be authorised.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup.DistributionFiles">
            <summary>
            Gets / Sets the collection of distribution files that are associated with this fund group
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup.FullName">
            <summary>
            The full name of the FundGroup
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup.ShortName">
            <summary>
            The short name of the Fund Group
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup.ID">
            <summary>
            Read-only Database ID for the Fund Group
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup.CompanyCode">
            <summary>
            The code for the Company that the fund group is set up for
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup.ForRelease">
            <summary>
            Gets or sets a value indicating whether this fund group is for release.
            </summary>
            <value>
            	<c>true</c> if [for release]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup.HasAssociatedFunds">
            <summary>
            Gets a value indicating whether this instance has associated funds.
            </summary>
            <value>
            	<c>true</c> if this instance has associated funds; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup.ForReleaseDisplay">
            <summary>
            Displays a 'Y' or 'N'
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.AssetFundGroup.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.FundGroups.AssetFundGroup"/> instance.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.AssetFundGroup.#ctor(System.Int32,System.String,System.String,System.String,System.Byte[],System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.FundGroups.AssetFundGroup"/> instance.
            </summary>
            <param name="ID">ID.</param>
            <param name="companyCode">Company code.</param>
            <param name="fullName">Full name.</param>
            <param name="shortName">Short name.</param>
            <param name="timeStamp">Time stamp.</param>
            <param name="forRelease">For release.</param>
            <param name="hasAssociatedFunds">Has associated funds.</param>
            <param name="allowSelectAllAuthorisation"></param>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollectionConverter">
            <summary>
            Use this class to convert a FundGroupCollection to a SimpleLookupCollection
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether this instance [can convert to] the specified context.
            </summary>
            <param name="context">Context.</param>
            <param name="destinationType">Destination type.</param>
            <returns>
            	<c>true</c> if this instance [can convert to] the specified context; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts to.
            </summary>
            <param name="context">Context.</param>
            <param name="culture">Culture.</param>
            <param name="value">Value.</param>
            <param name="destinationType">Destination type.</param>
            <returns></returns>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection">
            <summary>
            Summary description for FundGroupCollection.
            </summary>	
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.#ctor">
            <summary>
            FundGroup collection constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.#ctor(HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection)">
            <summary>
            FundGroup collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.#ctor(HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup[])">
            <summary>
            FundGroup collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Get the List name for the colleciton
            </summary>
            <param name="listAccessors">Can be null</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Access to the Item Properties.
            </summary>
            <param name="listAccessors"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.CopyTo(HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup[])">
            <summary>
            Copies all the FundGroups in the collection to the specified target object
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.CopyTo(HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup[],System.Int32)">
            <summary>
            Extract a range of items from the collection starting at the specified start index  
            </summary>
            <param name="array"></param>
            <param name="start"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.Add(HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup)">
            <summary>
            Add a new fund to the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.Clear">
            <summary>
            Empty the collection of items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.Contains(HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup)">
            <summary>
            Does the collection contain the specified item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.IndexOf(HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup)">
            <summary>
            Returns the index of the specified item if it exists in the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.Insert(System.Int32,HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup)">
            <summary>
            Insert an item at the specified position
            </summary>
            <param name="position"></param>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.Remove(HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup)">
            <summary>
            Remove the specified item from the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.RemoveAt(System.Int32)">
            <summary>
            Remove an item from the specified position of the collection
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.GetEnumerator">
            <summary>
            Allows ForEach functionality
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.Clone">
            <summary>
            Create a new copy of the collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.AddRange(HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection)">
            <summary>
            Add a new range of FundGroupCollection from a FundGroupCollection collection
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.AddRange(HBOS.FS.AMP.UPD.Types.FundGroups.FundGroup[])">
            <summary>
            Add a new range of FundGroupCollection from an array
            AddRange Overload
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.ValidateIndex(System.Int32)">
            <summary>
            Is the specified Item index valid
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.ValidateIndex(System.Int32,System.Boolean)">
            <summary>
            Is the specified item index valid
            ValidateIndex overload
            </summary>
            <param name="index"></param>
            <param name="allowEqualEnd"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.NeedsGrowth">
            <summary>
            Does the collection need to increase in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.Grow">
            <summary>
            Increase the size of the collection
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.NeedsTrimming">
            <summary>
            Does the collection needs reducing in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.Trim">
            <summary>
            Reduce the size of the collection to the number of valid items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.op_Explicit(HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection)~HBOS.FS.AMP.UPD.Types.Lookups.SimpleLookupCollection">
            <summary>
            
            </summary>
            <param name="objectToConvert"></param>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.Item(System.Int32)">
            <summary>
            Assign or extract a specific item value from the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.Capacity">
            <summary>
            Set or return the size of collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.Enumerator">
            <summary>
            Nested enumerator class
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.Enumerator.MoveNext">
            <summary>
            Move to the next item
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.Enumerator.Reset">
            <summary>
            Reset the current item index to the previous item index
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupCollection.Enumerator.Current">
            <summary>
            Get the currently selected item from the collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupFactory">
            <summary>
            Create a FundGroup based on the specified FundGroup type
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupFactory.CreateFundGroup(HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupFactory.FundGroupTypes)">
            <summary>
            Create a single FundGroup type
            </summary>
            <param name="fundGroupType"></param>
            <returns>FundGroup object (default is an Individual FundGroup</returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupFactory.CreateFundGroup(System.Int32,System.String,HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupFactory.FundGroupTypes,System.String,System.String,System.Byte[],System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a re-hydrated fund group.
            </summary>
            <param name="ID">ID.</param>
            <param name="companyCode">Company code.</param>
            <param name="fundGroupType">Fund group type.</param>
            <param name="fullName">Full name.</param>
            <param name="shortName">Name of the short.</param>
            <param name="timestamp">Time stamp.</param>
            <param name="forRelease">For release.</param>
            <param name="hasAssociatedFunds">Has associated funds.</param>
            <param name="allowSelectAllAuthorisation">Has associated funds.</param>
            <returns></returns>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupFactory.FundGroupTypes">
            <summary>
            Specifies the different types of fund groups in the system
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupFactory.FundGroupTypes.Asset">
            <summary>
            A fund group for holding <see cref="T:HBOS.FS.AMP.UPD.Types.AssetFunds.AssetFund">AssetFunds</see>
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.FundGroups.FundGroupFactory.FundGroupTypes.Individual">
            <summary>
            A fund group for holding <see cref="T:HBOS.FS.AMP.UPD.Types.Funds.Fund">Funds</see>
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.FundGroups.IndividualFundGroup">
            <summary>
            Represents a grouping of individual (non-asset) funds.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.IndividualFundGroup.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.FundGroups.IndividualFundGroup"/> instance.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.FundGroups.IndividualFundGroup.#ctor(System.Int32,System.String,System.String,System.String,System.Byte[],System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.FundGroups.IndividualFundGroup"/> instance.
            </summary>
            <param name="ID">ID.</param>
            <param name="companyCode">Company code.</param>
            <param name="fullName">Full name.</param>
            <param name="shortName">Short name.</param>
            <param name="timeStamp">Time stamp.</param>
            <param name="forRelease">For release.</param>
            <param name="hasAssociatedFunds">Has associated funds.</param>
            <param name="allowSelectAllAuthorisation"></param>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Funds.Composite">
            <summary>
            Summary description for Composite.
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC">
            <summary>
            This class holds the commonanality between non OEIC funds
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Funds.Fund">
            <summary>
            Base class for all funds. Is now abstract in order that fund type may be determined 
            by the specific class type inheriting from this base.
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.Fund.m_factors">
            <summary>
            Collection of factors - added as part of type refactoring / addition of composite
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.Fund.#ctor">
            <summary>
            Default constructor creating an object with all properties initialised to the default values.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.Fund.ToString">
            <summary>
            Toes the string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.Fund.#ctor(HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters)">
            <summary>
            Creates a new rehydrated <see cref="T:HBOS.FS.AMP.UPD.Types.Funds.Fund"/> instance.
            </summary>
            <param name="fundParameters"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.Fund.Equals(System.Object)">
            <summary>
            Override the Equals as we are only worried if the indexname is the same and not the actual objects
            </summary>
            <param name="obj"></param>
            <returns>true is they have the same index name</returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.Fund.op_Equality(HBOS.FS.AMP.UPD.Types.Funds.Fund,HBOS.FS.AMP.UPD.Types.Funds.Fund)">
            <summary>
            Overloaded equality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.Fund.op_Inequality(HBOS.FS.AMP.UPD.Types.Funds.Fund,HBOS.FS.AMP.UPD.Types.Funds.Fund)">
            <summary>
            Overloaded inequality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.Fund.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.Fund.setDirtyFlag">
            <summary>
            Set the modified flag to be true.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.Fund.XFactorValid">
            <summary>
            returns whether or not current value is valid
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.ParentFundGroups">
            <summary>
            caches the fundgroups for the parent asset fund
            Only used by static data export - saves loading up the whole asset fund
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.IsBenchMarkable">
            <summary>
            Gets a value indicating whether this instance is bench markable and can be used as a bench mark.
            </summary>
            <value>
            	<c>true</c> if this instance is bench markable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundType">
            <summary>
            A string representation of the type used for display and reporting purposes.
            todo - remove display properties from the entity once grid improved.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.Factors">
            <summary>
            Returns the collection of factors (things that can affect the predicted price)
            This is a collection of type Factor base, which can be one of
            	XFactor
            	RevaluationFactor
            	TaxProvisionEstimate or
            	ScalingFactor
            All support IFactor
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundGroups">
            <summary>
            The collection of IndividualFundGroup that detail the fund groups that this fund is linked to.
            This collection shall always exist and shall return an empty collection if the fund is not associated
            with any fund groups.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.CompanyCode">
            <summary>
            Company code - only used for reports
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.HiPortfolioCode">
            <summary>
            The HiPortfolio fund code. Todo - rename to FundCode.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FullName">
            <summary>
            The full name of fund.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.ShortName">
            <summary>
            The short name of fund.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.SystemIDs">
            <summary>
            The IDs used to identify this fund on external systems.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.ClassOrSeriesCode">
            <summary>
            The share class code or price series number.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.OnHiPortfolio3">
            <summary>
            Flag indicating whether the fund is on HiPortfolio3 or not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.ParentAssetFund">
            <summary>
            The asset fund that this fund belongs to.  Used to return properties specific to the asset
            fund.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.IsAuthorised">
            <summary>
            A flag indicating whether or not the fund price has been authorised
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.AssetMovementTolerance">
            <summary>
            The tolerance for the asset movement of the fund.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.UpperTolerance">
            <summary>
            The upper limit of price movement tolerance for this fund.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.LowerTolerance">
            <summary>
            The lower limit of price movement tolerance for this fund.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.PriceIncreaseOnly">
            <summary>
            Flag indicating whether the fund price is allowed to fall or not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.TolerancesID">
            <summary>
            The ID for the tolerances used in the price calculation.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.TolerancesIDSet">
            <summary>
            Flag to indicate whether the tolerances ID is a valid value or not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.Price">
            <summary>
            The current imported price of the fund.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.PriceSet">
            <summary>
            Flag indicating whether the price field has been set or not as zero may be a valid value.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.ImportedFundPriceID">
            <summary>
            The ID for the imported fund price used in the price calculation.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.ImportedFundPriceIDSet">
            <summary>
            Flag indicating whether the imported fund price ID is a valid value or not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.ValuationBasisID">
            <summary>
            The ID for the valuation basis used in the price calculation.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.ValuationBasisIDSet">
            <summary>
            Flag indicating whether the valuation basis ID is a valid value or not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.PreviousPrice">
            <summary>
            The most recent previous price for the fund.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.PreviousPriceSet">
            <summary>
            Flag indicating whether the previous price field has been set or not as zero may be a 
            valid value.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundStatus">
            <summary>
            The current fund status.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.StatusChangedTime">
            <summary>
            The date and time that the status was changed (excluding tolerance status changes).
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.StatusChangedTimeSet">
            <summary>
            Flag to indicate whether the StatusChangedTime has been set because it defaults to a 
            valid date.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.UsePredictedPrice">
            <summary>
            Will be set to true if the predicted price is to be used as the 
            authorised price.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.AuthorisedPriceTimestamp">
            <summary>
            The timestamp on the authorised fund price file for this fund.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.PredictedPrice">
            <summary>
            The calculated predicted price for the current day.
            Calculate the predicted price for the fund using:
            predicted = previous * (1 + AM + RF + VF + SF + X) * (1 - TI)
            where - AM is asset movement (calculated)
                  - TI is tax impact (non oeics - user input)
                  - RF is revaluation factor 
                  - VF is valuation factor (calculated)
                  - SF is scaling factor (user input) and
                  - X is X factor (user input).
            All the factors are held as decimal fractions rather than percentages (ie. if there is a
            10% movement in asset funds then this is used as 0.1 in the calculations).
            The fund weightings are also held as decimal fractions rather than percentages and so must
            add up to 1 rather than to 100.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.predictedMovement">
            <summary>
            calculates the predicted movement to be applied to the price in order to calculate predicted price
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.ValuationBasisEffect">
            <summary>
            The calculated valuation basis effect used in price prediction.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.WithinAssetMovementTolerance">
            <summary>
            Flag to indicate whether the asset movement is within the tolerance or not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.PriceOutsideTolerance">
            <summary>
            Check to see if the price fails both the upper and lower tolerance
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.WithinPriceLowerTolerance">
            <summary>
            Flag to indicate whether the price is within the lower tolerance or not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.WithinRoundedPriceLowerTolerance">
            <summary>
            Flag to indicate if the price is within rounded price tolerance
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.WithinPriceUpperTolerance">
            <summary>
            Flag to indicate whether the price is within the upper tolerance or not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.WithinRoundedPriceUpperTolerance">
            <summary>
            Flag to indicate whether the price is within the upper tolerance or not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.WithinPriceDirectionTolerance">
            <summary>
            Flag to indicate whether the price movement is within the allowed direction or not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.ProgressStatus">
            <summary>
            Will be set to true if the current status is to be progressed to the next level or reverted
            to the previous level.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.InitialProgressStatus">
            <summary>
            This property holds the ProgressStatus value at the time the fund is created.  This is used
            to prevent attempting to perform an status progress operation if the ProgressStatus field has
            been returned to what it was originally.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.PriceMovementPercent">
            <summary>
            The calculated price movement (difference between current price and previous previous) expressed
            as a percentage.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.PredictedPriceMovementPercent">
            <summary>
            The calculated predicted price movement (difference between current predicted price and 
            previous price) expressed as a percentage.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.PriceMovementVariance">
            <summary>
            The difference between the actual price movement and the predicted price movement.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.AssetFundID">
            <summary>
            The ID of the asset fund that this fund belongs to, retrieved from the parent asset fund
            object.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.AssetFundName">
            <summary>
            The name of the asset fund that this fund belongs to, retrieved from the parent asset fund
            object.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.AssetUnitPrice">
            <summary>
            The unit price for the asset fund, retrieved from the parent asset fund object.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.AssetUnitPriceSet">
            <summary>
            Flag indicating whether the asset unit price is a valid value or not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.AssetMovement">
            <summary>
            The asset movement for the asset fund, retrieved from the parent asset fund object.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.AssetMovementSet">
            <summary>
            Flag indicating whether the asset movement has been calculated and so holds a valid value or
            not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.PredictedAssetUnitPrice">
            <summary>
            The asset fund predicted price.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.PredictedAssetMovement">
            <summary>
            The predicted asset movement for the asset fund, retrieved from the parent asset fund object.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.PredictedAssetMovementSet">
            <summary>
            Flag indicating whether the predicted asset movement has been set because the default may
            be a valid value.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.AssetMovementVariance">
            <summary>
            The variance in the asset fund unit price movement, retrieved from the parent asset fund
            object.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.AssetMovementVarianceSet">
            <summary>
            Flag indicating whether the asset movement value is valid or not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.ParentAssetFundID">
            <summary>
            THe ID of the funds parent asset fund
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.PriceMovementRoundedTolerance">
            <summary>
            Derived flag indicating within rounded tolerance
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.SecurityCode">
            <summary>
            The security code needed for import to link fund to hiPort3
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.XFactor">
            <summary>
            The X factor to use for this fund in price prediction calculations.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.XFactorPercent">
            <summary>
            The X factor to use for this fund in price prediction calculations.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.XFactorID">
            <summary>
            The ID for the X factor used in the price calculation.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.XFactorIDSet">
            <summary>
            Flag to indicate whether the value is a valid value or not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.XFactorDescription">
            <summary>
            The narrative text describing why the xvalue percentage is applied
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.Movement">
            <summary>
            Gets the Bench Mark movement.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.Currency">
            <summary>
            Gets the Bench Mark currency.
            </summary>
            <value></value>
            <summary>
            Gets the Bench Mark currency.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.Availability">
            <summary>
            Gets the state of availability for the Bench Mark.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.BenchMarkType">
            <summary>
            Gets the bench mark type.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.BenchMarkSubType">
            <summary>
            Gets the bench mark sub type.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.PreviousBenchmarkValue">
            <summary>
            Gets the previous benchmark value.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.CurrentBenchmarkValue">
            <summary>
            Gets the current benchmark value.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo">
            <summary>
            Summary description for FundAuthoriseInfo.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.#ctor(HBOS.FS.AMP.UPD.Types.Funds.Fund)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo"/> instance. 
            This class can be used to access information used in authorisation 
            or other pricing calculations
            </summary>
            <param name="fund">Fund.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.tolerancesSnapshotIDSet(HBOS.FS.AMP.UPD.Types.Funds.Fund)">
            <summary>
            Flag to indicate whether the tolerances ID is a valid value or not.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.predictedAssetUnitPriceSet(HBOS.FS.AMP.UPD.Types.Funds.Fund)">
            <summary>
            Flag indicating that the predicted asset unit price is valid.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.PredictedAssetMovement">
            <summary>
            Returns the asset movement
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.TolerancesSnapshotID">
            <summary>
            The ID for the tolerances used in the price calculation.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.HiPortfolioCode">
            <summary>
            Gets the hi portfolio code.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.AssetFundID">
            <summary>
            Gets the asset fund ID.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.WasFromPrediction">
            <summary>
            Gets a value indicating whether [was from prediction].
            </summary>
            <value>
            	<c>true</c> if [was from prediction]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.Price">
            <summary>
            Gets the price.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.ScalingFactorID">
            <summary>
            Gets the scaling factor ID.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.IsBidPriceMidPrice">
            <summary>
            Gets a value indicating whether this instance is bid price mid price.
            </summary>
            <value>
            	<c>true</c> if this instance is bid price mid price; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.ImportedFundPrice">
            <summary>
            Gets the imported fund price.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.PredictedFundPrice">
            <summary>
            Gets the predicted fund price.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.PredictedAssetUnitPrice">
            <summary>
            Gets the predicted asset unit price.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.ImportedFundPriceID">
            <summary>
            Gets the imported fund price ID.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.TaxProvisionFactorID">
            <summary>
            Gets the tax provision factor ID.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.XFactorId">
            <summary>
            Gets the X factor id.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.AssetUnitPrice">
            <summary>
            Gets the asset unit price.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.CurrencyRateSnapshotID">
            <summary>
            Gets the currency rate snapshot ID.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.BenchmarkSplitSnapShotId">
            <summary>
            Gets the benchmark split snap shot id.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.FundCurrencyCode">
            <summary>
            Gets the fund currency code.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.ValuationBasisEffect">
            <summary>
            Gets the valuation basis effect.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.RevaluationFactorId">
            <summary>
            Gets the revaluation factor id.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundAuthoriseInfo.MarketIndiciesSnapShotId">
            <summary>
            Gets the market indicies snap shot id.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundStatusType">
            <summary>
            List of possible fund statuses
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundStatusType.Unknown">
            <summary>
            Fund status code is unrecognised
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundStatusType.Missing">
            <summary>
            Fund is missing
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundStatusType.Imported">
            <summary>
            Fund data has been imported
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundStatusType.FirstLevelAuthorised">
            <summary>
            Fund has been first level authorised
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundStatusType.SecondLevelAuthorised">
            <summary>
            Fund has been second level authorised
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundStatusType.Released">
            <summary>
            Fund has been released to distribution
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundStatusType.AwaitingDistribution">
            <summary>
            Fund is awaiting distribution
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundStatusType.BeingDistributed">
            <summary>
            Fund is in the process of being distributed
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.Fund.FundStatusType.Distributed">
            <summary>
            Fund has been distributed
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.#ctor">
            <summary>
            Default constructor for the linked fund
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.#ctor(HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters)">
            <summary>
            Creates a new linked fund
            </summary>
            <param name="fundParameters">Object containing a necessary fund details</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.RevaluationFactorValid">
            <summary>
            returns whether or not current reval factor is valid
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.ScalingFactorValid">
            <summary>
            returns whether or not current scaling factor is valid
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.TPEValid">
            <summary>
            returns whether or not current tax provision estimate is valid
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.IsDualPrice">
            <summary>
            The price type (eg. single (S) or dual (D)).
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.UseMidPriceAsBidPrice">
            <summary>
            Flag indicating whether the mid price should be used as the bid price or not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.IsLife">
            <summary>
            Flag indicating whether the fund can be used for life polices.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.RevaluationFactorID">
            <summary>
            Gets the unique db id for the revaluation factor
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.RevaluationFactorIDSet">
            <summary>
            Flag to indicate whether the revaluation change has been set because the default may be a
            valid value.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.RevaluationEffectiveDate">
            <summary>
            The start date of the revaluation period.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.RevaluationEffectiveDateSet">
            <summary>
            Flag to indicate whether the revaluation effective date has been set because the default
            may be a valid value.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.RevaluationEndDate">
            <summary>
            The number of days that the revaluation period runs for.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.RevaluationEndDateSet">
            <summary>
            Flag to indicate whether the revaluation working days have been set because the default
            may be a valid value.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.RevalFactor">
            <summary>
            The calculated revaluation factor used in price prediction.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.RevalFactorPercent">
            <summary>
            The revaluation factor as a percentage, rather than a ratio(factor) of 1
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.Holidays">
            <summary>
            gets / sets the list of bank holidays, which is required for validation purposes.
            Only sets them on reval factor at present as others have no need.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.ScaleFactor">
            <summary>
            The scaling factor used for this fund in price prediction calculations.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.ScaleFactorPercent">
            <summary>
            The scaling factor as a percentage, rather than a ratio(factor) of 1
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.ScalingFactorID">
            <summary>
            The ID for the scaling factor used in the price calculation.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.ScalingFactorIDSet">
            <summary>
            Flag to indicate whether the scaling factor ID is a valid value or not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.TPE">
            <summary>
            The tax provision estimate
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.TPEPercent">
            <summary>
            The tax provision estimate as a percentage, rather than a ratio(factor) of 1
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.TaxProvisionFactorID">
            <summary>
            The ID for the tax provision estimate used in the price calculation.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.TaxProvisionFactorIDSet">
            <summary>
            Flag indicating whether the tax provision estimate ID holds a valid value or not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.TPEDisplay">
            <summary>
            The formatted field used to display the Tax Provision Estimate.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.IsLifeDisplay">
            <summary>
            Displays a Y or N depending on whether the fund is a life fund
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.PredictedPrice">
            <summary>
            Calculates the predicted price (is a derived property)
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.NonOEIC.predictedMovement">
            <summary>
            calculates the predicted movement to be applied to the price in order to calculate predicted price
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.Composite.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.Composite.#ctor(HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters)">
            <summary>
            Creates a new Composite 
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Composite.Availability">
            <summary>
            Gets the state of availability for the Bench Mark.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.Composite.FundType">
            <summary>
            The string representation of the type name used for display and reporting purposes
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID">
            <summary>
            The class holding the various external system IDs for a fund.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID.#ctor">
            <summary>
            /// Constructor setting all properties to default values.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID.#ctor(System.String,System.Int32,System.String,System.String,System.Byte[])">
            <summary>
            Constructor to create the object with its properties initialised.
            </summary>
            <param name="HiPortfolioCode"></param>
            <param name="systemID">The ID of the system for which this fund code is to be used.</param>
            <param name="systemName">The name of the system for which this fund code is to be used.</param>
            <param name="fundCode">The code to use to identify the associated fund.</param>
            <param name="timestamp">Database timestamp of the record.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID.op_Equality(HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID,HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID)">
            <summary>
            Overloaded equality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID.op_Inequality(HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID,HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID)">
            <summary>
            Overloaded inequality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID.Equals(System.Object)">
            <summary>
            Override to test equality based on System Id
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID.GetHashCode">
            <summary>
            Gets the hash code.
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID.SystemID">
            <summary>
            The system for which this fund code is to be used.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID.HiPortfolioCode">
            <summary>
            The identifier of the fund to which this external system identifier belongs.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID.SystemName">
            <summary>
            The name of the system that this code is for.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID.FundCode">
            <summary>
            The code to use to identify the associated fund.
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.#ctor">
            <summary>
            Fund collection constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.#ctor(HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection)">
            <summary>
            Fund collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.#ctor(HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID[])">
            <summary>
            Fund collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Get the List name for the colleciton
            </summary>
            <param name="listAccessors">Can be null</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Access to the Item Properties.
            </summary>
            <param name="listAccessors"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.CopyTo(HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID[])">
            <summary>
            Copies all the ExternalSystemIDCollection in the collection to the specified target object
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.CopyTo(HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID[],System.Int32)">
            <summary>
            Extract a range of items from the collection starting at the specified start index  
            </summary>
            <param name="array"></param>
            <param name="start"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.Add(HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID)">
            <summary>
            Add a new fund to the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.Clear">
            <summary>
            Empty the collection of items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.Contains(HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID)">
            <summary>
            Does the collection contain the specified item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.IndexOf(HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID)">
            <summary>
            Returns the index of the specified item if it exists in the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.Insert(System.Int32,HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID)">
            <summary>
            Insert an item at the specified position
            </summary>
            <param name="position"></param>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.Remove(HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID)">
            <summary>
            Remove the specified item from the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.RemoveAt(System.Int32)">
            <summary>
            Remove an item from the specified position of the collection
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.GetEnumerator">
            <summary>
            Allows ForEach functionality
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.Clone">
            <summary>
            Create a new copy of the collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.AddRange(HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection)">
            <summary>
            Add a new range of ExternalSystemIDCollection from a ExternalSystemIDCollection collection
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.AddRange(HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID[])">
            <summary>
            Add a new range of ExternalSystemIDCollection from an array
            AddRange Overload
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.ValidateIndex(System.Int32)">
            <summary>
            Is the specified Item index valid
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.ValidateIndex(System.Int32,System.Boolean)">
            <summary>
            Is the specified item index valid
            ValidateIndex overload
            </summary>
            <param name="index"></param>
            <param name="allowEqualEnd"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.NeedsGrowth">
            <summary>
            Does the collection need to increase in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.Grow">
            <summary>
            Increase the size of the collection
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.NeedsTrimming">
            <summary>
            Does the collection needs reducing in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.Trim">
            <summary>
            Reduce the size of the collection to the number of valid items
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.Item(System.Int32)">
            <summary>
            Assign or extract a specific item value from the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.Capacity">
            <summary>
            Set or return the size of collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.Enumerator">
            <summary>
            Nested enumerator class
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.Enumerator.MoveNext">
            <summary>
            Move to the next item
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.Enumerator.Reset">
            <summary>
            Reset the current item index to the previous item index
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemIDCollection.Enumerator.Current">
            <summary>
            Get the currently selected item from the collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Funds.FundCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.#ctor">
            <summary>
            Fund collection constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.#ctor(HBOS.FS.AMP.UPD.Types.Funds.FundCollection)">
            <summary>
            Fund collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.#ctor(HBOS.FS.AMP.UPD.Types.Funds.Fund[])">
            <summary>
            Fund collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Get the List name for the colleciton
            </summary>
            <param name="listAccessors">Can be null</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Access to the Item Properties.
            </summary>
            <param name="listAccessors"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.CopyTo(HBOS.FS.AMP.UPD.Types.Funds.Fund[])">
            <summary>
            Copies all the FundCollection in the collection to the specified target object
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.CopyTo(HBOS.FS.AMP.UPD.Types.Funds.Fund[],System.Int32)">
            <summary>
            Extract a range of items from the collection starting at the specified start index  
            </summary>
            <param name="array"></param>
            <param name="start"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.Add(HBOS.FS.AMP.UPD.Types.Funds.Fund)">
            <summary>
            Add a new fund to the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.Clear">
            <summary>
            Empty the collection of items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.Contains(HBOS.FS.AMP.UPD.Types.Funds.Fund)">
            <summary>
            Does the collection contain the specified item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.IndexOf(HBOS.FS.AMP.UPD.Types.Funds.Fund)">
            <summary>
            Returns the index of the specified item if it exists in the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.Insert(System.Int32,HBOS.FS.AMP.UPD.Types.Funds.Fund)">
            <summary>
            Insert an item at the specified position
            </summary>
            <param name="position"></param>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.Remove(HBOS.FS.AMP.UPD.Types.Funds.Fund)">
            <summary>
            Remove the specified item from the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.RemoveAt(System.Int32)">
            <summary>
            Remove an item from the specified position of the collection
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.GetEnumerator">
            <summary>
            Allows ForEach functionality
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.Clone">
            <summary>
            Create a new copy of the collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.AddRange(HBOS.FS.AMP.UPD.Types.Funds.FundCollection)">
            <summary>
            Add a new range of FundCollection from a FundCollection collection
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.AddRange(HBOS.FS.AMP.UPD.Types.Funds.Fund[])">
            <summary>
            Add a new range of FundCollection from an array
            AddRange Overload
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.ValidateIndex(System.Int32)">
            <summary>
            Is the specified Item index valid
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.ValidateIndex(System.Int32,System.Boolean)">
            <summary>
            Is the specified item index valid
            ValidateIndex overload
            </summary>
            <param name="index"></param>
            <param name="allowEqualEnd"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.NeedsGrowth">
            <summary>
            Does the collection need to increase in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.Grow">
            <summary>
            Increase the size of the collection
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.NeedsTrimming">
            <summary>
            Does the collection needs reducing in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.Trim">
            <summary>
            Reduce the size of the collection to the number of valid items
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.Item(System.Int32)">
            <summary>
            Assign or extract a specific item value from the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.Capacity">
            <summary>
            Set or return the size of collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.Enumerator">
            <summary>
            Nested enumerator class
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.Enumerator.MoveNext">
            <summary>
            Move to the next item
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.Enumerator.Reset">
            <summary>
            Reset the current item index to the previous item index
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.FundCollection.Enumerator.Current">
            <summary>
            Get the currently selected item from the collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Funds.FundFactory">
            <summary>
            Create a fund based on the specified fund type.
            
            Factory Definition:
            Define an interface for creating an object, but let subclasses 
            decide which class to instantiate. Factory Method lets a class 
            defer instantiation to subclasses. 
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.ResolveFundType(HBOS.FS.AMP.UPD.Types.Funds.Fund)">
            <summary>
            Checks the specific type of the abstract class and returns its type as an enum
            </summary>
            <param name="fund"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Invalid asset fund type</exception>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.ResolveFundType(HBOS.FS.AMP.UPD.Types.Funds.Fund,HBOS.FS.AMP.UPD.Types.Funds.OEICFund@,HBOS.FS.AMP.UPD.Types.Funds.LinkedFund@,HBOS.FS.AMP.UPD.Types.Funds.Composite@)">
            <summary>
            Encapsulates the type checking of the abstract base class.
            Throws exception if not of any type. 
            Returns two null references and the reference to the specific object type, as well as the return enum type
            </summary>
            <param name="fund"></param>
            <param name="oeic"></param>
            <param name="linked"></param>
            <param name="comp"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Invalid fund type</exception>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.CreateFund(HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters)">
            <summary>
            Creates a new fund depending on type
            </summary>
            <param name="fundParameters">Object containing a necessary fund details</param>
            <returns>Fund</returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.CreateFund(HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundType)">
            <summary>
            Creates a new fund depending on type
            </summary>
            <param name="fundType">Type of fund to create</param>
            <returns>Fund</returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.CreateFundFactors(HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters,System.Collections.Hashtable)">
            <summary>
            Creates new factors collection depending on type
            </summary>
            <param name="fundParameters"></param>
            <param name="holidays"></param>
            <returns>Factors Collection</returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.CreateSystem(System.String,System.Int32,System.String,System.String,System.Byte[])">
            <summary>
            Creates a rehydrated <see cref="T:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID"/> entity
            </summary>
            <param name="hiPortfolioCode">Hi portfolio code.</param>
            <param name="systemID">System ID.</param>
            <param name="systemName">Name of the system.</param>
            <param name="fundCode">Fund code.</param>
            <param name="timeStamp">Time stamp.</param>
            <returns>The rehydrated ExternalSystemID</returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.CreateSystem">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.Funds.ExternalSystemID"/> entity
            </summary>
            <returns>A new External System identifier</returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.CreateTaxProvisionEstimate(System.Decimal,System.Int32,System.DateTime,System.Byte[])">
            <summary>
            Creates a tax provision estimate
            </summary>
            <param name="taxProvision"></param>
            <param name="taxProvisionEstimateID"></param>
            <param name="taxProvisionEffectiveDate"></param>
            <param name="taxProvisionEstimateTimestamp"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.CreateRevaluationFactor(System.Decimal,System.Int32,System.DateTime,System.DateTime,System.Byte[],System.DateTime)">
            <summary>
            Creates a revaluation factor
            </summary>
            <param name="revaluationFactor"></param>
            <param name="revaluationFactorID"></param>
            <param name="revaluationEffectiveDate"></param>
            <param name="revaluationEndDate"></param>
            <param name="revaluationFactorTimestamp"></param>
            <param name="currentValuationDate"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.CreateScalingFactor(System.Decimal,System.Int32,System.DateTime,System.Byte[])">
            <summary>
            Creates a scaling factor
            </summary>
            <param name="scalingFactor"></param>
            <param name="scalingFactorID"></param>
            <param name="scalingFactorEffectiveDate"></param>
            <param name="scalingFactorTimestamp"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.CreateXFactor(System.Decimal,System.Int32,System.DateTime,System.String,System.Byte[])">
            <summary>
            Creates an xFactor
            </summary>
            <param name="xFactor"></param>
            <param name="xFactorID"></param>
            <param name="xFactorEffectiveDate"></param>
            <param name="xFactorDescription"></param>
            <param name="xFactorTimestamp"></param>
            <returns></returns>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters">
            <summary>
            This class has been introduced during refactoring to group parameters 
            together used for constructing fund objects
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters"/> instance.
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.FundType">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.HiPortfolioCode">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.FullName">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.ShortName">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.ClassOrSeriesCode">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.UseMidPriceAsBidPrice">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.OnHiPortfolio3">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.IsDualPrice">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.ParentAssetFund">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.AssetMovementTolerance">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.UpperTolerance">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.LowerTolerance">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.PriceIncreaseOnly">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.TolerancesID">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.Price">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.PriceSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.ImportedFundPriceID">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.ValuationBasisEffect">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.PreviousPrice">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.PreviousPriceSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.FundStatus">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.StatusChangedTime">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.StatusChangedTimeSet">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.UsePredictedPrice">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.AuthorisedPriceTimestamp">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.Timestamp">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.IsLife">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.IsExDividend">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.ParentAssetFundID">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.CompanyCode">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.SecurityCode">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.Factors">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.IsBenchmarkable">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.RevaluationEffectiveDate">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.RevaluationEndDate">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.TaxProvisionEffectiveDate">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.ScalingFactorEffectiveDate">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.XFactorEffectiveDate">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.XFactorNarrative">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.XFactor">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.ScalingFactor">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.TaxProvisionEstimate">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.RevaluationEffect">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.TaxProvisionFactorID">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.ScalingFactorID">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.XFactorID">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.RevaluationFactorID">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.RevaluationTimestamp">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.ScalingFactorTimestamp">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.TaxProvisionTimestamp">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.XFactorTimestamp">
            <summary>
            
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters.CurrentValuationDate">
            <summary>
            
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundType">
            <summary>
            The type of fund to be created.
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundType.Linked">
            <summary>
            LinkedFund
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundType.Oeic">
            <summary>
            Open Ended Investment Company (OEIC) fund type
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundType.Composite">
            <summary>
            Composite Price Series
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Funds.LinkedFund">
            <summary>
            A LinkedFund. Is a class in its own right in order to be able to distinguish by type.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.LinkedFund.#ctor">
            <summary>
            Default constructor for the linked fund
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.LinkedFund.#ctor(HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters)">
            <summary>
            Creates a new linked fund
            </summary>
            <param name="fundParameters">Object containing a necessary fund details</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.LinkedFund.FundType">
            <summary>
            The string representation of the type name used for display and reporting purposes
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Funds.OEICFund">
            <summary>
            Summary description for OEICFund.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.OEICFund.#ctor">
            <summary>
            Default constructor creating an object with all properties initialised to the default values.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.OEICFund.#ctor(HBOS.FS.AMP.UPD.Types.Funds.FundFactory.FundParameters)">
            <summary>
            Creates a new rehydratred <see cref="T:HBOS.FS.AMP.UPD.Types.Funds.OEICFund"/> instance.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Funds.OEICFund.ValuationBasisValid">
            <summary>
            returns whether or not current value is valid
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.OEICFund.FundType">
            <summary>
            The string representation of the type name used for display and reporting purposes
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.OEICFund.IsExDividend">
            <summary>
            Flag to indicate whether the fund is within an ExDivdend period or not.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.OEICFund.OeicTimestamp">
            <summary>
            The OEIC fund timestamp.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.OEICFund.ValuationBasisEffect">
            <summary>
            The valuation basis effect value
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.OEICFund.ValuationBasisID">
            <summary>
            The ID for the Valuation Basis effect used in the price calculation.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Funds.OEICFund.ValuationBasisIDSet">
            <summary>
            Flag indicating whether the valuation baisis factor ID holds a valid value or not.
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Lookups.SimpleLookup">
            <summary>
            A simple key-value pair type to use with lookups to use with hash tables
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Lookups.SimpleLookup.#ctor(System.Int32,System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.Lookups.SimpleLookup"/> instance.
            </summary>
            <param name="key">The key for the lookup</param>
            <param name="displayValue">Value.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Lookups.SimpleLookup.GetHashCode">
            <summary>
            Gets the hash code. Overridden to return the key
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Lookups.SimpleLookup.ToString">
            <summary>
            Overridden to return the DisplayValue
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Lookups.SimpleLookup.Equals(System.Object)">
            <summary>
            Overridden to determine equality based on Key
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Lookups.SimpleLookup.Key">
            <summary>
            Gets the key value.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Lookups.SimpleLookup.DisplayValue">
            <summary>
            Gets or sets the display value.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Lookups.SimpleLookupCollection">
            <summary>
            Collection of SimpleLookup items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Lookups.SimpleLookupCollection.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.Lookups.SimpleLookupCollection"/> instance.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Lookups.SimpleLookupCollection.Add(HBOS.FS.AMP.UPD.Types.Lookups.SimpleLookup)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">Item.</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Lookups.SimpleLookupCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:HBOS.FS.AMP.UPD.Types.Lookups.SimpleLookup"/> at the specified index. Default indexer in C#
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Lookups.SimpleStringLookup">
            <summary>
            A simple key-value pair type to use with lookups to use with hash tables
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Lookups.SimpleStringLookup.#ctor(System.String,System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.Lookups.SimpleStringLookup"/> instance.
            </summary>
            <param name="key">The key for the lookup</param>
            <param name="displayValue">Value.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Lookups.SimpleStringLookup.ToString">
            <summary>
            Overridden to return the DisplayValue
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Lookups.SimpleStringLookup.Equals(System.Object)">
            <summary>
            Overridden to determine equality based on Key
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Lookups.SimpleStringLookup.GetHashCode">
            <summary>
            Overridden to please the compiler.
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Lookups.SimpleStringLookup.Key">
            <summary>
            Gets the key value.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Lookups.SimpleStringLookup.DisplayValue">
            <summary>
            Gets or sets the display value.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Lookups.SimpleStringLookupCollection">
            <summary>
            Summary description for SimpleStringLookupCollection.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Lookups.SimpleStringLookupCollection.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.Lookups.SimpleStringLookupCollection"/> instance.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Lookups.SimpleStringLookupCollection.Add(HBOS.FS.AMP.UPD.Types.Lookups.SimpleStringLookup)">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">Item.</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Lookups.SimpleStringLookupCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:HBOS.FS.AMP.UPD.Types.Lookups.SimpleStringLookup"/> at the specified index. Default indexer in C#
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Snapshot.Snapshot">
            <summary>
            Summary description for Snapshot.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Snapshot.Snapshot.#ctor(System.Int64,System.String,System.DateTime,HBOS.FS.AMP.UPD.Types.Snapshot.SnapshotProcess,System.String,System.String,System.Byte[])">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.Snapshot.Snapshot"/> instance.
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Snapshot.Snapshot.Id">
            <summary>
            Gets the id for the snapshot.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Snapshot.Snapshot.UserId">
            <summary>
            Gets the user id for the person who created the snapshot.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Snapshot.Snapshot.SnapshotDate">
            <summary>
            Gets the date and time the snapshot was created.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Snapshot.Snapshot.Process">
            <summary>
            Gets the process that created the snapshot.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Snapshot.Snapshot.ImportFilename">
            <summary>
            Gets the import filename for import snapshots only. Null otherwise.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Snapshot.Snapshot.CompanyCode">
            <summary>
            Gets the company code for the snapshot.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Snapshot.SnapshotProcess">
            <summary>
            Describes the Process used to create a snapshot
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Snapshot.SnapshotProcess.Import">
            <summary>
            Snapshot was created from a data Import
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Snapshot.SnapshotProcess.StaticData">
            <summary>
            Snapshot was created from the static data screens
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Snapshot.SnapshotProcess.Report">
            <summary>
            Reports that require imports such as the price comparision report
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Snapshot.SnapshotProcess.Unknown">
            <summary>
            Snapshot was created from an unknown source
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Status.CurrentImportStatus">
            <summary>
            Class containing information on the current system valuation point and the latest import files which
            decide that point.
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Status.CurrentImportStatus.MarketIndexValues">
            <summary>
            The current market index values import details
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Status.CurrentImportStatus.FundPrices">
            <summary>
            The current fund price import details
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Status.CurrentImportStatus.CurrencyRates">
            <summary>
            The current currency rates import details
            </summary>
        </member>
        <member name="F:HBOS.FS.AMP.UPD.Types.Status.CurrentImportStatus.AssetFundMarketSplits">
            <summary>
            The current asset fund market splits import details
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.CurrentImportStatus.#ctor(System.DateTime)">
            <summary>
            Creates a new instance of the <see cref="T:HBOS.FS.AMP.UPD.Types.Status.CurrentImportStatus"/> class.
            </summary>
            <remarks>Creation should be done from a call to the controller/persistence layer.</remarks>      
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.CurrentImportStatus.#ctor(System.DateTime,System.DateTime,System.String,System.String,System.String,System.DateTime,System.String,System.String,System.String,System.DateTime,System.String,System.String,System.String,System.DateTime,System.String,System.String,System.String,System.DateTime)">
            <summary>
            Creates a new instance of the <see cref="T:HBOS.FS.AMP.UPD.Types.Status.CurrentImportStatus"/> class.
            </summary>
            <remarks>Creation should be done from a call to the controller/persistence layer.</remarks>
            <param name="valuationPoint"></param>
            <param name="marketIndexFile"></param>
            <param name="marketIndexImportedByUserName"></param>
            <param name="marketIndexImportedByLogin"></param>
            <param name="marketIndexImportedOn"></param>
            <param name="fundPriceFile"></param>
            <param name="fundPriceImportedByUserName"></param>
            <param name="fundPriceImportedByLogin"></param>
            <param name="fundPriceImportedOn"></param>
            <param name="currencyFile"></param>
            <param name="currencyImportedByUserName"></param>
            <param name="currencyImportedByLogin"></param>
            <param name="currencyImportedOn"></param>
            <param name="assetSplitFile"></param>
            <param name="assetSplitImportedByUserName"></param>
            <param name="assetSplitImportedByLogin"></param>
            <param name="assetSplitImportedOn"></param>
            <param name="valuationDay"></param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Status.CurrentImportStatus.CurrentValuationDay">
            <summary>
            Returns the current valuation day for the company.
            </summary>
            <value>The current valuation day for the company.</value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Status.CurrentImportStatus.CurrentValuationPoint">
            <summary>
            Returns the current system valuation point.
            </summary>
            <value>The current system valuation point.</value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Status.ImportDetails">
            <summary>
            Summary description for ImportDetails.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetails.#ctor(System.String,System.String,System.String,System.DateTime)">
            <summary>
            Create an existing Import details object
            </summary>
            <param name="importSourceFile"></param>
            <param name="importedByUserName"></param>
            <param name="importedByLogin"></param>
            <param name="importedOn"></param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Status.ImportDetails.ImportFileName">
            <summary>
            Gets the name of the import file.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Status.ImportDetails.ImportedByName">
            <summary>
            Gets the name of the user who imported the file.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Status.ImportDetails.ImportedByAccount">
            <summary>
            Gets the user name who imported the file.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Status.ImportDetails.ImportDateTime">
            <summary>
            Gets the import date time.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Status.ImportDetails.IsDeleted">
            <summary>
            
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Status.ImportDetails.IsNew">
            <summary>
            
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Status.ImportDetails.TimeStamp">
            <summary>
            
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Status.ImportDetails.IsDirty">
            <summary>
            
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.#ctor">
            <summary>
            ImportDetails collection constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.#ctor(HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection)">
            <summary>
            ImportDetails collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.#ctor(HBOS.FS.AMP.UPD.Types.Status.ImportDetails[])">
            <summary>
            ImportDetails collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Get the List name for the colleciton
            </summary>
            <param name="listAccessors">Can be null</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Access to the Item Properties.
            </summary>
            <param name="listAccessors"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.CopyTo(HBOS.FS.AMP.UPD.Types.Status.ImportDetails[])">
            <summary>
            Copies all the ImportDetailsCollection in the collection to the specified target object
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.CopyTo(HBOS.FS.AMP.UPD.Types.Status.ImportDetails[],System.Int32)">
            <summary>
            Extract a range of items from the collection starting at the specified start index  
            </summary>
            <param name="array"></param>
            <param name="start"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.Add(HBOS.FS.AMP.UPD.Types.Status.ImportDetails)">
            <summary>
            Add a new ImportDetails to the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.Clear">
            <summary>
            Empty the collection of items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.Contains(HBOS.FS.AMP.UPD.Types.Status.ImportDetails)">
            <summary>
            Does the collection contain the specified item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.IndexOf(HBOS.FS.AMP.UPD.Types.Status.ImportDetails)">
            <summary>
            Returns the index of the specified item if it exists in the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.Insert(System.Int32,HBOS.FS.AMP.UPD.Types.Status.ImportDetails)">
            <summary>
            Insert an item at the specified position
            </summary>
            <param name="position"></param>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.Remove(HBOS.FS.AMP.UPD.Types.Status.ImportDetails)">
            <summary>
            Remove the specified item from the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.RemoveAt(System.Int32)">
            <summary>
            Remove an item from the specified position of the collection
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.GetEnumerator">
            <summary>
            Allows ForEach functionality
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.Clone">
            <summary>
            Create a new copy of the collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.AddRange(HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection)">
            <summary>
            Add a new range of ImportDetailsCollection from a ImportDetailsCollection collection
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.AddRange(HBOS.FS.AMP.UPD.Types.Status.ImportDetails[])">
            <summary>
            Add a new range of ImportDetailsCollection from an array
            AddRange Overload
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.ValidateIndex(System.Int32)">
            <summary>
            Is the specified Item index valid
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.ValidateIndex(System.Int32,System.Boolean)">
            <summary>
            Is the specified item index valid
            ValidateIndex overload
            </summary>
            <param name="index"></param>
            <param name="allowEqualEnd"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.NeedsGrowth">
            <summary>
            Does the collection need to increase in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.Grow">
            <summary>
            Increase the size of the collection
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.NeedsTrimming">
            <summary>
            Does the collection needs reducing in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.Trim">
            <summary>
            Reduce the size of the collection to the number of valid items
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.Item(System.Int32)">
            <summary>
            Assign or extract a specific item value from the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.Capacity">
            <summary>
            Set or return the size of collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.Enumerator">
            <summary>
            Nested enumerator class
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.Enumerator.MoveNext">
            <summary>
            Move to the next item
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.Enumerator.Reset">
            <summary>
            Reset the current item index to the previous item index
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Status.ImportDetailsCollection.Enumerator.Current">
            <summary>
            Get the currently selected item from the collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket">
            <summary>
            Summary description for MarketIndex.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket.#ctor(System.String,System.String,System.Int32,System.Boolean,System.Byte[])">
            <summary>
            Overrloaded constructor, used to populate from the DB
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket.Equals(System.Object)">
            <summary>
            Override the Equals as we are only worried if the indexname is the same and not the actual objects
            </summary>
            <param name="obj"></param>
            <returns>true is they have the same index name</returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket.op_Equality(HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket,HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket)">
            <summary>
            Overloaded equality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket.op_Inequality(HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket,HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket)">
            <summary>
            Overloaded inequality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket.GetHashCode">
            <summary>
            Gets the hash code. Overridden to call the base implementation (????)
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket.Global">
            <summary>
            Gets or sets the global flag.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket.CountryCode">
            <summary>
            Country code for the Market index
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket.IndexName">
            <summary>
            Index name for the asset fund Market index
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket.MarketIndexID">
            <summary>
            Proprtion figure for the asset fund Market index
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection">
            <summary>
            Summary description for MarketIndexCollection.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.#ctor">
            <summary>
            Fund collection constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.#ctor(HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection)">
            <summary>
            Fund collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.#ctor(HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket[])">
            <summary>
            Fund collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Get the List name for the colleciton
            </summary>
            <param name="listAccessors">Can be null</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Access to the Item Properties.
            </summary>
            <param name="listAccessors"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.CopyTo(HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket[])">
            <summary>
            Copies all the MarketIndexCollection in the collection to the specified target object
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.CopyTo(HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket[],System.Int32)">
            <summary>
            Extract a range of items from the collection starting at the specified start index  
            </summary>
            <param name="array"></param>
            <param name="start"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.Add(HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket)">
            <summary>
            Add a new fund to the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.Clear">
            <summary>
            Empty the collection of items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.Contains(HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket)">
            <summary>
            Does the collection contain the specified item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.IndexOf(HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket)">
            <summary>
            Returns the index of the specified item if it exists in the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.Insert(System.Int32,HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket)">
            <summary>
            Insert an item at the specified position
            </summary>
            <param name="position"></param>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.Remove(HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket)">
            <summary>
            Remove the specified item from the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.RemoveAt(System.Int32)">
            <summary>
            Remove an item from the specified position of the collection
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.GetEnumerator">
            <summary>
            Allows ForEach functionality
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.Clone">
            <summary>
            Create a new copy of the collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.AddRange(HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection)">
            <summary>
            Add a new range of MarketIndexCollection from a MarketIndexCollection collection
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.AddRange(HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarket[])">
            <summary>
            Add a new range of MarketIndexCollection from an array
            AddRange Overload
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.ValidateIndex(System.Int32)">
            <summary>
            Is the specified Item index valid
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.ValidateIndex(System.Int32,System.Boolean)">
            <summary>
            Is the specified item index valid
            ValidateIndex overload
            </summary>
            <param name="index"></param>
            <param name="allowEqualEnd"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.NeedsGrowth">
            <summary>
            Does the collection need to increase in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.Grow">
            <summary>
            Increase the size of the collection
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.NeedsTrimming">
            <summary>
            Does the collection needs reducing in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.Trim">
            <summary>
            Reduce the size of the collection to the number of valid items
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.Item(System.Int32)">
            <summary>
            Assign or extract a specific item value from the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.Capacity">
            <summary>
            Set or return the size of collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.Enumerator">
            <summary>
            Nested enumerator class
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.Enumerator.MoveNext">
            <summary>
            Move to the next item
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.Enumerator.Reset">
            <summary>
            Reset the current item index to the previous item index
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.AssetFunds.StockMarketCollection.Enumerator.Current">
            <summary>
            Get the currently selected item from the collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex">
            <summary>
            Summary description for StockMarketIndex.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex.#ctor(System.Int32,System.String,System.Object,System.Object,HBOS.FS.AMP.UPD.Types.Currency.Currency)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex"/> instance.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex.#ctor(System.Int32,System.String,HBOS.FS.AMP.UPD.Types.Currency.Currency,System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex"/> instance.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex.Equals(System.Object)">
            <summary>
            Override the Equals as we are only worried if the indexname is the same and not the actual objects
            </summary>
            <param name="obj"></param>
            <returns>true is they have the same index name</returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex.op_Equality(HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex,HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex)">
            <summary>
            Overloaded equality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex.op_Inequality(HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex,HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex)">
            <summary>
            Overloaded inequality operator
            </summary>
            <param name="lhs">First Object to compare</param>
            <param name="rhs">Second Object to compare</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex.GetHashCode">
            <summary>
            Gets the hash code. Overridden to call the base implementation (????)
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex.Movement">
            <summary>
            Gets the Benchmark movement.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex.Currency">
            <summary>
            Gets the Bench Mark currency.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex.Availability">
            <summary>
            Gets the state of availability for the Bench Mark.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex.MarketName">
            <summary>
            Toes the string.
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex.BenchMarkType">
            <summary>
            Gets the bench mark type.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex.BenchMarkSubType">
            <summary>
            Gets the bench mark sub type.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex.PreviousBenchmarkValue">
            <summary>
            Gets the previous benchmark value.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex.CurrentBenchmarkValue">
            <summary>
            Gets the current benchmark value.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex.MarketIndexId">
            <summary>
            Gets the market index unique id.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex.CurrentValue">
            <summary>
            Gets the current value of the market.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex.PreviousValue">
            <summary>
            Gets the previous value of the market.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.StockMarketIndex.StockMarketIndex.CountryCode">
            <summary>
            Gets the country code.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Users.Permission">
            <summary>
            Summary description for Permission.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.Permission.#ctor(System.String,System.Int32,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.Users.Permission"/> instance.
            </summary>
            <param name="id">Permission Id.</param>
            <param name="displayName">The display name.</param>
            <param name="granted">Whether or not the permission is granted.</param>
            <param name="companyCode">Code of Company for which these permissions apply for the specified user</param>
            
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.Permission.ToString">
            <summary>
            Shows the DisplayName.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.Permission.Add(HBOS.FS.AMP.UPD.Types.Users.Permission)">
            <summary>
            Adds the specified permission.
            </summary>
            <param name="permission">Permission.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.Permission.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.Permission.CompanyCode">
            <summary>
            Gets the company code.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.Permission.DisplayName">
            <summary>
            Gets the name of this <see cref="T:HBOS.FS.AMP.UPD.Types.Users.Permission"/> .
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.Permission.Granted">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:HBOS.FS.AMP.UPD.Types.Users.UserPermission"/> is granted.
            </summary>
            <value>
            	<c>true</c> if granted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.Permission.UniqueName">
            <summary>
            Gets the attribute name that refers to this <see cref="T:HBOS.FS.AMP.UPD.Types.Users.Permission"/>.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.Permission.PermissionId">
            <summary>
            Gets the unique Id of this <see cref="T:HBOS.FS.AMP.UPD.Types.Users.Permission"/> .
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.Permission.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:HBOS.FS.AMP.UPD.Types.Users.Permission"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Users.PermissionGroup">
            <summary>
            Summary description for PermissionGroup.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.PermissionGroup.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.PermissionGroup.Add(HBOS.FS.AMP.UPD.Types.Users.Permission)">
            <summary>
            Adds the specified permission.
            </summary>
            <param name="permission">Permission.</param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.PermissionGroup.#ctor(System.String,System.Int32,System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.Users.Permission"/> instance.
            </summary>
            <param name="id">Permission Id.</param>
            <param name="displayName">The display name.</param>
            /// <param name="companyCode">Code of Company for which these permissions apply for the specified user</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.PermissionGroup.IsDirty">
            <summary>
            Gets or sets a value indicating whether this instance is dirty.
            </summary>
            <value>
            	<c>true</c> if this instance is dirty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.PermissionGroup.Item(System.Int32)">
            <summary>
            Gets or sets the <see cref="T:HBOS.FS.AMP.UPD.Types.Users.Permission"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.PermissionGroup.Granted">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:HBOS.FS.AMP.UPD.Types.Users.PermissionGroup"/> is granted.
            </summary>
            <value>
            	<c>true</c> if granted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Users.ExportStaticDataUserDetails">
            <summary>
            This is the user object used for static data export
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Users.User">
            <summary>
            This is the user object
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.User.#ctor(System.String,System.String,System.Boolean,System.String,System.DateTime,System.Byte[])">
            <summary>
            This constructor is to be used when the object is populated fromm the database
            </summary>
            <param name="LoginID"></param>
            <param name="UserName"></param>
            <param name="DeletedInDB"></param>
            <param name="LastChangedBy"></param>
            <param name="LastChangedDate"></param>
            <param name="Timestamp"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.User.#ctor(System.String,System.String)">
            <summary>
            This constructor is to be used when the client creates new users
            </summary>
            <param name="LoginID"></param>
            <param name="UserName"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.User.#ctor">
            <summary>
            This constructor is to be used when the client creates new users
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.User.GetAllPermissions">
            <summary>
            Gets the all permissions including those not granted for this user.
            </summary>
            <returns></returns>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.User.UserName">
            <summary>
            The users name
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.User.LogOnID">
            <summary>
            The login ID
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.User.IsDeletedInDB">
            <summary>
            The deleted flag from the database (read only)
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.User.LastChangedBy">
            <summary>
            The login id of the person who last changed this record (read only)
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.User.LastChangedDate">
            <summary>
            The date this record was last changed (read only)
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.User.Permissions">
            <summary>
            This object holds the users actual permissions
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.ExportStaticDataUserDetails.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.Users.ExportStaticDataUserDetails"/> instance.
            </summary>
            <param name="loginId">Login id.</param>
            <param name="userName">Name of the user.</param>
            <param name="displayName">Permission display name.</param>
            <param name="granted">Is the permission Granted to the User.</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.ExportStaticDataUserDetails.Granted">
            <summary>
            Gets a value indicating whether this <see cref="T:HBOS.FS.AMP.UPD.Types.Users.ExportStaticDataUserDetails"/> is granted.
            </summary>
            <value>
            	<c>true</c> if granted; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.ExportStaticDataUserDetails.DisplayName">
            <summary>
            Gets the name of the display.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Users.UserCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.#ctor">
            <summary>
            Fund collection constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.#ctor(HBOS.FS.AMP.UPD.Types.Users.UserCollection)">
            <summary>
            Fund collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.#ctor(HBOS.FS.AMP.UPD.Types.Users.User[])">
            <summary>
            User collection overloaded constructor
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.GetListName(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Get the List name for the colleciton
            </summary>
            <param name="listAccessors">Can be null</param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.GetItemProperties(System.ComponentModel.PropertyDescriptor[])">
            <summary>
            Access to the Item Properties.
            </summary>
            <param name="listAccessors"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.CopyTo(HBOS.FS.AMP.UPD.Types.Users.User[])">
            <summary>
            Copies all the UserCollection in the collection to the specified target object
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.CopyTo(HBOS.FS.AMP.UPD.Types.Users.User[],System.Int32)">
            <summary>
            Extract a range of items from the collection starting at the specified start index  
            </summary>
            <param name="array"></param>
            <param name="start"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.Add(HBOS.FS.AMP.UPD.Types.Users.User)">
            <summary>
            Add a new fund to the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.Clear">
            <summary>
            Empty the collection of items
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.Contains(HBOS.FS.AMP.UPD.Types.Users.User)">
            <summary>
            Does the collection contain the specified item
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.IndexOf(HBOS.FS.AMP.UPD.Types.Users.User)">
            <summary>
            Returns the index of the specified item if it exists in the collection
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.Insert(System.Int32,HBOS.FS.AMP.UPD.Types.Users.User)">
            <summary>
            Insert an item at the specified position
            </summary>
            <param name="position"></param>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.Remove(HBOS.FS.AMP.UPD.Types.Users.User)">
            <summary>
            Remove the specified item from the collection
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.RemoveAt(System.Int32)">
            <summary>
            Remove an item from the specified position of the collection
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.GetEnumerator">
            <summary>
            Allows ForEach functionality
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.Clone">
            <summary>
            Create a new copy of the collection
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.AddRange(HBOS.FS.AMP.UPD.Types.Users.UserCollection)">
            <summary>
            Add a new range of UserCollection from a UserCollection collection
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.AddRange(HBOS.FS.AMP.UPD.Types.Users.User[])">
            <summary>
            Add a new range of UserCollection from an array
            AddRange Overload
            </summary>
            <param name="array"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.ValidateIndex(System.Int32)">
            <summary>
            Is the specified Item index valid
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.ValidateIndex(System.Int32,System.Boolean)">
            <summary>
            Is the specified item index valid
            ValidateIndex overload
            </summary>
            <param name="index"></param>
            <param name="allowEqualEnd"></param>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.NeedsGrowth">
            <summary>
            Does the collection need to increase in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.Grow">
            <summary>
            Increase the size of the collection
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.NeedsTrimming">
            <summary>
            Does the collection needs reducing in size?
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.Trim">
            <summary>
            Reduce the size of the collection to the number of valid items
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.UserCollection.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.UserCollection.Item(System.Int32)">
            <summary>
            Assign or extract a specific item value from the collection
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.UserCollection.Capacity">
            <summary>
            Set or return the size of collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Users.UserCollection.Enumerator">
            <summary>
            Nested enumerator class
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.Enumerator.MoveNext">
            <summary>
            Move to the next item
            </summary>
            <returns></returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserCollection.Enumerator.Reset">
            <summary>
            Reset the current item index to the previous item index
            </summary>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.UserCollection.Enumerator.Current">
            <summary>
            Get the currently selected item from the collection
            </summary>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.Users.UserPermission">
            <summary>
            Summary description for UserPermission.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.Users.UserPermission.#ctor(System.String,System.Int32,System.String,System.Boolean,System.String)">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.Users.Permission"/> instance.
            </summary>
            <param name="id">Permission Id.</param>
            <param name="displayName">The display name.</param>
            <param name="granted">Whether or not the permission is granted.</param>
            <param name="uniqueName">Name of the attribute for use in attribute based security.</param>
            <param name="companyCode">Code of Company for which these permissions apply for the specified user</param>
        </member>
        <member name="P:HBOS.FS.AMP.UPD.Types.Users.UserPermission.UniqueName">
            <summary>
            Gets the attribute name that refers to this <see cref="T:HBOS.FS.AMP.UPD.Types.Users.Permission"/>.
            </summary>
            <value></value>
        </member>
        <member name="T:HBOS.FS.AMP.UPD.Types.DisplayFormat">
            <summary>
            Summary description for DisplayFormat.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DisplayFormat.#ctor">
            <summary>
            Creates a new <see cref="T:HBOS.FS.AMP.UPD.Types.DisplayFormat"/> instance.
            </summary>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DisplayFormat.Currency(System.Decimal,System.Boolean)">
            <summary>
            Convert currency fields to display friendly fields, catering for nulls.
            </summary>
            <param name="amount">The currency value to display.</param>
            <param name="amountSet">Flag indicating whether the value has been set or not.</param>
            <returns>The amount formatted to a currency display string for the current culture.</returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DisplayFormat.Decimal(System.Decimal,System.Boolean)">
            <summary>
            Convert decimal fields to display friendly fields, catering for nulls.
            </summary>
            <param name="amount">The decimal value to display.</param>
            <param name="amountSet">Flag indicating whether the value has been set or not.</param>
            <returns>The amount if it is set or the unavailable text if it isn't.</returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DisplayFormat.Decimal(System.Decimal,System.Boolean,System.String)">
            <summary>
            Convert decimal fields to display friendly fields, catering for nulls.
            Allows scale and precision to be set. e.g. 123.45 has precision of 5 and scale of 2
            </summary>
            <param name="amount">The decimal value to display.</param>
            <param name="amountSet">Flag indicating whether the value has been set or not.</param>
            <param name="formatString">A format string </param>
            <returns>The amount if it is set or the unavailable text if it isn't.</returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DisplayFormat.Percent(System.Decimal,System.Boolean)">
            <summary>
            Convert fractional fields to display friendly percent fields, catering for nulls.
            </summary>
            <param name="amount">The decimal value to display.</param>
            <param name="amountSet">Flag indicating whether the value has been set or not.</param>
            <returns>The percent value if it is set or the unavailable text if it isn't.</returns>
        </member>
        <member name="M:HBOS.FS.AMP.UPD.Types.DisplayFormat.ShortDate(System.DateTime,System.Boolean)">
            <summary>
            Formats date to short date or displays 'Unavailable'
            </summary>
            <param name="dt"></param>
            <param name="dateSet"></param>
            <returns></returns>
        </member>
    </members>
</doc>
