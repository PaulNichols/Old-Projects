using HBOS.FS.AMP.UPD.Exceptions;
using HBOS.FS.AMP.UPD.Types.AssetFunds;
using HBOS.FS.AMP.UPD.Types.Currency;
using HBOS.FS.Support.Tex;

namespace HBOS.FS.AMP.UPD.Persistence
{
	/// <summary>
	/// Persister for the Currency class.
	/// </summary>
	public class CurrencyPersister : EntityPersister
	{
		/// <summary>
		/// Creates a new <see cref="CurrencyPersister"/> instance.
		/// </summary>
		/// <param name="connectionString">Database connection string.</param>
		public CurrencyPersister(string connectionString) : base(connectionString)
		{
		}

		/// <summary>
		/// Loads the collection of countries from the database.
		/// </summary>
		/// <returns>A collection of all our countries</returns>
		/// <exception cref="DatabaseException">Unable to load company</exception>
		/// <exception cref="InvalidSqlParameterException">Attempt to call stored proc with an invalid parameter</exception>
		public CurrencyCollection Load()
		{
			T.E();
			CurrencyCollection currencies = new CurrencyCollection();
			this.LoadEntityCollection("usp_CurrenciesList", currencies);
			T.X();
			return currencies;
		}

		/// <summary>
		/// Creates the entity from the data reader.
		/// </summary>
		/// <param name="safeReader">Reader to get the data from.</param>
		/// <returns></returns>
		protected override object CreateEntity(SafeDataReader safeReader)
		{
			T.E();
			Currency curr = AssetFundFactory.CreateCurrency(safeReader.GetString("currencyCode"));
			T.X();
			return curr;
		}
	}
}