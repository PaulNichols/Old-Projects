'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Views.Service
    
    'Service implementation for table 'vTaxonomyLegislationCITES'
    '*DO* add your modifications to this file
    Public Class TaxonomyLegislationCITESService
        Inherits Base.TaxonomyLegislationCITESServiceBase

        Protected Shared Sub RaiseSqlErrors(ByVal sqlcommand As String, ByVal Service As EnterpriseObjects.Service)
            RaiseSqlErrors(sqlcommand, Service, Nothing)
        End Sub

        Protected Shared Sub RaiseSqlErrors(ByVal sqlcommand As String, ByVal Service As EnterpriseObjects.Service, ByVal tran As SqlClient.SqlTransaction)
            If Not Service.GetLastDBError Is Nothing Then
                If Not tran Is Nothing AndAlso Not Service Is Nothing Then
                    Service.EndTransaction(tran, Service.TransactionEndEnum.Rollback)
                End If
                Throw New Exception("Error with " + sqlcommand + ": " + Service.GetLastDBError.ErrorMessage)
            End If
        End Sub

        Public Shared Function ParseParams(ByVal data As String) As String
            'remove SQL stuff
            Return EnterpriseObjects.Common.ParseSQLText(data, True, True)
        End Function

        Public Shared Function GetSummaryByTaxon(ByVal KingdomID As Int32, ByVal TaxonID As Int32, ByVal TaxonTypeID As Int32) As Views.Collection.TaxonomyLegislationCITESBoundCollection
            'create a command...
            Dim command As System.Data.SqlClient.SqlCommand = New System.Data.SqlClient.SqlCommand("dbo.usp_GetSummaryCITESLegislationByTaxon")
            command.CommandType = System.Data.CommandType.StoredProcedure

            'parameters...
            command.Parameters.Add("@KingdomID", System.Data.SqlDbType.Int).Value = ParseParams(KingdomID)
            command.Parameters.Add("@TaxonID", System.Data.SqlDbType.Int).Value = ParseParams(TaxonID)
            command.Parameters.Add("@TaxonTypeID", System.Data.SqlDbType.Int).Value = ParseParams(TaxonTypeID)

            Dim service As Views.Service.TaxonomyLegislationCITESService
            service = Views.Entity.TaxonomyLegislationCITES.ServiceObject
            Dim ResultsSet As Views.EntitySet.TaxonomyLegislationCITESSet = CType(service.GetEntitySet(command, GetType(Views.EntitySet.TaxonomyLegislationCITESSet)), Views.EntitySet.TaxonomyLegislationCITESSet)

            command.Dispose()
            RaiseSqlErrors("GetSummaryByTaxon", service)
            Return ResultsSet.Entities

        End Function

        Public Shared Function GetCurrentByTaxon(ByVal KingdomID As Int32, ByVal TaxonID As Int32, ByVal TaxonTypeID As Int32) As Views.Collection.TaxonomyLegislationCITESBoundCollection
            'create a command...
            Dim command As System.Data.SqlClient.SqlCommand = New System.Data.SqlClient.SqlCommand("dbo.usp_GetCurrentCITESLegislationByTaxon")
            command.CommandType = System.Data.CommandType.StoredProcedure

            'parameters...
            command.Parameters.Add("@KingdomID", System.Data.SqlDbType.Int).Value = ParseParams(KingdomID)
            command.Parameters.Add("@TaxonID", System.Data.SqlDbType.Int).Value = ParseParams(TaxonID)
            command.Parameters.Add("@TaxonTypeID", System.Data.SqlDbType.Int).Value = ParseParams(TaxonTypeID)

            Dim service As Views.Service.TaxonomyLegislationCITESService
            service = Views.Entity.TaxonomyLegislationCITES.ServiceObject
            Dim ResultsSet As Views.EntitySet.TaxonomyLegislationCITESSet = CType(service.GetEntitySet(command, GetType(Views.EntitySet.TaxonomyLegislationCITESSet)), Views.EntitySet.TaxonomyLegislationCITESSet)

            command.Dispose()
            RaiseSqlErrors("GetCurrentByTaxon", service)
            If ResultsSet.Count > 0 Then
                Return ResultsSet.Entities
            Else
                Return Nothing
            End If

        End Function

    End Class
End Namespace
