'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Views.Service
    
    'Service implementation for table 'vTaxonomyTaxonAll'
    '*DO* add your modifications to this file
    Public Class TaxonomyTaxonAllService
        Inherits Base.TaxonomyTaxonAllServiceBase

        Protected Shared Sub RaiseSqlErrors(ByVal sqlcommand As String, ByVal Service As EnterpriseObjects.Service)
            RaiseSqlErrors(sqlcommand, Service, Nothing)
        End Sub

        Protected Shared Sub RaiseSqlErrors(ByVal sqlcommand As String, ByVal Service As EnterpriseObjects.Service, ByVal tran As SqlClient.SqlTransaction)
            If Not Service.GetLastDBError Is Nothing Then
                If Not tran Is Nothing AndAlso Not Service Is Nothing Then
                    Service.EndTransaction(tran, Service.TransactionEndEnum.Rollback)
                End If
                Throw New Exception("Error with " + sqlcommand + ": " + Service.GetLastDBError.ErrorMessage)
            End If
        End Sub

        Public Shared Function GetTaxonByID(ByVal ID As Int32) As Views.Collection.TaxonomyTaxonAllBoundCollection
            'create a command...
            Dim command As System.Data.SqlClient.SqlCommand = New System.Data.SqlClient.SqlCommand("dbo.usp_GetTaxonByID")
            command.CommandType = System.Data.CommandType.StoredProcedure

            'parameters...
            command.Parameters.Add("@ID", System.Data.SqlDbType.Int).Value = (ID)

            Dim service As Views.service.TaxonomyTaxonAllService
            service = Views.Entity.TaxonomyTaxonAll.ServiceObject
            Dim TaxonSet As Views.EntitySet.TaxonomyTaxonAllSet = CType(service.GetEntitySet(command, GetType(Views.EntitySet.TaxonomyTaxonAllSet)), Views.EntitySet.TaxonomyTaxonAllSet)

            command.Dispose()
            RaiseSqlErrors("GetTaxonID", service)
            Return TaxonSet.Entities()

        End Function
    End Class
End Namespace
