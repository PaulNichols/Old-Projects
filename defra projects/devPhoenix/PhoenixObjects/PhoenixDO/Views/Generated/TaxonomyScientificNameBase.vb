'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Views.Base
    
    'Base entity implementation for table 'vTaxonomyScientificName'
    '*DO NOT* modify this file.
    'Add new properties and methods to TaxonomyScientificName instead.
    Public MustInherit Class TaxonomyScientificNameBase
        Inherits EnterpriseObjects.Entity
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Property KingdomID As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Property TaxonID As Integer
            Get
                Return CType(Me(1),Integer)
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        Public Property TaxonTypeID As Integer
            Get
                Return CType(Me(2),Integer)
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        Public Overrides Property ID() As Integer
            Get
                Return CType(Me(3), Integer)
            End Get
            Set(ByVal Value As Integer)
                Me(3) = Value
            End Set
        End Property

        Public Property ScientificName() As String
            Get
                If (Me.IsScientificNameNull = True) Then
                    Return Nothing
                Else
                    Return CType(Me(4), String)
                End If
            End Get
            Set(ByVal Value As String)
                Me(4) = Value
            End Set
        End Property

        Public Shared ReadOnly Property ServiceObject() As Service.TaxonomyScientificNameService
            Get
                Return CType(GetServiceObject(GetType(Service.TaxonomyScientificNameService)), Service.TaxonomyScientificNameService)
            End Get
        End Property

        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub

        Public Function IsScientificNameNull() As Boolean
            Return Me.IsNull(4)
        End Function

        Public Sub SetScientificNameToNull()
            Me(4) = System.DBNull.Value
        End Sub

        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(5)
        End Sub

        Public Overloads Shared Function GetAll() As EntitySet.TaxonomyScientificNameSet
            Return TaxonomyScientificNameBase.GetAll(False, False, TaxonomyScientificNameServiceBase.OrderBy.DefaultOrder)
        End Function

        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.TaxonomyScientificNameSet
            Return TaxonomyScientificNameBase.GetAll(includeHyphen, False, TaxonomyScientificNameServiceBase.OrderBy.DefaultOrder)
        End Function

        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As TaxonomyScientificNameServiceBase.OrderBy) As EntitySet.TaxonomyScientificNameSet
            Dim service As service.TaxonomyScientificNameService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function

        Public Overloads Shared Function GetAll(ByVal orderBy As TaxonomyScientificNameServiceBase.OrderBy) As EntitySet.TaxonomyScientificNameSet
            Return TaxonomyScientificNameBase.GetAll(False, False, orderBy)
        End Function
    End Class
End Namespace
