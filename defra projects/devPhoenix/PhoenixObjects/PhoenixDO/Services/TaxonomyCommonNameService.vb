'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Service
    
    'Service implementation for table 'TaxonomyCommonName'
    '*DO* add your modifications to this file
    Public Class TaxonomyCommonNameService
        Inherits Base.TaxonomyCommonNameServiceBase

        Public Shared Function ParseParams(ByVal data As String) As String
            'remove SQL stuff
            Return EnterpriseObjects.Common.ParseSQLText(data, True, True)
        End Function

#Region " GetCommonNamesByInfo "

        Public Shared Function GetAvesClassCommonNamesByInfo(ByVal KingdomID As Int32, ByVal SearchString1 As String, ByVal SearchString2 As String, ByVal Soundex As Boolean) As Collection.TaxonomyCommonNameBoundCollection
            Return mGetCommonNamesByInfo("dbo.usp_SearchTaxonomyCommonNameAvesClass", KingdomID, SearchString1, SearchString2, Soundex)
        End Function

        Public Shared Function GetCommonNamesByInfo(ByVal KingdomID As Int32, ByVal SearchString1 As String, ByVal SearchString2 As String, ByVal Soundex As Boolean) As Collection.TaxonomyCommonNameBoundCollection
            Return mGetCommonNamesByInfo("dbo.usp_SearchTaxonomyCommonName", KingdomID, SearchString1, SearchString2, Soundex)
        End Function

        Public Shared Function GetSched4CommonNamesByInfo(ByVal KingdomID As Int32, ByVal SearchString1 As String, ByVal SearchString2 As String, ByVal Soundex As Boolean) As Collection.TaxonomyCommonNameBoundCollection
            Return mGetCommonNamesByInfo("dbo.usp_SearchTaxonomyCommonNameSched4", KingdomID, SearchString1, SearchString2, Soundex)
        End Function

        Private Shared Function mGetCommonNamesByInfo(ByVal SQLCommand As String, ByVal KingdomID As Int32, ByVal SearchString1 As String, ByVal SearchString2 As String, ByVal Soundex As Boolean) As Collection.TaxonomyCommonNameBoundCollection
            'create a command...
            Dim command As System.Data.SqlClient.SqlCommand = New System.Data.SqlClient.SqlCommand(SQLCommand)
            command.CommandType = System.Data.CommandType.StoredProcedure

            Dim FormattedSearchString1 As String
            'parameters...
            command.Parameters.Add("@KingdomID", System.Data.SqlDbType.Int).Value = ParseParams(KingdomID)
            If Not SearchString1 Is Nothing AndAlso SearchString1.Length > 0 Then
                If Soundex = True Then
                    FormattedSearchString1 = ParseParams(SearchString1)
                Else
                    FormattedSearchString1 = ParseParams(PendWildcards(SearchString1))
                End If
                command.Parameters.Add("@SearchString1", System.Data.SqlDbType.VarChar, 100).Value = FormattedSearchString1
            End If
            If Not SearchString2 Is Nothing AndAlso SearchString2.Length > 0 Then
                If Soundex = True Then
                    command.Parameters.Add("@SearchString2", System.Data.SqlDbType.VarChar, 100).Value = ParseParams(SearchString2)
                Else
                    command.Parameters.Add("@SearchString2", System.Data.SqlDbType.VarChar, 100).Value = ParseParams(PendWildcards(SearchString2))
                End If
            Else
                command.Parameters.Add("@SearchString2", System.Data.SqlDbType.VarChar, 100).Value = FormattedSearchString1
            End If
            command.Parameters.Add("@Soundex", System.Data.SqlDbType.Bit).Value = Soundex

            Dim service As service.TaxonomyCommonNameService
            service = Entity.TaxonomyCommonName.ServiceObject
            Dim CommonNameSet As EntitySet.TaxonomyCommonNameSet = CType(service.GetEntitySet(command, GetType(EntitySet.TaxonomyCommonNameSet)), EntitySet.TaxonomyCommonNameSet)

            command.Dispose()

            Return CommonNameSet.Entities()
        End Function

        Private Shared Function PendWildcards(ByVal searchstring As String) As String
            Dim workersearchstring As New Text.StringBuilder(searchstring)
            'Check if the beginning of the search string contains a wildcard.
            If searchstring.StartsWith("*") = False _
            And searchstring.StartsWith("?") = False Then
                'The beginning of the search string does not contain any wildcards so add a wildcard.
                workersearchstring.Insert(0, "*")
            End If
            'Check if the end of the search string contains a wildcard.
            If searchstring.EndsWith("*") = False _
            And searchstring.EndsWith("?") = False Then
                'The end of the search string does not contain any wildcards so add a wildcard.
                workersearchstring.Append("*")
            End If
            Return workersearchstring.ToString
        End Function
#End Region

    End Class
End Namespace
