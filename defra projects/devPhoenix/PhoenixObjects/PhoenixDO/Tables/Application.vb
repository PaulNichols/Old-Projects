'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Entity
    
    'Entity implementation for table 'Application'
    '*DO* add your modifications to this file
    <System.Serializable()>  _
    Public Class Application
        Inherits Base.ApplicationBase
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal applicationId As Integer)
            MyBase.New(applicationId)
        End Sub
        
        Public Sub New(ByVal applicationId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New(applicationId, tran)
        End Sub
        
        Public Shadows Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub

        Function GetRelatedNotes() As EntitySet.NoteSet
            If Id > 0 Then
                Return GetRelatedNotes(Me.Id)
            Else
                Return Nothing
            End If
        End Function

        Shared Function GetRelatedNotes(ByVal partyId As Int32) As EntitySet.NoteSet
            Return Entity.Note.GetForApplication(partyId)
        End Function

        Shared Function ResetAdviceAndConditionsCurrentFlag(ByVal permitIds() As Int32) As Boolean
            Dim Service As New Service.ApplicationService
            Dim tran As SqlClient.SqlTransaction = Service.BeginTransaction

            If Not permitIds Is Nothing AndAlso permitIds.Length > 0 Then
                For Each Id As Int32 In permitIds
                    Sprocs.dbo_usp_ResetAdviceAndConditionsCurrentFlag(Id, tran)
                    If Not Sprocs.LastError Is Nothing Then
                        Service.EndTransaction(tran, EnterpriseObjects.Service.TransactionEndEnum.Rollback)
                        Return False
                    End If

                Next
            End If

            Service.EndTransaction(tran, EnterpriseObjects.Service.TransactionEndEnum.Commit)
            Return True
        End Function

        Shared Function GetMethodTotals(ByVal fromDate As Date, ByVal toDate As Date) As EnterpriseObjects.EntitySet  'MLD 3/2/5 added
            Dim Service As New Service.ApplicationService
            Dim tran As SqlClient.SqlTransaction = Service.BeginTransaction
            Dim results As Object 

            results = Sprocs.dbo_usp_SearchApplicationMethods(fromDate, toDate, tran, GetType(EnterpriseObjects.EntitySet))
            If Not Sprocs.LastError Is Nothing Then
                Service.EndTransaction(tran, EnterpriseObjects.Service.TransactionEndEnum.Rollback)
                Return Nothing
            End If
            Service.EndTransaction(tran, EnterpriseObjects.Service.TransactionEndEnum.Commit)
            Return CType(results, EnterpriseObjects.EntitySet) 
        End Function

    End Class
End Namespace
