'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Entity
    
    'Entity implementation for table 'IDMarkType'
    '*DO* add your modifications to this file
    <System.Serializable()>  _
    Public Class IDMarkType
        Inherits Base.IDMarkTypeBase
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal iDMarkTypeID As Integer)
            MyBase.New(iDMarkTypeID)
        End Sub
        
        Public Sub New(ByVal iDMarkTypeID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New(iDMarkTypeID, tran)
        End Sub
        
        Public Shadows Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub

        Shared Function GetBirdsForApplication(ByVal markType As Int32, ByVal markNumber As String) As EnterpriseObjects.EntitySet
            Return GetBirdsForApplication(markType, markNumber, Nothing)
        End Function

        Shared Function GetBirdsForApplication(ByVal markType As Int32, ByVal markNumber As String, ByVal tran As SqlClient.SqlTransaction) As EnterpriseObjects.EntitySet
            Dim Entities As EnterpriseObjects.EntitySet = CType(Sprocs.dbo_usp_GetBirds(markType, markNumber, tran, GetType(EnterpriseObjects.EntitySet)), EnterpriseObjects.EntitySet)
            ParseGetBirdEntities(Entities, tran)
            Return Entities
        End Function

        Shared Function GetBirdsForApplication(ByVal permitNumber As String, ByVal keeperId As Int32, ByVal partyId As Object, ByVal searchStatusId As Object) As EnterpriseObjects.EntitySet
            Return IDMarkType.GetBirdsForApplication(permitNumber, partyId, searchStatusId, Nothing)
        End Function

        Shared Function GetBirdsForApplication(ByVal permitNumber As String, ByVal partyId As Object, ByVal searchStatusId As Object, ByVal tran As SqlClient.SqlTransaction) As EnterpriseObjects.EntitySet
            Dim PermitHelper As New Helpers.ApplicationPermitHelper(permitNumber)
            If PermitHelper.ApplicationId > 0 Then
                Dim Entities As EnterpriseObjects.EntitySet = CType(Sprocs.dbo_usp_GetBirdsByApplication(PermitHelper.ApplicationId, PermitHelper.PermitId, 0, partyId, searchStatusId, tran, GetType(EnterpriseObjects.EntitySet)), EnterpriseObjects.EntitySet)
                ParseGetBirdEntities(Entities, tran)
                Return Entities
            End If
        End Function

        Shared Function GetBirdsForApplication(ByVal partyId As Object, ByVal searchStatusId As Object) As EnterpriseObjects.EntitySet
            Return GetBirdsForApplication(partyId, searchStatusId, Nothing)
        End Function

        Shared Function GetBirdsForApplication(ByVal partyId As Object, ByVal searchStatusId As Object, ByVal tran As SqlClient.SqlTransaction) As EnterpriseObjects.EntitySet
            Dim Entities As EnterpriseObjects.EntitySet = CType(Sprocs.dbo_usp_GetBirdsByApplication(Nothing, Nothing, 0, partyId, searchStatusId, tran, GetType(EnterpriseObjects.EntitySet)), EnterpriseObjects.EntitySet)
            ParseGetBirdEntities(Entities, tran)
            Return Entities
        End Function

        Private Shared Sub ParseGetBirdEntities(ByRef entities As EnterpriseObjects.EntitySet, ByVal tran As SqlClient.SqlTransaction)
            If Not entities Is Nothing AndAlso entities.Count > 0 Then
                For Index As Int32 = 0 To entities.Count - 1
                    Dim Bird As EnterpriseObjects.Entity = entities.GetEntity(Index)
                    Dim SpecimenId As Int32 = CType(Bird(0), Int32)
                    Dim CommonNameCheck As New ArrayList
                    Dim ScientificNameCheck As New ArrayList
                    Dim ApplicationReferenceCheck As New ArrayList
                    Dim Article10ReferenceCheck As New ArrayList
                    Dim SpecimenMarkCheck As New ArrayList
                    Dim IdMarkCheck As New ArrayList

                    'load the permit specimen joins
                    Dim PermitSpecimenEntities As DataObjects.EntitySet.PermitSpecimenSet = DataObjects.Entity.PermitSpecimen.GetForSpecimen(SpecimenId, tran)
                    If Not PermitSpecimenEntities Is Nothing AndAlso PermitSpecimenEntities.Count > 0 Then
                        For Each PermitSpecimenEntity As DataObjects.Entity.PermitSpecimen In PermitSpecimenEntities
                            Dim PermitEntity As DataObjects.Entity.Permit = DataObjects.Entity.Permit.GetById(PermitSpecimenEntity.PermitId, tran)
                            If Not PermitEntity Is Nothing Then
                                'get common and scientific names
                                Dim SpecieEntity As DataObjects.Entity.Specie = DataObjects.Entity.Specie.GetById(PermitEntity.SpecieId, tran)
                                If Not SpecieEntity Is Nothing Then
                                    If Not SpecieEntity.IsCommonNameNull AndAlso SpecieEntity.CommonName.Length > 0 AndAlso Not CommonNameCheck.Contains(SpecieEntity.CommonName) Then
                                        If Bird.IsNull(1) OrElse Bird(1).ToString.Length = 0 Then Bird(1) = SpecieEntity.CommonName Else Bird(1) &= String.Concat(", ", SpecieEntity.CommonName)
                                        CommonNameCheck.Add(SpecieEntity.CommonName)
                                    End If
                                    If Not SpecieEntity.IsScientificNameNull AndAlso SpecieEntity.ScientificName.Length > 0 AndAlso Not ScientificNameCheck.Contains(SpecieEntity.ScientificName) Then
                                        If Bird.IsNull(2) OrElse Bird(2).ToString.Length = 0 Then Bird(2) = SpecieEntity.ScientificName Else Bird(2) &= String.Concat(", ", SpecieEntity.ScientificName)
                                        ScientificNameCheck.Add(SpecieEntity.ScientificName)
                                    End If
                                End If

                                'get application reference
                                If Not ApplicationReferenceCheck.Contains(PermitEntity.ApplicationReference) Then
                                    If Bird.IsNull(9) OrElse Bird(9).ToString.Length = 0 Then Bird(9) = PermitEntity.ApplicationReference Else Bird(9) &= String.Concat(", ", PermitEntity.ApplicationReference)
                                    ApplicationReferenceCheck.Add(PermitEntity.ApplicationReference)
                                End If

                                'get application info
                                Dim CITESApplicationEntities As DataObjects.Entityset.CITESApplicationSet = DataObjects.Entity.CITESApplication.GetForApplication(PermitEntity.ApplicationId, tran)
                                If Not CITESApplicationEntities Is Nothing AndAlso CITESApplicationEntities.Count > 0 Then
                                    For Each CITESApplicationEntity As DataObjects.Entity.CITESApplication In CITESApplicationEntities
                                        Dim Article10Entities As DataObjects.Entityset.Article10Set = DataObjects.Entity.Article10.GetForCITESApplication(CITESApplicationEntity.CitesApplicationId, tran)
                                        If Not Article10Entities Is Nothing AndAlso Article10Entities.Count > 0 Then
                                            For Each Article10Entity As DataObjects.Entity.Article10 In Article10Entities
                                                If Not Article10Entity Is Nothing AndAlso Not Article10ReferenceCheck.Contains(Article10Entity.Article10Id) Then
                                                    If Bird.IsNull(10) OrElse Bird(10).ToString.Length = 0 Then Bird(10) = Article10Entity.Article10Id.ToString.Trim() Else Bird(10) &= String.Concat(", ", Article10Entity.Article10Id.ToString.Trim())
                                                    Article10ReferenceCheck.Add(Article10Entity.Article10Id)
                                                End If
                                            Next Article10Entity
                                        End If
                                    Next CITESApplicationEntity
                                End If

                                'get other marks - 14
                                Dim SpecMarkId As Int32 = CType(Bird(14), Int32)

                                Dim SpecimenMarkEntities As DataObjects.Entityset.SpecimenIDMarkSet = DataObjects.Entity.SpecimenIDMark.GetForSpecimen(SpecimenId, tran)
                                If Not SpecimenMarkEntities Is Nothing AndAlso SpecimenMarkEntities.Count > 0 Then
                                    For Each SpecimenMarkEntity As DataObjects.Entity.SpecimenIDMark In SpecimenMarkEntities
                                        'check that this is not the id mark on the main record
                                        'we should only be adding marks that are different, but still related
                                        If SpecMarkId > 0 AndAlso SpecMarkId <> SpecimenMarkEntity.Id AndAlso Not SpecimenMarkCheck.Contains(SpecMarkId) Then
                                            'sort out the id mark number
                                            If Not SpecimenMarkEntity.IdMark Is Nothing AndAlso SpecimenMarkEntity.IdMark.Length > 0 Then
                                                If Bird.IsNull(15) OrElse Bird(15).ToString.Length = 0 Then
                                                    Bird(15) = SpecimenMarkEntity.IdMark.Trim()
                                                Else
                                                    Bird(15) &= String.Concat(", ", SpecimenMarkEntity.IdMark.Trim())
                                                End If
                                                SpecimenMarkCheck.Add(SpecMarkId)
                                            End If

                                            'sort out the idmark types
                                            If SpecimenMarkEntity.IDMarkTypeId > 0 AndAlso Not IdMarkCheck.Contains(SpecimenMarkEntity.IDMarkTypeId) Then
                                                'load the mark types
                                                Dim ThisMarkType As New DataObjects.Entity.IDMarkType(SpecimenMarkEntity.IDMarkTypeId)
                                                If Not ThisMarkType Is Nothing AndAlso Not ThisMarkType.Description Is Nothing AndAlso ThisMarkType.Description.Length > 0 Then
                                                    If Bird.IsNull(16) OrElse Bird(16).ToString.Length = 0 Then
                                                        Bird(16) = ThisMarkType.Description.Trim()
                                                    Else
                                                        Bird(16) &= String.Concat(", ", ThisMarkType.Description.Trim())
                                                    End If
                                                    IdMarkCheck.Add(SpecimenMarkEntity.IDMarkTypeId)
                                                End If
                                            End If
                                        End If
                                    Next SpecimenMarkEntity
                                End If


                            End If
                        Next PermitSpecimenEntity
                    End If
                Next Index
                For Each SingleEntity As EnterpriseObjects.Entity In entities

                    '.Id = CType(Bird(0), Int32) 'SpecimenId
                    'If Not Bird.IsNull(1) Then .CommonName = Bird(1).ToString Else .CommonName = String.Empty
                    'If Not Bird.IsNull(2) Then .ScientificName = Bird(2).ToString Else .ScientificName = String.Empty
                    'If Not Bird.IsNull(3) Then .IDMarkType = Bird(3).ToString Else .IDMarkType = String.Empty
                    'If Not Bird.IsNull(4) Then .IDMarkNumber = Bird(4).ToString Else .IDMarkNumber = String.Empty
                    'If Not Bird.IsNull(5) Then .Gender = Bird(5).ToString Else .Gender = String.Empty
                    'If Not Bird.IsNull(6) Then .Fate = Bird(6).ToString Else .Fate = String.Empty
                    'If Not Bird.IsNull(7) AndAlso TypeOf Bird(7) Is Date Then .HatchDate = CType(Bird(7), Date).ToShortDateString Else .HatchDate = String.Empty
                    'If Not Bird.IsNull(8) Then .HatchDateExact = Bird(8).ToString Else .HatchDateExact = String.Empty
                    'If Not Bird.IsNull(9) Then .RegDocRef = Bird(9).ToString Else .RegDocRef = String.Empty
                    'If Not Bird.IsNull(10) Then .A10Ref = Bird(10).ToString Else .A10Ref = String.Empty

                Next SingleEntity
            End If
        End Sub
    End Class
End Namespace
