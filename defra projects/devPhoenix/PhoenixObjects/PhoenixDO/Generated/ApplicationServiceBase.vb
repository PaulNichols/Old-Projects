'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'Application'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class ApplicationServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.ApplicationSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.ApplicationSet
            Return CType(MyBase.GetAll("eosp_SelectApplication", GetType(EntitySet.ApplicationSet), includeHyphen, includeInactive, orderBy),EntitySet.ApplicationSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.ApplicationSet
            Return Me.GetAll(includeHyphen, includeInactive, ApplicationServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, ApplicationServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.ApplicationSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal applicationId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectApplication", "ApplicationId", applicationId, GetType(EntitySet.ApplicationSet), tran),Entity.Application)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal applicationId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(applicationId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal applicationId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.Application
            Return CType(MyBase.GetById("eosp_SelectApplication", "ApplicationId", applicationId, GetType(EntitySet.ApplicationSet), tran),Entity.Application)
        End Function
        
        Public Overloads Function GetById(ByVal applicationId As Integer) As Entity.Application
            Return Me.GetById(applicationId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal applicationId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(applicationId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal applicationId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteApplication", "ApplicationId", applicationId, checkSum, transaction)
        End Function
        
        'GetForPartyLinkIdPartyLink - links to the PartyLink table...
        Public Overloads Function GetForPartyLinkIdPartyLink(ByVal PartyLinkId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ApplicationSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from Application where PartyLinkId=" + PartyLinkId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.ApplicationSet), tran),EntitySet.ApplicationSet)
        End Function
        
        'GetForPartyLinkIdPartyLink - links to the PartyLink table...
        Public Overloads Function GetForPartyLinkIdPartyLink(ByVal PartyLinkId As Integer) As EntitySet.ApplicationSet
            Return Me.GetForPartyLinkIdPartyLink(PartyLinkId, Nothing)
        End Function
        
        'GetForAgentLinkIdPartyLink - links to the PartyLink table...
        Public Overloads Function GetForAgentLinkIdPartyLink(ByVal AgentLinkId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ApplicationSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from Application where AgentLinkId=" + AgentLinkId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.ApplicationSet), tran),EntitySet.ApplicationSet)
        End Function
        
        'GetForAgentLinkIdPartyLink - links to the PartyLink table...
        Public Overloads Function GetForAgentLinkIdPartyLink(ByVal AgentLinkId As Integer) As EntitySet.ApplicationSet
            Return Me.GetForAgentLinkIdPartyLink(AgentLinkId, Nothing)
        End Function
        
        'GetForPaymentBasket - links to the PaymentBasket table...
        Public Overloads Function GetForPaymentBasket(ByVal PaymentBasketId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ApplicationSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from Application where PaymentBasketId=" + PaymentBasketId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.ApplicationSet), tran),EntitySet.ApplicationSet)
        End Function
        
        'GetForPaymentBasket - links to the PaymentBasket table...
        Public Overloads Function GetForPaymentBasket(ByVal PaymentBasketId As Integer) As EntitySet.ApplicationSet
            Return Me.GetForPaymentBasket(PaymentBasketId, Nothing)
        End Function
        
        'GetForApplicationType - links to the ApplicationType table...
        Public Overloads Function GetForApplicationType(ByVal ApplicationTypeId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ApplicationSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from Application where ApplicationTypeId"& _ 
"=" + ApplicationTypeId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.ApplicationSet), tran),EntitySet.ApplicationSet)
        End Function
        
        'GetForApplicationType - links to the ApplicationType table...
        Public Overloads Function GetForApplicationType(ByVal ApplicationTypeId As Integer) As EntitySet.ApplicationSet
            Return Me.GetForApplicationType(ApplicationTypeId, Nothing)
        End Function
        
        Public Overloads Function Insert( _
                    ByVal applicationDate As Date,  _
                    ByVal semiComplete As Boolean,  _
                    ByVal applicationMethodId As Object,  _
                    ByVal createdDate As Object,  _
                    ByVal paymentStatusId As Object,  _
                    ByVal retrospective As Boolean,  _
                    ByVal submitted As Boolean,  _
                    ByVal partyLinkId As Object,  _
                    ByVal agentLinkId As Object,  _
                    ByVal createdBy As Object,  _
                    ByVal validated As Boolean,  _
                    ByVal recievedDate As Object,  _
                    ByVal caseOfficerId As Object,  _
                    ByVal customerId As Object,  _
                    ByVal paymentBasketId As Object,  _
                    ByVal standardFee As Object,  _
                    ByVal feeCharged As Object,  _
                    ByVal applicationTypeId As Integer,  _
                    ByVal paidDate As Object,  _
                    ByVal ownerId As Object,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Application
            Return Me.GetById(Sprocs.eosp_CreateApplication(applicationDate, semiComplete, applicationMethodId, createdDate, paymentStatusId, retrospective, submitted, partyLinkId, agentLinkId, createdBy, validated, recievedDate, caseOfficerId, customerId, paymentBasketId, standardFee, feeCharged, applicationTypeId, paidDate, ownerId, transaction), transaction)
        End Function
        
        Public Overloads Function Insert( _
                    ByVal applicationDate As Date,  _
                    ByVal semiComplete As Boolean,  _
                    ByVal applicationMethodId As Object,  _
                    ByVal createdDate As Object,  _
                    ByVal paymentStatusId As Object,  _
                    ByVal retrospective As Boolean,  _
                    ByVal submitted As Boolean,  _
                    ByVal partyLinkId As Object,  _
                    ByVal agentLinkId As Object,  _
                    ByVal createdBy As Object,  _
                    ByVal validated As Boolean,  _
                    ByVal recievedDate As Object,  _
                    ByVal caseOfficerId As Object,  _
                    ByVal customerId As Object,  _
                    ByVal paymentBasketId As Object,  _
                    ByVal standardFee As Object,  _
                    ByVal feeCharged As Object,  _
                    ByVal applicationTypeId As Integer,  _
                    ByVal paidDate As Object,  _
                    ByVal ownerId As Object) As Entity.Application
            Return Me.Insert(applicationDate, semiComplete, applicationMethodId, createdDate, paymentStatusId, retrospective, submitted, partyLinkId, agentLinkId, createdBy, validated, recievedDate, caseOfficerId, customerId, paymentBasketId, standardFee, feeCharged, applicationTypeId, paidDate, ownerId, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal application As Entity.Application) As Entity.Application
            Return Me.Insert(application(1), application(2), application(3), application(4), application(5), application(6), application(7), application(8), application(9), application(10), application(11), application(12), application(13), application(14), application(15), application(16), application(17), application(18), application(19), application(20))
        End Function
        
        Public Overloads Function Insert(ByVal application As Entity.Application, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Application
            Return Me.Insert(application(1), application(2), application(3), application(4), application(5), application(6), application(7), application(8), application(9), application(10), application(11), application(12), application(13), application(14), application(15), application(16), application(17), application(18), application(19), application(20), transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal applicationDate As Date,  _
                    ByVal semiComplete As Boolean,  _
                    ByVal applicationMethodId As Object,  _
                    ByVal createdDate As Object,  _
                    ByVal paymentStatusId As Object,  _
                    ByVal retrospective As Boolean,  _
                    ByVal submitted As Boolean,  _
                    ByVal partyLinkId As Object,  _
                    ByVal agentLinkId As Object,  _
                    ByVal createdBy As Object,  _
                    ByVal validated As Boolean,  _
                    ByVal recievedDate As Object,  _
                    ByVal caseOfficerId As Object,  _
                    ByVal customerId As Object,  _
                    ByVal paymentBasketId As Object,  _
                    ByVal standardFee As Object,  _
                    ByVal feeCharged As Object,  _
                    ByVal applicationTypeId As Integer,  _
                    ByVal paidDate As Object,  _
                    ByVal ownerId As Object,  _
                    ByVal checkSum As Integer,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Application
            Return Sprocs.eosp_UpdateApplication(id, applicationDate, semiComplete, applicationMethodId, createdDate, paymentStatusId, retrospective, submitted, partyLinkId, agentLinkId, createdBy, validated, recievedDate, caseOfficerId, customerId, paymentBasketId, standardFee, feeCharged, applicationTypeId, paidDate, ownerId, checkSum, transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal applicationDate As Date,  _
                    ByVal semiComplete As Boolean,  _
                    ByVal applicationMethodId As Object,  _
                    ByVal createdDate As Object,  _
                    ByVal paymentStatusId As Object,  _
                    ByVal retrospective As Boolean,  _
                    ByVal submitted As Boolean,  _
                    ByVal partyLinkId As Object,  _
                    ByVal agentLinkId As Object,  _
                    ByVal createdBy As Object,  _
                    ByVal validated As Boolean,  _
                    ByVal recievedDate As Object,  _
                    ByVal caseOfficerId As Object,  _
                    ByVal customerId As Object,  _
                    ByVal paymentBasketId As Object,  _
                    ByVal standardFee As Object,  _
                    ByVal feeCharged As Object,  _
                    ByVal applicationTypeId As Integer,  _
                    ByVal paidDate As Object,  _
                    ByVal ownerId As Object) As Entity.Application
            Return Me.Update(id, applicationDate, semiComplete, applicationMethodId, createdDate, paymentStatusId, retrospective, submitted, partyLinkId, agentLinkId, createdBy, validated, recievedDate, caseOfficerId, customerId, paymentBasketId, standardFee, feeCharged, applicationTypeId, paidDate, ownerId, 0, Nothing)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal applicationDate As Date,  _
                    ByVal semiComplete As Boolean,  _
                    ByVal applicationMethodId As Object,  _
                    ByVal createdDate As Object,  _
                    ByVal paymentStatusId As Object,  _
                    ByVal retrospective As Boolean,  _
                    ByVal submitted As Boolean,  _
                    ByVal partyLinkId As Object,  _
                    ByVal agentLinkId As Object,  _
                    ByVal createdBy As Object,  _
                    ByVal validated As Boolean,  _
                    ByVal recievedDate As Object,  _
                    ByVal caseOfficerId As Object,  _
                    ByVal customerId As Object,  _
                    ByVal paymentBasketId As Object,  _
                    ByVal standardFee As Object,  _
                    ByVal feeCharged As Object,  _
                    ByVal applicationTypeId As Integer,  _
                    ByVal paidDate As Object,  _
                    ByVal ownerId As Object,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Application
            Return Me.Update(id, applicationDate, semiComplete, applicationMethodId, createdDate, paymentStatusId, retrospective, submitted, partyLinkId, agentLinkId, createdBy, validated, recievedDate, caseOfficerId, customerId, paymentBasketId, standardFee, feeCharged, applicationTypeId, paidDate, ownerId, 0, transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal applicationDate As Date,  _
                    ByVal semiComplete As Boolean,  _
                    ByVal applicationMethodId As Object,  _
                    ByVal createdDate As Object,  _
                    ByVal paymentStatusId As Object,  _
                    ByVal retrospective As Boolean,  _
                    ByVal submitted As Boolean,  _
                    ByVal partyLinkId As Object,  _
                    ByVal agentLinkId As Object,  _
                    ByVal createdBy As Object,  _
                    ByVal validated As Boolean,  _
                    ByVal recievedDate As Object,  _
                    ByVal caseOfficerId As Object,  _
                    ByVal customerId As Object,  _
                    ByVal paymentBasketId As Object,  _
                    ByVal standardFee As Object,  _
                    ByVal feeCharged As Object,  _
                    ByVal applicationTypeId As Integer,  _
                    ByVal paidDate As Object,  _
                    ByVal ownerId As Object,  _
                    ByVal checkSum As Integer) As Entity.Application
            Return Me.Update(id, applicationDate, semiComplete, applicationMethodId, createdDate, paymentStatusId, retrospective, submitted, partyLinkId, agentLinkId, createdBy, validated, recievedDate, caseOfficerId, customerId, paymentBasketId, standardFee, feeCharged, applicationTypeId, paidDate, ownerId, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal application As Entity.Application) As Entity.Application
            Return Me.Update(application.id, application(1), application(2), application(3), application(4), application(5), application(6), application(7), application(8), application(9), application(10), application(11), application(12), application(13), application(14), application(15), application(16), application(17), application(18), application(19), application(20))
        End Function
        
        Public Overloads Function Update(ByVal application As Entity.Application, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Application
            Return Me.Update(application.id, application(1), application(2), application(3), application(4), application(5), application(6), application(7), application(8), application(9), application(10), application(11), application(12), application(13), application(14), application(15), application(16), application(17), application(18), application(19), application(20), transaction)
        End Function
        
        Public Overloads Function Update(ByVal application As Entity.Application, ByVal checkSum As Integer) As Entity.Application
            Return Me.Update(application.id, application(1), application(2), application(3), application(4), application(5), application(6), application(7), application(8), application(9), application(10), application(11), application(12), application(13), application(14), application(15), application(16), application(17), application(18), application(19), application(20), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal application As Entity.Application, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Application
            Return Me.Update(application.id, application(1), application(2), application(3), application(4), application(5), application(6), application(7), application(8), application(9), application(10), application(11), application(12), application(13), application(14), application(15), application(16), application(17), application(18), application(19), application(20), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_Application(ByVal agentLinkId As Integer, ByVal partyLinkId As Integer) As EntitySet.ApplicationSet
            Return Sprocs.eosp_SelectApplication(applicationId:=Nothing, Index_AgentLinkId:=[agentLinkId], Index_PartyLinkId:=[partyLinkId], transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_Application(ByVal agentLinkId As Integer, ByVal partyLinkId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.ApplicationSet
            Return Sprocs.eosp_SelectApplication(applicationId:=Nothing, Index_AgentLinkId:=[agentLinkId], Index_PartyLinkId:=[partyLinkId], sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            IX_Application
            
            
        End Enum
    End Class
End Namespace
