'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'AccommodationAndCare'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class AccommodationAndCareServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.AccommodationAndCareSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.AccommodationAndCareSet
            Return CType(MyBase.GetAll("eosp_SelectAccommodationAndCare", GetType(EntitySet.AccommodationAndCareSet), includeHyphen, includeInactive, orderBy),EntitySet.AccommodationAndCareSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.AccommodationAndCareSet
            Return Me.GetAll(includeHyphen, includeInactive, AccommodationAndCareServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, AccommodationAndCareServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.AccommodationAndCareSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal accommodationAndCareId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectAccommodationAndCare", "AccommodationAndCareId", accommodationAndCareId, GetType(EntitySet.AccommodationAndCareSet), tran),Entity.AccommodationAndCare)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal accommodationAndCareId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(accommodationAndCareId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal accommodationAndCareId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.AccommodationAndCare
            Return CType(MyBase.GetById("eosp_SelectAccommodationAndCare", "AccommodationAndCareId", accommodationAndCareId, GetType(EntitySet.AccommodationAndCareSet), tran),Entity.AccommodationAndCare)
        End Function
        
        Public Overloads Function GetById(ByVal accommodationAndCareId As Integer) As Entity.AccommodationAndCare
            Return Me.GetById(accommodationAndCareId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal accommodationAndCareId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(accommodationAndCareId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal accommodationAndCareId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteAccommodationAndCare", "AccommodationAndCareId", accommodationAndCareId, checkSum, transaction)
        End Function
        
        'GetForSpecie - links to the Specie table...
        Public Overloads Function GetForSpecie(ByVal SpecieId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.AccommodationAndCareSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from AccommodationAndCare where SpecieId"& _ 
"=" + SpecieId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.AccommodationAndCareSet), tran),EntitySet.AccommodationAndCareSet)
        End Function
        
        'GetForSpecie - links to the Specie table...
        Public Overloads Function GetForSpecie(ByVal SpecieId As Integer) As EntitySet.AccommodationAndCareSet
            Return Me.GetForSpecie(SpecieId, Nothing)
        End Function
        
        'GetForParty - links to the Party table...
        Public Overloads Function GetForParty(ByVal PartyId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.AccommodationAndCareSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from AccommodationAndCare where Applican"& _ 
"tId=" + PartyId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.AccommodationAndCareSet), tran),EntitySet.AccommodationAndCareSet)
        End Function
        
        'GetForParty - links to the Party table...
        Public Overloads Function GetForParty(ByVal PartyId As Integer) As EntitySet.AccommodationAndCareSet
            Return Me.GetForParty(PartyId, Nothing)
        End Function
        
        Public Overloads Function Insert( _
                    ByVal permitId As Integer,  _
                    ByVal establishmentDescription As Object,  _
                    ByVal enclosures As Object,  _
                    ByVal specimensPerEnclosure As Object,  _
                    ByVal enclosureFurnishing As Object,  _
                    ByVal foodProvisions As Object,  _
                    ByVal veterinaryProvisions As Object,  _
                    ByVal quarantineApproved As Object,  _
                    ByVal licensedZoo As Object,  _
                    ByVal licensedPetShop As Object,  _
                    ByVal dangerousWildAnimalLicenceHeld As Object,  _
                    ByVal dangerousWildAnimalLicenceNumber As Object,  _
                    ByVal bALAIDeirectiveLicenceHeld As Object,  _
                    ByVal bALAIDeirectiveLicenceNumber As Object,  _
                    ByVal otherInformation As Object,  _
                    ByVal declarationAcknowledgement As Object,  _
                    ByVal reciptDate As Object,  _
                    ByVal entryDate As Object,  _
                    ByVal premisesDetails As Object,  _
                    ByVal specieId As Integer,  _
                    ByVal applicantName As String,  _
                    ByVal scientificName As Object,  _
                    ByVal commonName As Object,  _
                    ByVal totalNumberOfSpecimens As Object,  _
                    ByVal applicantId As Object,  _
                    ByVal deliveryAddress As Object,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.AccommodationAndCare
            Return Me.GetById(Sprocs.eosp_CreateAccommodationAndCare(permitId, establishmentDescription, enclosures, specimensPerEnclosure, enclosureFurnishing, foodProvisions, veterinaryProvisions, quarantineApproved, licensedZoo, licensedPetShop, dangerousWildAnimalLicenceHeld, dangerousWildAnimalLicenceNumber, bALAIDeirectiveLicenceHeld, bALAIDeirectiveLicenceNumber, otherInformation, declarationAcknowledgement, reciptDate, entryDate, premisesDetails, specieId, applicantName, scientificName, commonName, totalNumberOfSpecimens, applicantId, deliveryAddress, transaction), transaction)
        End Function
        
        Public Overloads Function Insert( _
                    ByVal permitId As Integer,  _
                    ByVal establishmentDescription As Object,  _
                    ByVal enclosures As Object,  _
                    ByVal specimensPerEnclosure As Object,  _
                    ByVal enclosureFurnishing As Object,  _
                    ByVal foodProvisions As Object,  _
                    ByVal veterinaryProvisions As Object,  _
                    ByVal quarantineApproved As Object,  _
                    ByVal licensedZoo As Object,  _
                    ByVal licensedPetShop As Object,  _
                    ByVal dangerousWildAnimalLicenceHeld As Object,  _
                    ByVal dangerousWildAnimalLicenceNumber As Object,  _
                    ByVal bALAIDeirectiveLicenceHeld As Object,  _
                    ByVal bALAIDeirectiveLicenceNumber As Object,  _
                    ByVal otherInformation As Object,  _
                    ByVal declarationAcknowledgement As Object,  _
                    ByVal reciptDate As Object,  _
                    ByVal entryDate As Object,  _
                    ByVal premisesDetails As Object,  _
                    ByVal specieId As Integer,  _
                    ByVal applicantName As String,  _
                    ByVal scientificName As Object,  _
                    ByVal commonName As Object,  _
                    ByVal totalNumberOfSpecimens As Object,  _
                    ByVal applicantId As Object,  _
                    ByVal deliveryAddress As Object) As Entity.AccommodationAndCare
            Return Me.Insert(permitId, establishmentDescription, enclosures, specimensPerEnclosure, enclosureFurnishing, foodProvisions, veterinaryProvisions, quarantineApproved, licensedZoo, licensedPetShop, dangerousWildAnimalLicenceHeld, dangerousWildAnimalLicenceNumber, bALAIDeirectiveLicenceHeld, bALAIDeirectiveLicenceNumber, otherInformation, declarationAcknowledgement, reciptDate, entryDate, premisesDetails, specieId, applicantName, scientificName, commonName, totalNumberOfSpecimens, applicantId, deliveryAddress, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal accommodationAndCare As Entity.AccommodationAndCare) As Entity.AccommodationAndCare
            Return Me.Insert(accommodationAndCare(1), accommodationAndCare(2), accommodationAndCare(3), accommodationAndCare(4), accommodationAndCare(5), accommodationAndCare(6), accommodationAndCare(7), accommodationAndCare(8), accommodationAndCare(9), accommodationAndCare(10), accommodationAndCare(11), accommodationAndCare(12), accommodationAndCare(13), accommodationAndCare(14), accommodationAndCare(15), accommodationAndCare(16), accommodationAndCare(17), accommodationAndCare(18), accommodationAndCare(19), accommodationAndCare(20), accommodationAndCare(21), accommodationAndCare(22), accommodationAndCare(23), accommodationAndCare(24), accommodationAndCare(25), accommodationAndCare(26))
        End Function
        
        Public Overloads Function Insert(ByVal accommodationAndCare As Entity.AccommodationAndCare, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.AccommodationAndCare
            Return Me.Insert(accommodationAndCare(1), accommodationAndCare(2), accommodationAndCare(3), accommodationAndCare(4), accommodationAndCare(5), accommodationAndCare(6), accommodationAndCare(7), accommodationAndCare(8), accommodationAndCare(9), accommodationAndCare(10), accommodationAndCare(11), accommodationAndCare(12), accommodationAndCare(13), accommodationAndCare(14), accommodationAndCare(15), accommodationAndCare(16), accommodationAndCare(17), accommodationAndCare(18), accommodationAndCare(19), accommodationAndCare(20), accommodationAndCare(21), accommodationAndCare(22), accommodationAndCare(23), accommodationAndCare(24), accommodationAndCare(25), accommodationAndCare(26), transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal permitId As Integer,  _
                    ByVal establishmentDescription As Object,  _
                    ByVal enclosures As Object,  _
                    ByVal specimensPerEnclosure As Object,  _
                    ByVal enclosureFurnishing As Object,  _
                    ByVal foodProvisions As Object,  _
                    ByVal veterinaryProvisions As Object,  _
                    ByVal quarantineApproved As Object,  _
                    ByVal licensedZoo As Object,  _
                    ByVal licensedPetShop As Object,  _
                    ByVal dangerousWildAnimalLicenceHeld As Object,  _
                    ByVal dangerousWildAnimalLicenceNumber As Object,  _
                    ByVal bALAIDeirectiveLicenceHeld As Object,  _
                    ByVal bALAIDeirectiveLicenceNumber As Object,  _
                    ByVal otherInformation As Object,  _
                    ByVal declarationAcknowledgement As Object,  _
                    ByVal reciptDate As Object,  _
                    ByVal entryDate As Object,  _
                    ByVal premisesDetails As Object,  _
                    ByVal specieId As Integer,  _
                    ByVal applicantName As String,  _
                    ByVal scientificName As Object,  _
                    ByVal commonName As Object,  _
                    ByVal totalNumberOfSpecimens As Object,  _
                    ByVal applicantId As Object,  _
                    ByVal deliveryAddress As Object,  _
                    ByVal checkSum As Integer,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.AccommodationAndCare
            Return Sprocs.eosp_UpdateAccommodationAndCare(id, permitId, establishmentDescription, enclosures, specimensPerEnclosure, enclosureFurnishing, foodProvisions, veterinaryProvisions, quarantineApproved, licensedZoo, licensedPetShop, dangerousWildAnimalLicenceHeld, dangerousWildAnimalLicenceNumber, bALAIDeirectiveLicenceHeld, bALAIDeirectiveLicenceNumber, otherInformation, declarationAcknowledgement, reciptDate, entryDate, premisesDetails, specieId, applicantName, scientificName, commonName, totalNumberOfSpecimens, applicantId, deliveryAddress, checkSum, transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal permitId As Integer,  _
                    ByVal establishmentDescription As Object,  _
                    ByVal enclosures As Object,  _
                    ByVal specimensPerEnclosure As Object,  _
                    ByVal enclosureFurnishing As Object,  _
                    ByVal foodProvisions As Object,  _
                    ByVal veterinaryProvisions As Object,  _
                    ByVal quarantineApproved As Object,  _
                    ByVal licensedZoo As Object,  _
                    ByVal licensedPetShop As Object,  _
                    ByVal dangerousWildAnimalLicenceHeld As Object,  _
                    ByVal dangerousWildAnimalLicenceNumber As Object,  _
                    ByVal bALAIDeirectiveLicenceHeld As Object,  _
                    ByVal bALAIDeirectiveLicenceNumber As Object,  _
                    ByVal otherInformation As Object,  _
                    ByVal declarationAcknowledgement As Object,  _
                    ByVal reciptDate As Object,  _
                    ByVal entryDate As Object,  _
                    ByVal premisesDetails As Object,  _
                    ByVal specieId As Integer,  _
                    ByVal applicantName As String,  _
                    ByVal scientificName As Object,  _
                    ByVal commonName As Object,  _
                    ByVal totalNumberOfSpecimens As Object,  _
                    ByVal applicantId As Object,  _
                    ByVal deliveryAddress As Object) As Entity.AccommodationAndCare
            Return Me.Update(id, permitId, establishmentDescription, enclosures, specimensPerEnclosure, enclosureFurnishing, foodProvisions, veterinaryProvisions, quarantineApproved, licensedZoo, licensedPetShop, dangerousWildAnimalLicenceHeld, dangerousWildAnimalLicenceNumber, bALAIDeirectiveLicenceHeld, bALAIDeirectiveLicenceNumber, otherInformation, declarationAcknowledgement, reciptDate, entryDate, premisesDetails, specieId, applicantName, scientificName, commonName, totalNumberOfSpecimens, applicantId, deliveryAddress, 0, Nothing)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal permitId As Integer,  _
                    ByVal establishmentDescription As Object,  _
                    ByVal enclosures As Object,  _
                    ByVal specimensPerEnclosure As Object,  _
                    ByVal enclosureFurnishing As Object,  _
                    ByVal foodProvisions As Object,  _
                    ByVal veterinaryProvisions As Object,  _
                    ByVal quarantineApproved As Object,  _
                    ByVal licensedZoo As Object,  _
                    ByVal licensedPetShop As Object,  _
                    ByVal dangerousWildAnimalLicenceHeld As Object,  _
                    ByVal dangerousWildAnimalLicenceNumber As Object,  _
                    ByVal bALAIDeirectiveLicenceHeld As Object,  _
                    ByVal bALAIDeirectiveLicenceNumber As Object,  _
                    ByVal otherInformation As Object,  _
                    ByVal declarationAcknowledgement As Object,  _
                    ByVal reciptDate As Object,  _
                    ByVal entryDate As Object,  _
                    ByVal premisesDetails As Object,  _
                    ByVal specieId As Integer,  _
                    ByVal applicantName As String,  _
                    ByVal scientificName As Object,  _
                    ByVal commonName As Object,  _
                    ByVal totalNumberOfSpecimens As Object,  _
                    ByVal applicantId As Object,  _
                    ByVal deliveryAddress As Object,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.AccommodationAndCare
            Return Me.Update(id, permitId, establishmentDescription, enclosures, specimensPerEnclosure, enclosureFurnishing, foodProvisions, veterinaryProvisions, quarantineApproved, licensedZoo, licensedPetShop, dangerousWildAnimalLicenceHeld, dangerousWildAnimalLicenceNumber, bALAIDeirectiveLicenceHeld, bALAIDeirectiveLicenceNumber, otherInformation, declarationAcknowledgement, reciptDate, entryDate, premisesDetails, specieId, applicantName, scientificName, commonName, totalNumberOfSpecimens, applicantId, deliveryAddress, 0, transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal permitId As Integer,  _
                    ByVal establishmentDescription As Object,  _
                    ByVal enclosures As Object,  _
                    ByVal specimensPerEnclosure As Object,  _
                    ByVal enclosureFurnishing As Object,  _
                    ByVal foodProvisions As Object,  _
                    ByVal veterinaryProvisions As Object,  _
                    ByVal quarantineApproved As Object,  _
                    ByVal licensedZoo As Object,  _
                    ByVal licensedPetShop As Object,  _
                    ByVal dangerousWildAnimalLicenceHeld As Object,  _
                    ByVal dangerousWildAnimalLicenceNumber As Object,  _
                    ByVal bALAIDeirectiveLicenceHeld As Object,  _
                    ByVal bALAIDeirectiveLicenceNumber As Object,  _
                    ByVal otherInformation As Object,  _
                    ByVal declarationAcknowledgement As Object,  _
                    ByVal reciptDate As Object,  _
                    ByVal entryDate As Object,  _
                    ByVal premisesDetails As Object,  _
                    ByVal specieId As Integer,  _
                    ByVal applicantName As String,  _
                    ByVal scientificName As Object,  _
                    ByVal commonName As Object,  _
                    ByVal totalNumberOfSpecimens As Object,  _
                    ByVal applicantId As Object,  _
                    ByVal deliveryAddress As Object,  _
                    ByVal checkSum As Integer) As Entity.AccommodationAndCare
            Return Me.Update(id, permitId, establishmentDescription, enclosures, specimensPerEnclosure, enclosureFurnishing, foodProvisions, veterinaryProvisions, quarantineApproved, licensedZoo, licensedPetShop, dangerousWildAnimalLicenceHeld, dangerousWildAnimalLicenceNumber, bALAIDeirectiveLicenceHeld, bALAIDeirectiveLicenceNumber, otherInformation, declarationAcknowledgement, reciptDate, entryDate, premisesDetails, specieId, applicantName, scientificName, commonName, totalNumberOfSpecimens, applicantId, deliveryAddress, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal accommodationAndCare As Entity.AccommodationAndCare) As Entity.AccommodationAndCare
            Return Me.Update(accommodationAndCare.id, accommodationAndCare(1), accommodationAndCare(2), accommodationAndCare(3), accommodationAndCare(4), accommodationAndCare(5), accommodationAndCare(6), accommodationAndCare(7), accommodationAndCare(8), accommodationAndCare(9), accommodationAndCare(10), accommodationAndCare(11), accommodationAndCare(12), accommodationAndCare(13), accommodationAndCare(14), accommodationAndCare(15), accommodationAndCare(16), accommodationAndCare(17), accommodationAndCare(18), accommodationAndCare(19), accommodationAndCare(20), accommodationAndCare(21), accommodationAndCare(22), accommodationAndCare(23), accommodationAndCare(24), accommodationAndCare(25), accommodationAndCare(26))
        End Function
        
        Public Overloads Function Update(ByVal accommodationAndCare As Entity.AccommodationAndCare, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.AccommodationAndCare
            Return Me.Update(accommodationAndCare.id, accommodationAndCare(1), accommodationAndCare(2), accommodationAndCare(3), accommodationAndCare(4), accommodationAndCare(5), accommodationAndCare(6), accommodationAndCare(7), accommodationAndCare(8), accommodationAndCare(9), accommodationAndCare(10), accommodationAndCare(11), accommodationAndCare(12), accommodationAndCare(13), accommodationAndCare(14), accommodationAndCare(15), accommodationAndCare(16), accommodationAndCare(17), accommodationAndCare(18), accommodationAndCare(19), accommodationAndCare(20), accommodationAndCare(21), accommodationAndCare(22), accommodationAndCare(23), accommodationAndCare(24), accommodationAndCare(25), accommodationAndCare(26), transaction)
        End Function
        
        Public Overloads Function Update(ByVal accommodationAndCare As Entity.AccommodationAndCare, ByVal checkSum As Integer) As Entity.AccommodationAndCare
            Return Me.Update(accommodationAndCare.id, accommodationAndCare(1), accommodationAndCare(2), accommodationAndCare(3), accommodationAndCare(4), accommodationAndCare(5), accommodationAndCare(6), accommodationAndCare(7), accommodationAndCare(8), accommodationAndCare(9), accommodationAndCare(10), accommodationAndCare(11), accommodationAndCare(12), accommodationAndCare(13), accommodationAndCare(14), accommodationAndCare(15), accommodationAndCare(16), accommodationAndCare(17), accommodationAndCare(18), accommodationAndCare(19), accommodationAndCare(20), accommodationAndCare(21), accommodationAndCare(22), accommodationAndCare(23), accommodationAndCare(24), accommodationAndCare(25), accommodationAndCare(26), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal accommodationAndCare As Entity.AccommodationAndCare, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.AccommodationAndCare
            Return Me.Update(accommodationAndCare.id, accommodationAndCare(1), accommodationAndCare(2), accommodationAndCare(3), accommodationAndCare(4), accommodationAndCare(5), accommodationAndCare(6), accommodationAndCare(7), accommodationAndCare(8), accommodationAndCare(9), accommodationAndCare(10), accommodationAndCare(11), accommodationAndCare(12), accommodationAndCare(13), accommodationAndCare(14), accommodationAndCare(15), accommodationAndCare(16), accommodationAndCare(17), accommodationAndCare(18), accommodationAndCare(19), accommodationAndCare(20), accommodationAndCare(21), accommodationAndCare(22), accommodationAndCare(23), accommodationAndCare(24), accommodationAndCare(25), accommodationAndCare(26), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_AccommodationAndCare(ByVal permitId As Integer, ByVal specieId As Integer) As EntitySet.AccommodationAndCareSet
            Return Sprocs.eosp_SelectAccommodationAndCare(accommodationAndCareId:=Nothing, Index_PermitId:=[permitId], Index_SpecieId:=[specieId], transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_AccommodationAndCare(ByVal permitId As Integer, ByVal specieId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.AccommodationAndCareSet
            Return Sprocs.eosp_SelectAccommodationAndCare(accommodationAndCareId:=Nothing, Index_PermitId:=[permitId], Index_SpecieId:=[specieId], sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            IX_AccommodationAndCare
            
            
        End Enum
    End Class
End Namespace
