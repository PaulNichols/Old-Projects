'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'AnimalLicensingDetail'
    '*DO NOT* modify this file.
    'Add new properties and methods to AnimalLicensingDetail instead.
    Public MustInherit Class AnimalLicensingDetailBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal animalLicensingID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(animalLicensingID, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal animalLicensingID As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(animalLicensingID).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property AnimalLicensingID As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Property KingdomID As Integer
            Get
                Return CType(Me(1),Integer)
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        Public Property TaxonID As Integer
            Get
                Return CType(Me(2),Integer)
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        Public Property TaxonTypeID As Integer
            Get
                Return CType(Me(3),Integer)
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        Public Property BirdFeeLevel As Integer
            Get
                If (Me.IsBirdFeeLevelNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(4),Integer)
                End If
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        Public Property IncubationOrGestationDays As Integer
            Get
                If (Me.IsIncubationOrGestationDaysNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(5),Integer)
                End If
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        Public Property AverageNumberOfOffspring As Integer
            Get
                If (Me.IsAverageNumberOfOffspringNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(6),Integer)
                End If
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        Public Property MinimumMicrochipSize As Integer
            Get
                If (Me.IsMinimumMicrochipSizeNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(7),Integer)
                End If
            End Get
            Set
                Me(7) = value
            End Set
        End Property
        
        Public Property MinimumMicrochipAge As Integer
            Get
                If (Me.IsMinimumMicrochipAgeNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(8),Integer)
                End If
            End Get
            Set
                Me(8) = value
            End Set
        End Property
        
        Public Property AverageLifespan As Integer
            Get
                If (Me.IsAverageLifespanNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(9),Integer)
                End If
            End Get
            Set
                Me(9) = value
            End Set
        End Property
        
        Public Property OldestAcceptedAge As Integer
            Get
                If (Me.IsOldestAcceptedAgeNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(10),Integer)
                End If
            End Get
            Set
                Me(10) = value
            End Set
        End Property
        
        Public Property SexualMaturityAge As Integer
            Get
                If (Me.IsSexualMaturityAgeNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(11),Integer)
                End If
            End Get
            Set
                Me(11) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(12),Integer)
                End If
            End Get
            Set
                Me(12) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.AnimalLicensingDetailService
            Get
                Return CType(GetServiceObject(GetType(Service.AnimalLicensingDetailService)),Service.AnimalLicensingDetailService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsBirdFeeLevelNull() As Boolean
            Return Me.IsNull(4)
        End Function
        
        Public Sub SetBirdFeeLevelToNull()
            Me(4) = System.DBNull.Value
        End Sub
        
        Public Function IsIncubationOrGestationDaysNull() As Boolean
            Return Me.IsNull(5)
        End Function
        
        Public Sub SetIncubationOrGestationDaysToNull()
            Me(5) = System.DBNull.Value
        End Sub
        
        Public Function IsAverageNumberOfOffspringNull() As Boolean
            Return Me.IsNull(6)
        End Function
        
        Public Sub SetAverageNumberOfOffspringToNull()
            Me(6) = System.DBNull.Value
        End Sub
        
        Public Function IsMinimumMicrochipSizeNull() As Boolean
            Return Me.IsNull(7)
        End Function
        
        Public Sub SetMinimumMicrochipSizeToNull()
            Me(7) = System.DBNull.Value
        End Sub
        
        Public Function IsMinimumMicrochipAgeNull() As Boolean
            Return Me.IsNull(8)
        End Function
        
        Public Sub SetMinimumMicrochipAgeToNull()
            Me(8) = System.DBNull.Value
        End Sub
        
        Public Function IsAverageLifespanNull() As Boolean
            Return Me.IsNull(9)
        End Function
        
        Public Sub SetAverageLifespanToNull()
            Me(9) = System.DBNull.Value
        End Sub
        
        Public Function IsOldestAcceptedAgeNull() As Boolean
            Return Me.IsNull(10)
        End Function
        
        Public Sub SetOldestAcceptedAgeToNull()
            Me(10) = System.DBNull.Value
        End Sub
        
        Public Function IsSexualMaturityAgeNull() As Boolean
            Return Me.IsNull(11)
        End Function
        
        Public Sub SetSexualMaturityAgeToNull()
            Me(11) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(12)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(12) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(13)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.AnimalLicensingDetailSet
            Return AnimalLicensingDetailBase.GetAll(false, false, AnimalLicensingDetailServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.AnimalLicensingDetailSet
            Return AnimalLicensingDetailBase.GetAll(includeHyphen, false, AnimalLicensingDetailServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As AnimalLicensingDetailServiceBase.OrderBy) As EntitySet.AnimalLicensingDetailSet
            Dim service As Service.AnimalLicensingDetailService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As AnimalLicensingDetailServiceBase.OrderBy) As EntitySet.AnimalLicensingDetailSet
            Return AnimalLicensingDetailBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal animalLicensingID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.AnimalLicensingDetail
            Dim service As Service.AnimalLicensingDetailService
            service = ServiceObject
            Return service.GetById(AnimalLicensingID, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal animalLicensingID As Integer) As Entity.AnimalLicensingDetail
            Dim service As Service.AnimalLicensingDetailService
            service = ServiceObject
            Return service.GetById(AnimalLicensingID)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal animalLicensingID As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.AnimalLicensingDetailService
            service = ServiceObject
            Return service.DeleteById(animalLicensingID, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal animalLicensingID As Integer) As Boolean
            Return AnimalLicensingDetailBase.DeleteById(animalLicensingID, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal animalLicensingID As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return AnimalLicensingDetailBase.DeleteById(animalLicensingID, 0, transaction)
        End Function
        
        Public Shared Function Insert(ByVal kingdomID As Integer, ByVal taxonID As Integer, ByVal taxonTypeID As Integer, ByVal birdFeeLevel As Object, ByVal incubationOrGestationDays As Object, ByVal averageNumberOfOffspring As Object, ByVal minimumMicrochipSize As Object, ByVal minimumMicrochipAge As Object, ByVal averageLifespan As Object, ByVal oldestAcceptedAge As Object, ByVal sexualMaturityAge As Object) As Entity.AnimalLicensingDetail
            Return Entity.AnimalLicensingDetail.ServiceObject.Insert(kingdomID, taxonID, taxonTypeID, birdFeeLevel, incubationOrGestationDays, averageNumberOfOffspring, minimumMicrochipSize, minimumMicrochipAge, averageLifespan, oldestAcceptedAge, sexualMaturityAge)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim kingdomIDParam As Integer = Me.KingdomID
            Dim taxonIDParam As Integer = Me.TaxonID
            Dim taxonTypeIDParam As Integer = Me.TaxonTypeID
            Dim birdFeeLevelParam As Object
            If (Me.IsBirdFeeLevelNull = false) Then
                birdFeeLevelParam = Me.BirdFeeLevel
            Else
                birdFeeLevelParam = System.DBNull.Value
            End If
            Dim incubationOrGestationDaysParam As Object
            If (Me.IsIncubationOrGestationDaysNull = false) Then
                incubationOrGestationDaysParam = Me.IncubationOrGestationDays
            Else
                incubationOrGestationDaysParam = System.DBNull.Value
            End If
            Dim averageNumberOfOffspringParam As Object
            If (Me.IsAverageNumberOfOffspringNull = false) Then
                averageNumberOfOffspringParam = Me.AverageNumberOfOffspring
            Else
                averageNumberOfOffspringParam = System.DBNull.Value
            End If
            Dim minimumMicrochipSizeParam As Object
            If (Me.IsMinimumMicrochipSizeNull = false) Then
                minimumMicrochipSizeParam = Me.MinimumMicrochipSize
            Else
                minimumMicrochipSizeParam = System.DBNull.Value
            End If
            Dim minimumMicrochipAgeParam As Object
            If (Me.IsMinimumMicrochipAgeNull = false) Then
                minimumMicrochipAgeParam = Me.MinimumMicrochipAge
            Else
                minimumMicrochipAgeParam = System.DBNull.Value
            End If
            Dim averageLifespanParam As Object
            If (Me.IsAverageLifespanNull = false) Then
                averageLifespanParam = Me.AverageLifespan
            Else
                averageLifespanParam = System.DBNull.Value
            End If
            Dim oldestAcceptedAgeParam As Object
            If (Me.IsOldestAcceptedAgeNull = false) Then
                oldestAcceptedAgeParam = Me.OldestAcceptedAge
            Else
                oldestAcceptedAgeParam = System.DBNull.Value
            End If
            Dim sexualMaturityAgeParam As Object
            If (Me.IsSexualMaturityAgeNull = false) Then
                sexualMaturityAgeParam = Me.SexualMaturityAge
            Else
                sexualMaturityAgeParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.AnimalLicensingDetail.ServiceObject.Update(Me.Id, kingdomIDParam, taxonIDParam, taxonTypeIDParam, birdFeeLevelParam, incubationOrGestationDaysParam, averageNumberOfOffspringParam, minimumMicrochipSizeParam, minimumMicrochipAgeParam, averageLifespanParam, oldestAcceptedAgeParam, sexualMaturityAgeParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
