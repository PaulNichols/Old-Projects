'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'UKCountry'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class UKCountryServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return true
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.UKCountrySet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.UKCountrySet
            Return CType(MyBase.GetAll("eosp_SelectUKCountry", GetType(EntitySet.UKCountrySet), includeHyphen, includeInactive, orderBy),EntitySet.UKCountrySet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.UKCountrySet
            Return Me.GetAll(includeHyphen, includeInactive, UKCountryServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, UKCountryServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.UKCountrySet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal uKCountryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectUKCountry", "UKCountryId", uKCountryId, GetType(EntitySet.UKCountrySet), tran),Entity.UKCountry)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal uKCountryId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(uKCountryId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal uKCountryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.UKCountry
            Return CType(MyBase.GetById("eosp_SelectUKCountry", "UKCountryId", uKCountryId, GetType(EntitySet.UKCountrySet), tran),Entity.UKCountry)
        End Function
        
        Public Overloads Function GetById(ByVal uKCountryId As Integer) As Entity.UKCountry
            Return Me.GetById(uKCountryId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal uKCountryId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(uKCountryId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal uKCountryId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteUKCountry", "UKCountryId", uKCountryId, checkSum, transaction)
        End Function
        
        'GetForCountry - links to the Country table...
        Public Overloads Function GetForCountry(ByVal CountryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.UKCountrySet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from UKCountry where CountryId=" + CountryId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.UKCountrySet), tran),EntitySet.UKCountrySet)
        End Function
        
        'GetForCountry - links to the Country table...
        Public Overloads Function GetForCountry(ByVal CountryId As Integer) As EntitySet.UKCountrySet
            Return Me.GetForCountry(CountryId, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal countryId As Integer, ByVal active As Boolean, ByVal uKCountryName As String, ByVal uKCountryCode As String, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.UKCountry
            Return Me.GetById(Sprocs.eosp_CreateUKCountry(countryId, active, uKCountryName, uKCountryCode, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal countryId As Integer, ByVal active As Boolean, ByVal uKCountryName As String, ByVal uKCountryCode As String) As Entity.UKCountry
            Return Me.Insert(countryId, active, uKCountryName, uKCountryCode, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal uKCountry As Entity.UKCountry) As Entity.UKCountry
            Return Me.Insert(uKCountry(1), uKCountry(2), uKCountry(3), uKCountry(4))
        End Function
        
        Public Overloads Function Insert(ByVal uKCountry As Entity.UKCountry, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.UKCountry
            Return Me.Insert(uKCountry(1), uKCountry(2), uKCountry(3), uKCountry(4), transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal countryId As Integer, ByVal active As Boolean, ByVal uKCountryName As String, ByVal uKCountryCode As String, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.UKCountry
            Return Sprocs.eosp_UpdateUKCountry(id, countryId, active, uKCountryName, uKCountryCode, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal countryId As Integer, ByVal active As Boolean, ByVal uKCountryName As String, ByVal uKCountryCode As String) As Entity.UKCountry
            Return Me.Update(id, countryId, active, uKCountryName, uKCountryCode, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal countryId As Integer, ByVal active As Boolean, ByVal uKCountryName As String, ByVal uKCountryCode As String, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.UKCountry
            Return Me.Update(id, countryId, active, uKCountryName, uKCountryCode, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal countryId As Integer, ByVal active As Boolean, ByVal uKCountryName As String, ByVal uKCountryCode As String, ByVal checkSum As Integer) As Entity.UKCountry
            Return Me.Update(id, countryId, active, uKCountryName, uKCountryCode, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal uKCountry As Entity.UKCountry) As Entity.UKCountry
            Return Me.Update(uKCountry.id, uKCountry(1), uKCountry(2), uKCountry(3), uKCountry(4))
        End Function
        
        Public Overloads Function Update(ByVal uKCountry As Entity.UKCountry, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.UKCountry
            Return Me.Update(uKCountry.id, uKCountry(1), uKCountry(2), uKCountry(3), uKCountry(4), transaction)
        End Function
        
        Public Overloads Function Update(ByVal uKCountry As Entity.UKCountry, ByVal checkSum As Integer) As Entity.UKCountry
            Return Me.Update(uKCountry.id, uKCountry(1), uKCountry(2), uKCountry(3), uKCountry(4), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal uKCountry As Entity.UKCountry, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.UKCountry
            Return Me.Update(uKCountry.id, uKCountry(1), uKCountry(2), uKCountry(3), uKCountry(4), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_UKCountry(ByVal uKCountryCode As String, ByVal includeInactive As Boolean) As EntitySet.UKCountrySet
            Return Sprocs.eosp_SelectUKCountry(uKCountryId:=Nothing, Index_UKCountryCode:=[uKCountryCode], Index_UKCountryName:=Nothing, includeInactive:=includeInactive, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_UKCountry(ByVal uKCountryCode As String, ByVal includeInactive As Boolean, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.UKCountrySet
            Return Sprocs.eosp_SelectUKCountry(uKCountryId:=Nothing, Index_UKCountryCode:=[uKCountryCode], Index_UKCountryName:=Nothing, includeInactive:=includeInactive, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Overloads Function GetByIndex_UK_UKCountry_Descr(ByVal uKCountryName As String, ByVal includeInactive As Boolean) As EntitySet.UKCountrySet
            Return Sprocs.eosp_SelectUKCountry(uKCountryId:=Nothing, Index_UKCountryName:=[uKCountryName], Index_UKCountryCode:=Nothing, includeInactive:=includeInactive, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_UK_UKCountry_Descr(ByVal uKCountryName As String, ByVal includeInactive As Boolean, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.UKCountrySet
            Return Sprocs.eosp_SelectUKCountry(uKCountryId:=Nothing, Index_UKCountryName:=[uKCountryName], Index_UKCountryCode:=Nothing, includeInactive:=includeInactive, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            IX_UKCountry
            
            UK_UKCountry_Descr
            
            
        End Enum
    End Class
End Namespace
