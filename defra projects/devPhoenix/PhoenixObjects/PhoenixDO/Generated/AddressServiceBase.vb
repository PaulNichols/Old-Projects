'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'Address'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class AddressServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return true
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.AddressSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.AddressSet
            Return CType(MyBase.GetAll("eosp_SelectAddress", GetType(EntitySet.AddressSet), includeHyphen, includeInactive, orderBy),EntitySet.AddressSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.AddressSet
            Return Me.GetAll(includeHyphen, includeInactive, AddressServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, AddressServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.AddressSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal addressId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectAddress", "AddressId", addressId, GetType(EntitySet.AddressSet), tran),Entity.Address)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal addressId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(addressId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal addressId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.Address
            Return CType(MyBase.GetById("eosp_SelectAddress", "AddressId", addressId, GetType(EntitySet.AddressSet), tran),Entity.Address)
        End Function
        
        Public Overloads Function GetById(ByVal addressId As Integer) As Entity.Address
            Return Me.GetById(addressId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal addressId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(addressId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal addressId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteAddress", "AddressId", addressId, checkSum, transaction)
        End Function
        
        'GetForCountry - links to the Country table...
        Public Overloads Function GetForCountry(ByVal CountryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.AddressSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from Address where CountryId=" + CountryId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.AddressSet), tran),EntitySet.AddressSet)
        End Function
        
        'GetForCountry - links to the Country table...
        Public Overloads Function GetForCountry(ByVal CountryId As Integer) As EntitySet.AddressSet
            Return Me.GetForCountry(CountryId, Nothing)
        End Function
        
        Public Overloads Function Insert( _
                    ByVal address1 As String,  _
                    ByVal address2 As Object,  _
                    ByVal address3 As Object,  _
                    ByVal address4 As Object,  _
                    ByVal town As String,  _
                    ByVal county As Object,  _
                    ByVal postcode As Object,  _
                    ByVal countryId As Integer,  _
                    ByVal isTemporary As Boolean,  _
                    ByVal active As Boolean,  _
                    ByVal contactName As Object,  _
                    ByVal regionId As Object,  _
                    ByVal houseNumber As Object,  _
                    ByVal buildingName As Object,  _
                    ByVal organisationName As Object,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Address
            Return Me.GetById(Sprocs.eosp_CreateAddress(address1, address2, address3, address4, town, county, postcode, countryId, isTemporary, active, contactName, regionId, houseNumber, buildingName, organisationName, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal address1 As String, ByVal address2 As Object, ByVal address3 As Object, ByVal address4 As Object, ByVal town As String, ByVal county As Object, ByVal postcode As Object, ByVal countryId As Integer, ByVal isTemporary As Boolean, ByVal active As Boolean, ByVal contactName As Object, ByVal regionId As Object, ByVal houseNumber As Object, ByVal buildingName As Object, ByVal organisationName As Object) As Entity.Address
            Return Me.Insert(address1, address2, address3, address4, town, county, postcode, countryId, isTemporary, active, contactName, regionId, houseNumber, buildingName, organisationName, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal address As Entity.Address) As Entity.Address
            Return Me.Insert(address(1), address(2), address(3), address(4), address(5), address(6), address(7), address(8), address(9), address(10), address(11), address(12), address(13), address(15), address(16))
        End Function
        
        Public Overloads Function Insert(ByVal address As Entity.Address, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Address
            Return Me.Insert(address(1), address(2), address(3), address(4), address(5), address(6), address(7), address(8), address(9), address(10), address(11), address(12), address(13), address(15), address(16), transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal address1 As String,  _
                    ByVal address2 As Object,  _
                    ByVal address3 As Object,  _
                    ByVal address4 As Object,  _
                    ByVal town As String,  _
                    ByVal county As Object,  _
                    ByVal postcode As Object,  _
                    ByVal countryId As Integer,  _
                    ByVal isTemporary As Boolean,  _
                    ByVal active As Boolean,  _
                    ByVal contactName As Object,  _
                    ByVal regionId As Object,  _
                    ByVal houseNumber As Object,  _
                    ByVal buildingName As Object,  _
                    ByVal organisationName As Object,  _
                    ByVal checkSum As Integer,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Address
            Return Sprocs.eosp_UpdateAddress(id, address1, address2, address3, address4, town, county, postcode, countryId, isTemporary, active, contactName, regionId, houseNumber, buildingName, organisationName, checkSum, transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal address1 As String,  _
                    ByVal address2 As Object,  _
                    ByVal address3 As Object,  _
                    ByVal address4 As Object,  _
                    ByVal town As String,  _
                    ByVal county As Object,  _
                    ByVal postcode As Object,  _
                    ByVal countryId As Integer,  _
                    ByVal isTemporary As Boolean,  _
                    ByVal active As Boolean,  _
                    ByVal contactName As Object,  _
                    ByVal regionId As Object,  _
                    ByVal houseNumber As Object,  _
                    ByVal buildingName As Object,  _
                    ByVal organisationName As Object) As Entity.Address
            Return Me.Update(id, address1, address2, address3, address4, town, county, postcode, countryId, isTemporary, active, contactName, regionId, houseNumber, buildingName, organisationName, 0, Nothing)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal address1 As String,  _
                    ByVal address2 As Object,  _
                    ByVal address3 As Object,  _
                    ByVal address4 As Object,  _
                    ByVal town As String,  _
                    ByVal county As Object,  _
                    ByVal postcode As Object,  _
                    ByVal countryId As Integer,  _
                    ByVal isTemporary As Boolean,  _
                    ByVal active As Boolean,  _
                    ByVal contactName As Object,  _
                    ByVal regionId As Object,  _
                    ByVal houseNumber As Object,  _
                    ByVal buildingName As Object,  _
                    ByVal organisationName As Object,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Address
            Return Me.Update(id, address1, address2, address3, address4, town, county, postcode, countryId, isTemporary, active, contactName, regionId, houseNumber, buildingName, organisationName, 0, transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal address1 As String,  _
                    ByVal address2 As Object,  _
                    ByVal address3 As Object,  _
                    ByVal address4 As Object,  _
                    ByVal town As String,  _
                    ByVal county As Object,  _
                    ByVal postcode As Object,  _
                    ByVal countryId As Integer,  _
                    ByVal isTemporary As Boolean,  _
                    ByVal active As Boolean,  _
                    ByVal contactName As Object,  _
                    ByVal regionId As Object,  _
                    ByVal houseNumber As Object,  _
                    ByVal buildingName As Object,  _
                    ByVal organisationName As Object,  _
                    ByVal checkSum As Integer) As Entity.Address
            Return Me.Update(id, address1, address2, address3, address4, town, county, postcode, countryId, isTemporary, active, contactName, regionId, houseNumber, buildingName, organisationName, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal address As Entity.Address) As Entity.Address
            Return Me.Update(address.id, address(1), address(2), address(3), address(4), address(5), address(6), address(7), address(8), address(9), address(10), address(11), address(12), address(13), address(15), address(16))
        End Function
        
        Public Overloads Function Update(ByVal address As Entity.Address, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Address
            Return Me.Update(address.id, address(1), address(2), address(3), address(4), address(5), address(6), address(7), address(8), address(9), address(10), address(11), address(12), address(13), address(15), address(16), transaction)
        End Function
        
        Public Overloads Function Update(ByVal address As Entity.Address, ByVal checkSum As Integer) As Entity.Address
            Return Me.Update(address.id, address(1), address(2), address(3), address(4), address(5), address(6), address(7), address(8), address(9), address(10), address(11), address(12), address(13), address(15), address(16), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal address As Entity.Address, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Address
            Return Me.Update(address.id, address(1), address(2), address(3), address(4), address(5), address(6), address(7), address(8), address(9), address(10), address(11), address(12), address(13), address(15), address(16), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_UQ__Address__29572725(ByVal addressId As Integer, ByVal includeInactive As Boolean) As EntitySet.AddressSet
            Return Sprocs.eosp_SelectAddress(addressId:=Nothing, Index_AddressId:=[addressId], Index_Address1:=Nothing, Index_Postcode:=Nothing, includeInactive:=includeInactive, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_UQ__Address__29572725(ByVal addressId As Integer, ByVal includeInactive As Boolean, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.AddressSet
            Return Sprocs.eosp_SelectAddress(addressId:=Nothing, Index_AddressId:=[addressId], Index_Address1:=Nothing, Index_Postcode:=Nothing, includeInactive:=includeInactive, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Overloads Function GetByIndex_Line1(ByVal address1 As String, ByVal includeInactive As Boolean) As EntitySet.AddressSet
            Return Sprocs.eosp_SelectAddress(addressId:=Nothing, Index_Address1:=[address1], Index_AddressId:=Nothing, Index_Postcode:=Nothing, includeInactive:=includeInactive, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_Line1(ByVal address1 As String, ByVal includeInactive As Boolean, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.AddressSet
            Return Sprocs.eosp_SelectAddress(addressId:=Nothing, Index_Address1:=[address1], Index_AddressId:=Nothing, Index_Postcode:=Nothing, includeInactive:=includeInactive, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Overloads Function GetByIndex_PostCode(ByVal postcode As String, ByVal includeInactive As Boolean) As EntitySet.AddressSet
            Return Sprocs.eosp_SelectAddress(addressId:=Nothing, Index_Postcode:=[postcode], Index_AddressId:=Nothing, Index_Address1:=Nothing, includeInactive:=includeInactive, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_PostCode(ByVal postcode As String, ByVal includeInactive As Boolean, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.AddressSet
            Return Sprocs.eosp_SelectAddress(addressId:=Nothing, Index_Postcode:=[postcode], Index_AddressId:=Nothing, Index_Address1:=Nothing, includeInactive:=includeInactive, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            UQ__Address__29572725
            
            Line1
            
            PostCode
            
            
        End Enum
    End Class
End Namespace
