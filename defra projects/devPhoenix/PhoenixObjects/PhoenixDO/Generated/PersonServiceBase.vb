'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'Person'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class PersonServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.PersonSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.PersonSet
            Return CType(MyBase.GetAll("eosp_SelectPerson", GetType(EntitySet.PersonSet), includeHyphen, includeInactive, orderBy),EntitySet.PersonSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.PersonSet
            Return Me.GetAll(includeHyphen, includeInactive, PersonServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, PersonServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal personId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectPerson", "PersonId", personId, GetType(EntitySet.PersonSet), tran),Entity.Person)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal personId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(personId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal personId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.Person
            Return CType(MyBase.GetById("eosp_SelectPerson", "PersonId", personId, GetType(EntitySet.PersonSet), tran),Entity.Person)
        End Function
        
        Public Overloads Function GetById(ByVal personId As Integer) As Entity.Person
            Return Me.GetById(personId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal personId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(personId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal personId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeletePerson", "PersonId", personId, checkSum, transaction)
        End Function
        
        'GetForParty - links to the Party table...
        Public Overloads Function GetForParty(ByVal PartyId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PersonSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from Person where PartyId=" + PartyId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PersonSet), tran),EntitySet.PersonSet)
        End Function
        
        'GetForParty - links to the Party table...
        Public Overloads Function GetForParty(ByVal PartyId As Integer) As EntitySet.PersonSet
            Return Me.GetForParty(PartyId, Nothing)
        End Function
        
        'GetForTitle - links to the Titles table...
        Public Overloads Function GetForTitle(ByVal Id As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PersonSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from Person where TitleId=" + Id.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PersonSet), tran),EntitySet.PersonSet)
        End Function
        
        'GetForTitle - links to the Titles table...
        Public Overloads Function GetForTitle(ByVal Id As Integer) As EntitySet.PersonSet
            Return Me.GetForTitle(Id, Nothing)
        End Function
        
        'GetForContact - links to the Contact table...
        Public Overloads Function GetForContact(ByVal ContactId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PersonSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from Person where PreferredContactId=" + ContactId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PersonSet), tran),EntitySet.PersonSet)
        End Function
        
        'GetForContact - links to the Contact table...
        Public Overloads Function GetForContact(ByVal ContactId As Integer) As EntitySet.PersonSet
            Return Me.GetForContact(ContactId, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal partyId As Object, ByVal titleId As Integer, ByVal forename As Object, ByVal surname As Object, ByVal preferredContactId As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Person
            Return Me.GetById(Sprocs.eosp_CreatePerson(partyId, titleId, forename, surname, preferredContactId, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal partyId As Object, ByVal titleId As Integer, ByVal forename As Object, ByVal surname As Object, ByVal preferredContactId As Object) As Entity.Person
            Return Me.Insert(partyId, titleId, forename, surname, preferredContactId, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal person As Entity.Person) As Entity.Person
            Return Me.Insert(person(1), person(2), person(3), person(4), person(6))
        End Function
        
        Public Overloads Function Insert(ByVal person As Entity.Person, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Person
            Return Me.Insert(person(1), person(2), person(3), person(4), person(6), transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal partyId As Object, ByVal titleId As Integer, ByVal forename As Object, ByVal surname As Object, ByVal preferredContactId As Object, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Person
            Return Sprocs.eosp_UpdatePerson(id, partyId, titleId, forename, surname, preferredContactId, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal partyId As Object, ByVal titleId As Integer, ByVal forename As Object, ByVal surname As Object, ByVal preferredContactId As Object) As Entity.Person
            Return Me.Update(id, partyId, titleId, forename, surname, preferredContactId, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal partyId As Object, ByVal titleId As Integer, ByVal forename As Object, ByVal surname As Object, ByVal preferredContactId As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Person
            Return Me.Update(id, partyId, titleId, forename, surname, preferredContactId, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal partyId As Object, ByVal titleId As Integer, ByVal forename As Object, ByVal surname As Object, ByVal preferredContactId As Object, ByVal checkSum As Integer) As Entity.Person
            Return Me.Update(id, partyId, titleId, forename, surname, preferredContactId, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal person As Entity.Person) As Entity.Person
            Return Me.Update(person.id, person(1), person(2), person(3), person(4), person(6))
        End Function
        
        Public Overloads Function Update(ByVal person As Entity.Person, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Person
            Return Me.Update(person.id, person(1), person(2), person(3), person(4), person(6), transaction)
        End Function
        
        Public Overloads Function Update(ByVal person As Entity.Person, ByVal checkSum As Integer) As Entity.Person
            Return Me.Update(person.id, person(1), person(2), person(3), person(4), person(6), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal person As Entity.Person, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Person
            Return Me.Update(person.id, person(1), person(2), person(3), person(4), person(6), checkSum, transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
        End Enum
    End Class
End Namespace
