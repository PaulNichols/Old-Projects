'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'Refund'
    '*DO NOT* modify this file.
    'Add new properties and methods to Refund instead.
    Public MustInherit Class RefundBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal refundId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(refundId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal refundId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(refundId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property RefundId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Property PaymentId As Integer
            Get
                Return CType(Me(1),Integer)
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        Public Property SSOUserId As Integer
            Get
                If (Me.IsSSOUserIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(2),Integer)
                End If
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        Public Property RefundType As Byte
            Get
                If (Me.IsRefundTypeNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(3),Byte)
                End If
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        Public Property DateTime As Date
            Get
                If (Me.IsDateTimeNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(4),Date)
                End If
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        Public Property Amount As Decimal
            Get
                If (Me.IsAmountNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(5),Decimal)
                End If
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        Public Property OriginalPaymentAmount As Decimal
            Get
                If (Me.IsOriginalPaymentAmountNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(6),Decimal)
                End If
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        Public Property OriginalPartyId As Integer
            Get
                If (Me.IsOriginalPartyIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(7),Integer)
                End If
            End Get
            Set
                Me(7) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property NotesComments As String
            Get
                If (Me.IsNotesCommentsNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(8),String)
                End If
            End Get
            Set
                Me(8) = value
            End Set
        End Property
        
        Public Property ReportDate As Date
            Get
                If (Me.IsReportDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(9),Date)
                End If
            End Get
            Set
                Me(9) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property GatewayAuthorisation As String
            Get
                If (Me.IsGatewayAuthorisationNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(10),String)
                End If
            End Get
            Set
                Me(10) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property GatewayReference As String
            Get
                If (Me.IsGatewayReferenceNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(11),String)
                End If
            End Get
            Set
                Me(11) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property BankReference As String
            Get
                If (Me.IsBankReferenceNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(12),String)
                End If
            End Get
            Set
                Me(12) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(13),Integer)
                End If
            End Get
            Set
                Me(13) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.RefundService
            Get
                Return CType(GetServiceObject(GetType(Service.RefundService)),Service.RefundService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsSSOUserIdNull() As Boolean
            Return Me.IsNull(2)
        End Function
        
        Public Sub SetSSOUserIdToNull()
            Me(2) = System.DBNull.Value
        End Sub
        
        Public Function IsRefundTypeNull() As Boolean
            Return Me.IsNull(3)
        End Function
        
        Public Sub SetRefundTypeToNull()
            Me(3) = System.DBNull.Value
        End Sub
        
        Public Function IsDateTimeNull() As Boolean
            Return Me.IsNull(4)
        End Function
        
        Public Sub SetDateTimeToNull()
            Me(4) = System.DBNull.Value
        End Sub
        
        Public Function IsAmountNull() As Boolean
            Return Me.IsNull(5)
        End Function
        
        Public Sub SetAmountToNull()
            Me(5) = System.DBNull.Value
        End Sub
        
        Public Function IsOriginalPaymentAmountNull() As Boolean
            Return Me.IsNull(6)
        End Function
        
        Public Sub SetOriginalPaymentAmountToNull()
            Me(6) = System.DBNull.Value
        End Sub
        
        Public Function IsOriginalPartyIdNull() As Boolean
            Return Me.IsNull(7)
        End Function
        
        Public Sub SetOriginalPartyIdToNull()
            Me(7) = System.DBNull.Value
        End Sub
        
        Public Function IsNotesCommentsNull() As Boolean
            Return Me.IsNull(8)
        End Function
        
        Public Sub SetNotesCommentsToNull()
            Me(8) = System.DBNull.Value
        End Sub
        
        Public Function IsReportDateNull() As Boolean
            Return Me.IsNull(9)
        End Function
        
        Public Sub SetReportDateToNull()
            Me(9) = System.DBNull.Value
        End Sub
        
        Public Function IsGatewayAuthorisationNull() As Boolean
            Return Me.IsNull(10)
        End Function
        
        Public Sub SetGatewayAuthorisationToNull()
            Me(10) = System.DBNull.Value
        End Sub
        
        Public Function IsGatewayReferenceNull() As Boolean
            Return Me.IsNull(11)
        End Function
        
        Public Sub SetGatewayReferenceToNull()
            Me(11) = System.DBNull.Value
        End Sub
        
        Public Function IsBankReferenceNull() As Boolean
            Return Me.IsNull(12)
        End Function
        
        Public Sub SetBankReferenceToNull()
            Me(12) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(13)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(13) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(14)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.RefundSet
            Return RefundBase.GetAll(false, false, RefundServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.RefundSet
            Return RefundBase.GetAll(includeHyphen, false, RefundServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As RefundServiceBase.OrderBy) As EntitySet.RefundSet
            Dim service As Service.RefundService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As RefundServiceBase.OrderBy) As EntitySet.RefundSet
            Return RefundBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal refundId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.Refund
            Dim service As Service.RefundService
            service = ServiceObject
            Return service.GetById(RefundId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal refundId As Integer) As Entity.Refund
            Dim service As Service.RefundService
            service = ServiceObject
            Return service.GetById(RefundId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal refundId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.RefundService
            service = ServiceObject
            Return service.DeleteById(refundId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal refundId As Integer) As Boolean
            Return RefundBase.DeleteById(refundId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal refundId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return RefundBase.DeleteById(refundId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForPayment(ByVal paymentId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.RefundSet
            Dim service As Service.RefundService
            service = ServiceObject
            Return service.GetForPayment(paymentId, tran)
        End Function
        
        Public Overloads Shared Function GetForPayment(ByVal paymentId As Integer) As EntitySet.RefundSet
            Return RefundBase.GetForPayment(paymentId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForParty(ByVal partyId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.RefundSet
            Dim service As Service.RefundService
            service = ServiceObject
            Return service.GetForParty(partyId, tran)
        End Function
        
        Public Overloads Shared Function GetForParty(ByVal partyId As Integer) As EntitySet.RefundSet
            Return RefundBase.GetForParty(partyId, Nothing)
        End Function
        
        Public Shared Function Insert(ByVal paymentId As Integer, ByVal sSOUserId As Object, ByVal refundType As Object, ByVal dateTime As Object, ByVal amount As Object, ByVal originalPaymentAmount As Object, ByVal originalPartyId As Object, ByVal notesComments As Object, ByVal reportDate As Object, ByVal gatewayAuthorisation As Object, ByVal gatewayReference As Object, ByVal bankReference As Object) As Entity.Refund
            Return Entity.Refund.ServiceObject.Insert(paymentId, sSOUserId, refundType, dateTime, amount, originalPaymentAmount, originalPartyId, notesComments, reportDate, gatewayAuthorisation, gatewayReference, bankReference)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim paymentIdParam As Integer = Me.PaymentId
            Dim sSOUserIdParam As Object
            If (Me.IsSSOUserIdNull = false) Then
                sSOUserIdParam = Me.SSOUserId
            Else
                sSOUserIdParam = System.DBNull.Value
            End If
            Dim refundTypeParam As Object
            If (Me.IsRefundTypeNull = false) Then
                refundTypeParam = Me.RefundType
            Else
                refundTypeParam = System.DBNull.Value
            End If
            Dim dateTimeParam As Object
            If (Me.IsDateTimeNull = false) Then
                dateTimeParam = Me.DateTime
            Else
                dateTimeParam = System.DBNull.Value
            End If
            Dim amountParam As Object
            If (Me.IsAmountNull = false) Then
                amountParam = Me.Amount
            Else
                amountParam = System.DBNull.Value
            End If
            Dim originalPaymentAmountParam As Object
            If (Me.IsOriginalPaymentAmountNull = false) Then
                originalPaymentAmountParam = Me.OriginalPaymentAmount
            Else
                originalPaymentAmountParam = System.DBNull.Value
            End If
            Dim originalPartyIdParam As Object
            If (Me.IsOriginalPartyIdNull = false) Then
                originalPartyIdParam = Me.OriginalPartyId
            Else
                originalPartyIdParam = System.DBNull.Value
            End If
            Dim notesCommentsParam As Object
            If (Me.IsNotesCommentsNull = false) Then
                notesCommentsParam = EnterpriseObjects.Common.ParseSQLText(Me.NotesComments)
            Else
                notesCommentsParam = System.DBNull.Value
            End If
            Dim reportDateParam As Object
            If (Me.IsReportDateNull = false) Then
                reportDateParam = Me.ReportDate
            Else
                reportDateParam = System.DBNull.Value
            End If
            Dim gatewayAuthorisationParam As Object
            If (Me.IsGatewayAuthorisationNull = false) Then
                gatewayAuthorisationParam = EnterpriseObjects.Common.ParseSQLText(Me.GatewayAuthorisation)
            Else
                gatewayAuthorisationParam = System.DBNull.Value
            End If
            Dim gatewayReferenceParam As Object
            If (Me.IsGatewayReferenceNull = false) Then
                gatewayReferenceParam = EnterpriseObjects.Common.ParseSQLText(Me.GatewayReference)
            Else
                gatewayReferenceParam = System.DBNull.Value
            End If
            Dim bankReferenceParam As Object
            If (Me.IsBankReferenceNull = false) Then
                bankReferenceParam = EnterpriseObjects.Common.ParseSQLText(Me.BankReference)
            Else
                bankReferenceParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.Refund.ServiceObject.Update(Me.Id, paymentIdParam, sSOUserIdParam, refundTypeParam, dateTimeParam, amountParam, originalPaymentAmountParam, originalPartyIdParam, notesCommentsParam, reportDateParam, gatewayAuthorisationParam, gatewayReferenceParam, bankReferenceParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
