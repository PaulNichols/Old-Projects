'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'TaxonomyPermittedListingValue'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class TaxonomyPermittedListingValueServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.TaxonomyPermittedListingValueSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.TaxonomyPermittedListingValueSet
            Return CType(MyBase.GetAll("eosp_SelectTaxonomyPermittedListingValue", GetType(EntitySet.TaxonomyPermittedListingValueSet), includeHyphen, includeInactive, orderBy),EntitySet.TaxonomyPermittedListingValueSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.TaxonomyPermittedListingValueSet
            Return Me.GetAll(includeHyphen, includeInactive, TaxonomyPermittedListingValueServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, TaxonomyPermittedListingValueServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.TaxonomyPermittedListingValueSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal permittedListingID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectTaxonomyPermittedListingValue", "PermittedListingID", permittedListingID, GetType(EntitySet.TaxonomyPermittedListingValueSet), tran),Entity.TaxonomyPermittedListingValue)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal permittedListingID As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(permittedListingID, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal permittedListingID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyPermittedListingValue
            Return CType(MyBase.GetById("eosp_SelectTaxonomyPermittedListingValue", "PermittedListingID", permittedListingID, GetType(EntitySet.TaxonomyPermittedListingValueSet), tran),Entity.TaxonomyPermittedListingValue)
        End Function
        
        Public Overloads Function GetById(ByVal permittedListingID As Integer) As Entity.TaxonomyPermittedListingValue
            Return Me.GetById(permittedListingID, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal permittedListingID As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(permittedListingID, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal permittedListingID As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteTaxonomyPermittedListingValue", "PermittedListingID", permittedListingID, checkSum, transaction)
        End Function
        
        'GetForTaxonomyLegislationName - links to the TaxonomyLegislationName table...
        Public Overloads Function GetForTaxonomyLegislationName(ByVal LegislationNameID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.TaxonomyPermittedListingValueSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from TaxonomyPermittedListingValue where"& _ 
" LegislationNameID=" + LegislationNameID.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.TaxonomyPermittedListingValueSet), tran),EntitySet.TaxonomyPermittedListingValueSet)
        End Function
        
        'GetForTaxonomyLegislationName - links to the TaxonomyLegislationName table...
        Public Overloads Function GetForTaxonomyLegislationName(ByVal LegislationNameID As Integer) As EntitySet.TaxonomyPermittedListingValueSet
            Return Me.GetForTaxonomyLegislationName(LegislationNameID, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal legislationNameID As Integer, ByVal listingValue As String, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyPermittedListingValue
            Return Me.GetById(Sprocs.eosp_CreateTaxonomyPermittedListingValue(legislationNameID, listingValue, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal legislationNameID As Integer, ByVal listingValue As String) As Entity.TaxonomyPermittedListingValue
            Return Me.Insert(legislationNameID, listingValue, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal taxonomyPermittedListingValue As Entity.TaxonomyPermittedListingValue) As Entity.TaxonomyPermittedListingValue
            Return Me.Insert(taxonomyPermittedListingValue(1), taxonomyPermittedListingValue(2))
        End Function
        
        Public Overloads Function Insert(ByVal taxonomyPermittedListingValue As Entity.TaxonomyPermittedListingValue, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyPermittedListingValue
            Return Me.Insert(taxonomyPermittedListingValue(1), taxonomyPermittedListingValue(2), transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal legislationNameID As Integer, ByVal listingValue As String, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyPermittedListingValue
            Return Sprocs.eosp_UpdateTaxonomyPermittedListingValue(id, legislationNameID, listingValue, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal legislationNameID As Integer, ByVal listingValue As String) As Entity.TaxonomyPermittedListingValue
            Return Me.Update(id, legislationNameID, listingValue, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal legislationNameID As Integer, ByVal listingValue As String, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyPermittedListingValue
            Return Me.Update(id, legislationNameID, listingValue, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal legislationNameID As Integer, ByVal listingValue As String, ByVal checkSum As Integer) As Entity.TaxonomyPermittedListingValue
            Return Me.Update(id, legislationNameID, listingValue, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal taxonomyPermittedListingValue As Entity.TaxonomyPermittedListingValue) As Entity.TaxonomyPermittedListingValue
            Return Me.Update(taxonomyPermittedListingValue.id, taxonomyPermittedListingValue(1), taxonomyPermittedListingValue(2))
        End Function
        
        Public Overloads Function Update(ByVal taxonomyPermittedListingValue As Entity.TaxonomyPermittedListingValue, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyPermittedListingValue
            Return Me.Update(taxonomyPermittedListingValue.id, taxonomyPermittedListingValue(1), taxonomyPermittedListingValue(2), transaction)
        End Function
        
        Public Overloads Function Update(ByVal taxonomyPermittedListingValue As Entity.TaxonomyPermittedListingValue, ByVal checkSum As Integer) As Entity.TaxonomyPermittedListingValue
            Return Me.Update(taxonomyPermittedListingValue.id, taxonomyPermittedListingValue(1), taxonomyPermittedListingValue(2), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal taxonomyPermittedListingValue As Entity.TaxonomyPermittedListingValue, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyPermittedListingValue
            Return Me.Update(taxonomyPermittedListingValue.id, taxonomyPermittedListingValue(1), taxonomyPermittedListingValue(2), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_TaxonomyPermittedListingValue(ByVal legislationNameID As Integer) As EntitySet.TaxonomyPermittedListingValueSet
            Return Sprocs.eosp_SelectTaxonomyPermittedListingValue(permittedListingID:=Nothing, Index_LegislationNameID:=[legislationNameID], Index_ListingValue:=Nothing, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_TaxonomyPermittedListingValue(ByVal legislationNameID As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.TaxonomyPermittedListingValueSet
            Return Sprocs.eosp_SelectTaxonomyPermittedListingValue(permittedListingID:=Nothing, Index_LegislationNameID:=[legislationNameID], Index_ListingValue:=Nothing, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_TaxonomyPermittedListingValue_1(ByVal legislationNameID As Integer, ByVal listingValue As String) As EntitySet.TaxonomyPermittedListingValueSet
            Return Sprocs.eosp_SelectTaxonomyPermittedListingValue(permittedListingID:=Nothing, Index_LegislationNameID:=[legislationNameID], Index_ListingValue:=[listingValue], transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_TaxonomyPermittedListingValue_1(ByVal legislationNameID As Integer, ByVal listingValue As String, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.TaxonomyPermittedListingValueSet
            Return Sprocs.eosp_SelectTaxonomyPermittedListingValue(permittedListingID:=Nothing, Index_LegislationNameID:=[legislationNameID], Index_ListingValue:=[listingValue], sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            IX_TaxonomyPermittedListingValue
            
            IX_TaxonomyPermittedListingValue_1
            
            
        End Enum
    End Class
End Namespace
