'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'ReturnedPermit'
    '*DO NOT* modify this file.
    'Add new properties and methods to ReturnedPermit instead.
    Public MustInherit Class ReturnedPermitBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal returnedPermitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(returnedPermitId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal returnedPermitId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(returnedPermitId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property ReturnedPermitId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Property PermitInfoId As Integer
            Get
                Return CType(Me(1),Integer)
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        Public Property EndorseOrReturnDate As Date
            Get
                If (Me.IsEndorseOrReturnDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(2),Date)
                End If
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        Public Property EndoresedUnusedPermitReceiptDate As Date
            Get
                If (Me.IsEndoresedUnusedPermitReceiptDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(3),Date)
                End If
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property BillOfLading As String
            Get
                If (Me.IsBillOfLadingNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(4),String)
                End If
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        Public Property CustomsDocumentTypeId As Integer
            Get
                If (Me.IsCustomsDocumentTypeIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(5),Integer)
                End If
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property CustomsDocumentReference As String
            Get
                If (Me.IsCustomsDocumentReferenceNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(6),String)
                End If
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        Public Property ImportExportDate As Date
            Get
                If (Me.IsImportExportDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(7),Date)
                End If
            End Get
            Set
                Me(7) = value
            End Set
        End Property
        
        Public Property ActualQuantity As Integer
            Get
                If (Me.IsActualQuantityNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(8),Integer)
                End If
            End Get
            Set
                Me(8) = value
            End Set
        End Property
        
        Public Property ActualMass As Decimal
            Get
                If (Me.IsActualMassNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(9),Decimal)
                End If
            End Get
            Set
                Me(9) = value
            End Set
        End Property
        
        Public Property NumberDOA As Integer
            Get
                If (Me.IsNumberDOANull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(10),Integer)
                End If
            End Get
            Set
                Me(10) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property AuthorisedUser As String
            Get
                If (Me.IsAuthorisedUserNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(11),String)
                End If
            End Get
            Set
                Me(11) = value
            End Set
        End Property
        
        Public Property AuthorisationDate As Date
            Get
                If (Me.IsAuthorisationDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(12),Date)
                End If
            End Get
            Set
                Me(12) = value
            End Set
        End Property
        
        Public Property ReturnedSemiCompleteReceiptDate As Date
            Get
                If (Me.IsReturnedSemiCompleteReceiptDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(13),Date)
                End If
            End Get
            Set
                Me(13) = value
            End Set
        End Property
        
        Public Property ReturnedSemiCompleteEntryDate As Date
            Get
                If (Me.IsReturnedSemiCompleteEntryDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(14),Date)
                End If
            End Get
            Set
                Me(14) = value
            End Set
        End Property
        
        Public Property UOMId As Integer
            Get
                If (Me.IsUOMIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(15),Integer)
                End If
            End Get
            Set
                Me(15) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(16),Integer)
                End If
            End Get
            Set
                Me(16) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.ReturnedPermitService
            Get
                Return CType(GetServiceObject(GetType(Service.ReturnedPermitService)),Service.ReturnedPermitService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsEndorseOrReturnDateNull() As Boolean
            Return Me.IsNull(2)
        End Function
        
        Public Sub SetEndorseOrReturnDateToNull()
            Me(2) = System.DBNull.Value
        End Sub
        
        Public Function IsEndoresedUnusedPermitReceiptDateNull() As Boolean
            Return Me.IsNull(3)
        End Function
        
        Public Sub SetEndoresedUnusedPermitReceiptDateToNull()
            Me(3) = System.DBNull.Value
        End Sub
        
        Public Function IsBillOfLadingNull() As Boolean
            Return Me.IsNull(4)
        End Function
        
        Public Sub SetBillOfLadingToNull()
            Me(4) = System.DBNull.Value
        End Sub
        
        Public Function IsCustomsDocumentTypeIdNull() As Boolean
            Return Me.IsNull(5)
        End Function
        
        Public Sub SetCustomsDocumentTypeIdToNull()
            Me(5) = System.DBNull.Value
        End Sub
        
        Public Function IsCustomsDocumentReferenceNull() As Boolean
            Return Me.IsNull(6)
        End Function
        
        Public Sub SetCustomsDocumentReferenceToNull()
            Me(6) = System.DBNull.Value
        End Sub
        
        Public Function IsImportExportDateNull() As Boolean
            Return Me.IsNull(7)
        End Function
        
        Public Sub SetImportExportDateToNull()
            Me(7) = System.DBNull.Value
        End Sub
        
        Public Function IsActualQuantityNull() As Boolean
            Return Me.IsNull(8)
        End Function
        
        Public Sub SetActualQuantityToNull()
            Me(8) = System.DBNull.Value
        End Sub
        
        Public Function IsActualMassNull() As Boolean
            Return Me.IsNull(9)
        End Function
        
        Public Sub SetActualMassToNull()
            Me(9) = System.DBNull.Value
        End Sub
        
        Public Function IsNumberDOANull() As Boolean
            Return Me.IsNull(10)
        End Function
        
        Public Sub SetNumberDOAToNull()
            Me(10) = System.DBNull.Value
        End Sub
        
        Public Function IsAuthorisedUserNull() As Boolean
            Return Me.IsNull(11)
        End Function
        
        Public Sub SetAuthorisedUserToNull()
            Me(11) = System.DBNull.Value
        End Sub
        
        Public Function IsAuthorisationDateNull() As Boolean
            Return Me.IsNull(12)
        End Function
        
        Public Sub SetAuthorisationDateToNull()
            Me(12) = System.DBNull.Value
        End Sub
        
        Public Function IsReturnedSemiCompleteReceiptDateNull() As Boolean
            Return Me.IsNull(13)
        End Function
        
        Public Sub SetReturnedSemiCompleteReceiptDateToNull()
            Me(13) = System.DBNull.Value
        End Sub
        
        Public Function IsReturnedSemiCompleteEntryDateNull() As Boolean
            Return Me.IsNull(14)
        End Function
        
        Public Sub SetReturnedSemiCompleteEntryDateToNull()
            Me(14) = System.DBNull.Value
        End Sub
        
        Public Function IsUOMIdNull() As Boolean
            Return Me.IsNull(15)
        End Function
        
        Public Sub SetUOMIdToNull()
            Me(15) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(16)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(16) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(17)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.ReturnedPermitSet
            Return ReturnedPermitBase.GetAll(false, false, ReturnedPermitServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.ReturnedPermitSet
            Return ReturnedPermitBase.GetAll(includeHyphen, false, ReturnedPermitServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As ReturnedPermitServiceBase.OrderBy) As EntitySet.ReturnedPermitSet
            Dim service As Service.ReturnedPermitService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As ReturnedPermitServiceBase.OrderBy) As EntitySet.ReturnedPermitSet
            Return ReturnedPermitBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal returnedPermitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.ReturnedPermit
            Dim service As Service.ReturnedPermitService
            service = ServiceObject
            Return service.GetById(ReturnedPermitId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal returnedPermitId As Integer) As Entity.ReturnedPermit
            Dim service As Service.ReturnedPermitService
            service = ServiceObject
            Return service.GetById(ReturnedPermitId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal returnedPermitId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.ReturnedPermitService
            service = ServiceObject
            Return service.DeleteById(returnedPermitId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal returnedPermitId As Integer) As Boolean
            Return ReturnedPermitBase.DeleteById(returnedPermitId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal returnedPermitId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return ReturnedPermitBase.DeleteById(returnedPermitId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForPermitInfo(ByVal permitInfoId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ReturnedPermitSet
            Dim service As Service.ReturnedPermitService
            service = ServiceObject
            Return service.GetForPermitInfo(permitInfoId, tran)
        End Function
        
        Public Overloads Shared Function GetForPermitInfo(ByVal permitInfoId As Integer) As EntitySet.ReturnedPermitSet
            Return ReturnedPermitBase.GetForPermitInfo(permitInfoId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForCustomsDocumentType(ByVal customsDocumentTypeId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ReturnedPermitSet
            Dim service As Service.ReturnedPermitService
            service = ServiceObject
            Return service.GetForCustomsDocumentType(customsDocumentTypeId, tran)
        End Function
        
        Public Overloads Shared Function GetForCustomsDocumentType(ByVal customsDocumentTypeId As Integer) As EntitySet.ReturnedPermitSet
            Return ReturnedPermitBase.GetForCustomsDocumentType(customsDocumentTypeId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForCITESUnitOfMeasurement(ByVal cITESUnitOfMeasurementId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ReturnedPermitSet
            Dim service As Service.ReturnedPermitService
            service = ServiceObject
            Return service.GetForCITESUnitOfMeasurement(cITESUnitOfMeasurementId, tran)
        End Function
        
        Public Overloads Shared Function GetForCITESUnitOfMeasurement(ByVal cITESUnitOfMeasurementId As Integer) As EntitySet.ReturnedPermitSet
            Return ReturnedPermitBase.GetForCITESUnitOfMeasurement(cITESUnitOfMeasurementId, Nothing)
        End Function
        
        Public Shared Function Insert(ByVal permitInfoId As Integer, ByVal endorseOrReturnDate As Object, ByVal endoresedUnusedPermitReceiptDate As Object, ByVal billOfLading As Object, ByVal customsDocumentTypeId As Object, ByVal customsDocumentReference As Object, ByVal importExportDate As Object, ByVal actualQuantity As Object, ByVal actualMass As Object, ByVal numberDOA As Object, ByVal authorisedUser As Object, ByVal authorisationDate As Object, ByVal returnedSemiCompleteReceiptDate As Object, ByVal returnedSemiCompleteEntryDate As Object, ByVal uOMId As Object) As Entity.ReturnedPermit
            Return Entity.ReturnedPermit.ServiceObject.Insert(permitInfoId, endorseOrReturnDate, endoresedUnusedPermitReceiptDate, billOfLading, customsDocumentTypeId, customsDocumentReference, importExportDate, actualQuantity, actualMass, numberDOA, authorisedUser, authorisationDate, returnedSemiCompleteReceiptDate, returnedSemiCompleteEntryDate, uOMId)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim permitInfoIdParam As Integer = Me.PermitInfoId
            Dim endorseOrReturnDateParam As Object
            If (Me.IsEndorseOrReturnDateNull = false) Then
                endorseOrReturnDateParam = Me.EndorseOrReturnDate
            Else
                endorseOrReturnDateParam = System.DBNull.Value
            End If
            Dim endoresedUnusedPermitReceiptDateParam As Object
            If (Me.IsEndoresedUnusedPermitReceiptDateNull = false) Then
                endoresedUnusedPermitReceiptDateParam = Me.EndoresedUnusedPermitReceiptDate
            Else
                endoresedUnusedPermitReceiptDateParam = System.DBNull.Value
            End If
            Dim billOfLadingParam As Object
            If (Me.IsBillOfLadingNull = false) Then
                billOfLadingParam = EnterpriseObjects.Common.ParseSQLText(Me.BillOfLading)
            Else
                billOfLadingParam = System.DBNull.Value
            End If
            Dim customsDocumentTypeIdParam As Object
            If (Me.IsCustomsDocumentTypeIdNull = false) Then
                customsDocumentTypeIdParam = Me.CustomsDocumentTypeId
            Else
                customsDocumentTypeIdParam = System.DBNull.Value
            End If
            Dim customsDocumentReferenceParam As Object
            If (Me.IsCustomsDocumentReferenceNull = false) Then
                customsDocumentReferenceParam = EnterpriseObjects.Common.ParseSQLText(Me.CustomsDocumentReference)
            Else
                customsDocumentReferenceParam = System.DBNull.Value
            End If
            Dim importExportDateParam As Object
            If (Me.IsImportExportDateNull = false) Then
                importExportDateParam = Me.ImportExportDate
            Else
                importExportDateParam = System.DBNull.Value
            End If
            Dim actualQuantityParam As Object
            If (Me.IsActualQuantityNull = false) Then
                actualQuantityParam = Me.ActualQuantity
            Else
                actualQuantityParam = System.DBNull.Value
            End If
            Dim actualMassParam As Object
            If (Me.IsActualMassNull = false) Then
                actualMassParam = Me.ActualMass
            Else
                actualMassParam = System.DBNull.Value
            End If
            Dim numberDOAParam As Object
            If (Me.IsNumberDOANull = false) Then
                numberDOAParam = Me.NumberDOA
            Else
                numberDOAParam = System.DBNull.Value
            End If
            Dim authorisedUserParam As Object
            If (Me.IsAuthorisedUserNull = false) Then
                authorisedUserParam = EnterpriseObjects.Common.ParseSQLText(Me.AuthorisedUser)
            Else
                authorisedUserParam = System.DBNull.Value
            End If
            Dim authorisationDateParam As Object
            If (Me.IsAuthorisationDateNull = false) Then
                authorisationDateParam = Me.AuthorisationDate
            Else
                authorisationDateParam = System.DBNull.Value
            End If
            Dim returnedSemiCompleteReceiptDateParam As Object
            If (Me.IsReturnedSemiCompleteReceiptDateNull = false) Then
                returnedSemiCompleteReceiptDateParam = Me.ReturnedSemiCompleteReceiptDate
            Else
                returnedSemiCompleteReceiptDateParam = System.DBNull.Value
            End If
            Dim returnedSemiCompleteEntryDateParam As Object
            If (Me.IsReturnedSemiCompleteEntryDateNull = false) Then
                returnedSemiCompleteEntryDateParam = Me.ReturnedSemiCompleteEntryDate
            Else
                returnedSemiCompleteEntryDateParam = System.DBNull.Value
            End If
            Dim uOMIdParam As Object
            If (Me.IsUOMIdNull = false) Then
                uOMIdParam = Me.UOMId
            Else
                uOMIdParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.ReturnedPermit.ServiceObject.Update(Me.Id, permitInfoIdParam, endorseOrReturnDateParam, endoresedUnusedPermitReceiptDateParam, billOfLadingParam, customsDocumentTypeIdParam, customsDocumentReferenceParam, importExportDateParam, actualQuantityParam, actualMassParam, numberDOAParam, authorisedUserParam, authorisationDateParam, returnedSemiCompleteReceiptDateParam, returnedSemiCompleteEntryDateParam, uOMIdParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
