'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'FeeReduction'
    '*DO NOT* modify this file.
    'Add new properties and methods to FeeReduction instead.
    Public MustInherit Class FeeReductionBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal feeReductionId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(feeReductionId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal feeReductionId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(feeReductionId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property FeeReductionId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Property ApplicationId As Integer
            Get
                Return CType(Me(1),Integer)
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        Public Property PaymentId As Integer
            Get
                Return CType(Me(2),Integer)
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property Reason As String
            Get
                If (Me.IsReasonNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(3),String)
                End If
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        Public Property SSOUser As Integer
            Get
                If (Me.IsSSOUserNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(4),Integer)
                End If
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        Public Property DateTime As Date
            Get
                If (Me.IsDateTimeNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(5),Date)
                End If
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        Public Property Amount As Decimal
            Get
                If (Me.IsAmountNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(6),Decimal)
                End If
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        Public Property OriginalFee As Decimal
            Get
                If (Me.IsOriginalFeeNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(7),Decimal)
                End If
            End Get
            Set
                Me(7) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(8),Integer)
                End If
            End Get
            Set
                Me(8) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.FeeReductionService
            Get
                Return CType(GetServiceObject(GetType(Service.FeeReductionService)),Service.FeeReductionService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsReasonNull() As Boolean
            Return Me.IsNull(3)
        End Function
        
        Public Sub SetReasonToNull()
            Me(3) = System.DBNull.Value
        End Sub
        
        Public Function IsSSOUserNull() As Boolean
            Return Me.IsNull(4)
        End Function
        
        Public Sub SetSSOUserToNull()
            Me(4) = System.DBNull.Value
        End Sub
        
        Public Function IsDateTimeNull() As Boolean
            Return Me.IsNull(5)
        End Function
        
        Public Sub SetDateTimeToNull()
            Me(5) = System.DBNull.Value
        End Sub
        
        Public Function IsAmountNull() As Boolean
            Return Me.IsNull(6)
        End Function
        
        Public Sub SetAmountToNull()
            Me(6) = System.DBNull.Value
        End Sub
        
        Public Function IsOriginalFeeNull() As Boolean
            Return Me.IsNull(7)
        End Function
        
        Public Sub SetOriginalFeeToNull()
            Me(7) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(8)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(8) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(9)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.FeeReductionSet
            Return FeeReductionBase.GetAll(false, false, FeeReductionServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.FeeReductionSet
            Return FeeReductionBase.GetAll(includeHyphen, false, FeeReductionServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As FeeReductionServiceBase.OrderBy) As EntitySet.FeeReductionSet
            Dim service As Service.FeeReductionService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As FeeReductionServiceBase.OrderBy) As EntitySet.FeeReductionSet
            Return FeeReductionBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal feeReductionId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.FeeReduction
            Dim service As Service.FeeReductionService
            service = ServiceObject
            Return service.GetById(FeeReductionId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal feeReductionId As Integer) As Entity.FeeReduction
            Dim service As Service.FeeReductionService
            service = ServiceObject
            Return service.GetById(FeeReductionId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal feeReductionId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.FeeReductionService
            service = ServiceObject
            Return service.DeleteById(feeReductionId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal feeReductionId As Integer) As Boolean
            Return FeeReductionBase.DeleteById(feeReductionId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal feeReductionId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return FeeReductionBase.DeleteById(feeReductionId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForApplication(ByVal applicationId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.FeeReductionSet
            Dim service As Service.FeeReductionService
            service = ServiceObject
            Return service.GetForApplication(applicationId, tran)
        End Function
        
        Public Overloads Shared Function GetForApplication(ByVal applicationId As Integer) As EntitySet.FeeReductionSet
            Return FeeReductionBase.GetForApplication(applicationId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForPayment(ByVal paymentId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.FeeReductionSet
            Dim service As Service.FeeReductionService
            service = ServiceObject
            Return service.GetForPayment(paymentId, tran)
        End Function
        
        Public Overloads Shared Function GetForPayment(ByVal paymentId As Integer) As EntitySet.FeeReductionSet
            Return FeeReductionBase.GetForPayment(paymentId, Nothing)
        End Function
        
        Public Shared Function Insert(ByVal applicationId As Integer, ByVal paymentId As Integer, ByVal reason As Object, ByVal sSOUser As Object, ByVal dateTime As Object, ByVal amount As Object, ByVal originalFee As Object) As Entity.FeeReduction
            Return Entity.FeeReduction.ServiceObject.Insert(applicationId, paymentId, reason, sSOUser, dateTime, amount, originalFee)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim applicationIdParam As Integer = Me.ApplicationId
            Dim paymentIdParam As Integer = Me.PaymentId
            Dim reasonParam As Object
            If (Me.IsReasonNull = false) Then
                reasonParam = EnterpriseObjects.Common.ParseSQLText(Me.Reason)
            Else
                reasonParam = System.DBNull.Value
            End If
            Dim sSOUserParam As Object
            If (Me.IsSSOUserNull = false) Then
                sSOUserParam = Me.SSOUser
            Else
                sSOUserParam = System.DBNull.Value
            End If
            Dim dateTimeParam As Object
            If (Me.IsDateTimeNull = false) Then
                dateTimeParam = Me.DateTime
            Else
                dateTimeParam = System.DBNull.Value
            End If
            Dim amountParam As Object
            If (Me.IsAmountNull = false) Then
                amountParam = Me.Amount
            Else
                amountParam = System.DBNull.Value
            End If
            Dim originalFeeParam As Object
            If (Me.IsOriginalFeeNull = false) Then
                originalFeeParam = Me.OriginalFee
            Else
                originalFeeParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.FeeReduction.ServiceObject.Update(Me.Id, applicationIdParam, paymentIdParam, reasonParam, sSOUserParam, dateTimeParam, amountParam, originalFeeParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
