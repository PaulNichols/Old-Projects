'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'Article10CertificateFate'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class Article10CertificateFateServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.Article10CertificateFateSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.Article10CertificateFateSet
            Return CType(MyBase.GetAll("eosp_SelectArticle10CertificateFate", GetType(EntitySet.Article10CertificateFateSet), includeHyphen, includeInactive, orderBy),EntitySet.Article10CertificateFateSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.Article10CertificateFateSet
            Return Me.GetAll(includeHyphen, includeInactive, Article10CertificateFateServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, Article10CertificateFateServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.Article10CertificateFateSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal article10CertificateFateId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectArticle10CertificateFate", "Article10CertificateFateId", article10CertificateFateId, GetType(EntitySet.Article10CertificateFateSet), tran),Entity.Article10CertificateFate)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal article10CertificateFateId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(article10CertificateFateId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal article10CertificateFateId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.Article10CertificateFate
            Return CType(MyBase.GetById("eosp_SelectArticle10CertificateFate", "Article10CertificateFateId", article10CertificateFateId, GetType(EntitySet.Article10CertificateFateSet), tran),Entity.Article10CertificateFate)
        End Function
        
        Public Overloads Function GetById(ByVal article10CertificateFateId As Integer) As Entity.Article10CertificateFate
            Return Me.GetById(article10CertificateFateId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal article10CertificateFateId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(article10CertificateFateId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal article10CertificateFateId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteArticle10CertificateFate", "Article10CertificateFateId", article10CertificateFateId, checkSum, transaction)
        End Function
        
        'GetForArticle10Fate - links to the Article10Fate table...
        Public Overloads Function GetForArticle10Fate(ByVal Article10FateId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.Article10CertificateFateSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from Article10CertificateFate where Fate"& _ 
"Id=" + Article10FateId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.Article10CertificateFateSet), tran),EntitySet.Article10CertificateFateSet)
        End Function
        
        'GetForArticle10Fate - links to the Article10Fate table...
        Public Overloads Function GetForArticle10Fate(ByVal Article10FateId As Integer) As EntitySet.Article10CertificateFateSet
            Return Me.GetForArticle10Fate(Article10FateId, Nothing)
        End Function
        
        'GetForPermit - links to the Permit table...
        Public Overloads Function GetForPermit(ByVal PermitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.Article10CertificateFateSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from Article10CertificateFate where Perm"& _ 
"itId=" + PermitId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.Article10CertificateFateSet), tran),EntitySet.Article10CertificateFateSet)
        End Function
        
        'GetForPermit - links to the Permit table...
        Public Overloads Function GetForPermit(ByVal PermitId As Integer) As EntitySet.Article10CertificateFateSet
            Return Me.GetForPermit(PermitId, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal fateId As Integer, ByVal qtyUsed As Object, ByVal returnedToDefra As Boolean, ByVal permitId As Integer, ByVal specimenSoldTo As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Article10CertificateFate
            Return Me.GetById(Sprocs.eosp_CreateArticle10CertificateFate(fateId, qtyUsed, returnedToDefra, permitId, specimenSoldTo, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal fateId As Integer, ByVal qtyUsed As Object, ByVal returnedToDefra As Boolean, ByVal permitId As Integer, ByVal specimenSoldTo As Object) As Entity.Article10CertificateFate
            Return Me.Insert(fateId, qtyUsed, returnedToDefra, permitId, specimenSoldTo, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal article10CertificateFate As Entity.Article10CertificateFate) As Entity.Article10CertificateFate
            Return Me.Insert(article10CertificateFate(1), article10CertificateFate(2), article10CertificateFate(3), article10CertificateFate(4), article10CertificateFate(5))
        End Function
        
        Public Overloads Function Insert(ByVal article10CertificateFate As Entity.Article10CertificateFate, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Article10CertificateFate
            Return Me.Insert(article10CertificateFate(1), article10CertificateFate(2), article10CertificateFate(3), article10CertificateFate(4), article10CertificateFate(5), transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal fateId As Integer, ByVal qtyUsed As Object, ByVal returnedToDefra As Boolean, ByVal permitId As Integer, ByVal specimenSoldTo As Object, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Article10CertificateFate
            Return Sprocs.eosp_UpdateArticle10CertificateFate(id, fateId, qtyUsed, returnedToDefra, permitId, specimenSoldTo, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal fateId As Integer, ByVal qtyUsed As Object, ByVal returnedToDefra As Boolean, ByVal permitId As Integer, ByVal specimenSoldTo As Object) As Entity.Article10CertificateFate
            Return Me.Update(id, fateId, qtyUsed, returnedToDefra, permitId, specimenSoldTo, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal fateId As Integer, ByVal qtyUsed As Object, ByVal returnedToDefra As Boolean, ByVal permitId As Integer, ByVal specimenSoldTo As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Article10CertificateFate
            Return Me.Update(id, fateId, qtyUsed, returnedToDefra, permitId, specimenSoldTo, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal fateId As Integer, ByVal qtyUsed As Object, ByVal returnedToDefra As Boolean, ByVal permitId As Integer, ByVal specimenSoldTo As Object, ByVal checkSum As Integer) As Entity.Article10CertificateFate
            Return Me.Update(id, fateId, qtyUsed, returnedToDefra, permitId, specimenSoldTo, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal article10CertificateFate As Entity.Article10CertificateFate) As Entity.Article10CertificateFate
            Return Me.Update(article10CertificateFate.id, article10CertificateFate(1), article10CertificateFate(2), article10CertificateFate(3), article10CertificateFate(4), article10CertificateFate(5))
        End Function
        
        Public Overloads Function Update(ByVal article10CertificateFate As Entity.Article10CertificateFate, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Article10CertificateFate
            Return Me.Update(article10CertificateFate.id, article10CertificateFate(1), article10CertificateFate(2), article10CertificateFate(3), article10CertificateFate(4), article10CertificateFate(5), transaction)
        End Function
        
        Public Overloads Function Update(ByVal article10CertificateFate As Entity.Article10CertificateFate, ByVal checkSum As Integer) As Entity.Article10CertificateFate
            Return Me.Update(article10CertificateFate.id, article10CertificateFate(1), article10CertificateFate(2), article10CertificateFate(3), article10CertificateFate(4), article10CertificateFate(5), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal article10CertificateFate As Entity.Article10CertificateFate, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Article10CertificateFate
            Return Me.Update(article10CertificateFate.id, article10CertificateFate(1), article10CertificateFate(2), article10CertificateFate(3), article10CertificateFate(4), article10CertificateFate(5), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_Article10CertificateFate(ByVal permitId As Integer) As EntitySet.Article10CertificateFateSet
            Return Sprocs.eosp_SelectArticle10CertificateFate(article10CertificateFateId:=Nothing, Index_PermitId:=[permitId], transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_Article10CertificateFate(ByVal permitId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.Article10CertificateFateSet
            Return Sprocs.eosp_SelectArticle10CertificateFate(article10CertificateFateId:=Nothing, Index_PermitId:=[permitId], sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            IX_Article10CertificateFate
            
            
        End Enum
    End Class
End Namespace
