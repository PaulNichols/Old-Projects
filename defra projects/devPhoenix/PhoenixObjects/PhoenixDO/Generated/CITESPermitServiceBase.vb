'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'CITESPermit'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class CITESPermitServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.CITESPermitSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.CITESPermitSet
            Return CType(MyBase.GetAll("eosp_SelectCITESPermit", GetType(EntitySet.CITESPermitSet), includeHyphen, includeInactive, orderBy),EntitySet.CITESPermitSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.CITESPermitSet
            Return Me.GetAll(includeHyphen, includeInactive, CITESPermitServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, CITESPermitServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal cITESPermitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectCITESPermit", "CITESPermitId", cITESPermitId, GetType(EntitySet.CITESPermitSet), tran),Entity.CITESPermit)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal cITESPermitId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(cITESPermitId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal cITESPermitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.CITESPermit
            Return CType(MyBase.GetById("eosp_SelectCITESPermit", "CITESPermitId", cITESPermitId, GetType(EntitySet.CITESPermitSet), tran),Entity.CITESPermit)
        End Function
        
        Public Overloads Function GetById(ByVal cITESPermitId As Integer) As Entity.CITESPermit
            Return Me.GetById(cITESPermitId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal cITESPermitId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(cITESPermitId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal cITESPermitId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteCITESPermit", "CITESPermitId", cITESPermitId, checkSum, transaction)
        End Function
        
        'GetForPermit - links to the Permit table...
        Public Overloads Function GetForPermit(ByVal PermitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CITESPermitSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from CITESPermit where PermitId=" + PermitId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.CITESPermitSet), tran),EntitySet.CITESPermitSet)
        End Function
        
        'GetForPermit - links to the Permit table...
        Public Overloads Function GetForPermit(ByVal PermitId As Integer) As EntitySet.CITESPermitSet
            Return Me.GetForPermit(PermitId, Nothing)
        End Function
        
        'GetForCITESDerivative - links to the CITESDerivative table...
        Public Overloads Function GetForCITESDerivative(ByVal CITESDerivativeId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CITESPermitSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from CITESPermit where Derivative=" + CITESDerivativeId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.CITESPermitSet), tran),EntitySet.CITESPermitSet)
        End Function
        
        'GetForCITESDerivative - links to the CITESDerivative table...
        Public Overloads Function GetForCITESDerivative(ByVal CITESDerivativeId As Integer) As EntitySet.CITESPermitSet
            Return Me.GetForCITESDerivative(CITESDerivativeId, Nothing)
        End Function
        
        'GetForCountry - links to the Country table...
        Public Overloads Function GetForCountry(ByVal CountryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CITESPermitSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from CITESPermit where AuthorityLocation"& _ 
"=" + CountryId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.CITESPermitSet), tran),EntitySet.CITESPermitSet)
        End Function
        
        'GetForCountry - links to the Country table...
        Public Overloads Function GetForCountry(ByVal CountryId As Integer) As EntitySet.CITESPermitSet
            Return Me.GetForCountry(CountryId, Nothing)
        End Function
        
        'GetForCITESPurpose - links to the CITESPurpose table...
        Public Overloads Function GetForCITESPurpose(ByVal PurposeId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CITESPermitSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from CITESPermit where PurposeId=" + PurposeId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.CITESPermitSet), tran),EntitySet.CITESPermitSet)
        End Function
        
        'GetForCITESPurpose - links to the CITESPurpose table...
        Public Overloads Function GetForCITESPurpose(ByVal PurposeId As Integer) As EntitySet.CITESPermitSet
            Return Me.GetForCITESPurpose(PurposeId, Nothing)
        End Function
        
        'GetForSource1IdCITESSource - links to the CITESSource table...
        Public Overloads Function GetForSource1IdCITESSource(ByVal Source1Id As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CITESPermitSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from CITESPermit where Source1Id=" + Source1Id.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.CITESPermitSet), tran),EntitySet.CITESPermitSet)
        End Function
        
        'GetForSource1IdCITESSource - links to the CITESSource table...
        Public Overloads Function GetForSource1IdCITESSource(ByVal Source1Id As Integer) As EntitySet.CITESPermitSet
            Return Me.GetForSource1IdCITESSource(Source1Id, Nothing)
        End Function
        
        'GetForSource2IdCITESSource - links to the CITESSource table...
        Public Overloads Function GetForSource2IdCITESSource(ByVal Source2Id As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CITESPermitSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from CITESPermit where Source2Id=" + Source2Id.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.CITESPermitSet), tran),EntitySet.CITESPermitSet)
        End Function
        
        'GetForSource2IdCITESSource - links to the CITESSource table...
        Public Overloads Function GetForSource2IdCITESSource(ByVal Source2Id As Integer) As EntitySet.CITESPermitSet
            Return Me.GetForSource2IdCITESSource(Source2Id, Nothing)
        End Function
        
        'GetForDelegationGuideline - links to the DelegationGuideline table...
        Public Overloads Function GetForDelegationGuideline(ByVal DelegationGuidelineID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CITESPermitSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from CITESPermit where DelegationAuthori"& _ 
"tyId=" + DelegationGuidelineID.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.CITESPermitSet), tran),EntitySet.CITESPermitSet)
        End Function
        
        'GetForDelegationGuideline - links to the DelegationGuideline table...
        Public Overloads Function GetForDelegationGuideline(ByVal DelegationGuidelineID As Integer) As EntitySet.CITESPermitSet
            Return Me.GetForDelegationGuideline(DelegationGuidelineID, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal permitId As Integer, ByVal derivative As Object, ByVal authorityLocation As Object, ByVal underDerogation As Boolean, ByVal isRetrospective As Boolean, ByVal purposeId As Object, ByVal source1Id As Object, ByVal source2Id As Object, ByVal delegationAuthorityId As Object, ByVal expiryDate As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.CITESPermit
            Return Me.GetById(Sprocs.eosp_CreateCITESPermit(permitId, derivative, authorityLocation, underDerogation, isRetrospective, purposeId, source1Id, source2Id, delegationAuthorityId, expiryDate, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal permitId As Integer, ByVal derivative As Object, ByVal authorityLocation As Object, ByVal underDerogation As Boolean, ByVal isRetrospective As Boolean, ByVal purposeId As Object, ByVal source1Id As Object, ByVal source2Id As Object, ByVal delegationAuthorityId As Object, ByVal expiryDate As Object) As Entity.CITESPermit
            Return Me.Insert(permitId, derivative, authorityLocation, underDerogation, isRetrospective, purposeId, source1Id, source2Id, delegationAuthorityId, expiryDate, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal cITESPermit As Entity.CITESPermit) As Entity.CITESPermit
            Return Me.Insert(cITESPermit(1), cITESPermit(2), cITESPermit(3), cITESPermit(4), cITESPermit(5), cITESPermit(6), cITESPermit(7), cITESPermit(8), cITESPermit(9), cITESPermit(10))
        End Function
        
        Public Overloads Function Insert(ByVal cITESPermit As Entity.CITESPermit, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.CITESPermit
            Return Me.Insert(cITESPermit(1), cITESPermit(2), cITESPermit(3), cITESPermit(4), cITESPermit(5), cITESPermit(6), cITESPermit(7), cITESPermit(8), cITESPermit(9), cITESPermit(10), transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal permitId As Integer, ByVal derivative As Object, ByVal authorityLocation As Object, ByVal underDerogation As Boolean, ByVal isRetrospective As Boolean, ByVal purposeId As Object, ByVal source1Id As Object, ByVal source2Id As Object, ByVal delegationAuthorityId As Object, ByVal expiryDate As Object, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.CITESPermit
            Return Sprocs.eosp_UpdateCITESPermit(id, permitId, derivative, authorityLocation, underDerogation, isRetrospective, purposeId, source1Id, source2Id, delegationAuthorityId, expiryDate, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal permitId As Integer, ByVal derivative As Object, ByVal authorityLocation As Object, ByVal underDerogation As Boolean, ByVal isRetrospective As Boolean, ByVal purposeId As Object, ByVal source1Id As Object, ByVal source2Id As Object, ByVal delegationAuthorityId As Object, ByVal expiryDate As Object) As Entity.CITESPermit
            Return Me.Update(id, permitId, derivative, authorityLocation, underDerogation, isRetrospective, purposeId, source1Id, source2Id, delegationAuthorityId, expiryDate, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal permitId As Integer, ByVal derivative As Object, ByVal authorityLocation As Object, ByVal underDerogation As Boolean, ByVal isRetrospective As Boolean, ByVal purposeId As Object, ByVal source1Id As Object, ByVal source2Id As Object, ByVal delegationAuthorityId As Object, ByVal expiryDate As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.CITESPermit
            Return Me.Update(id, permitId, derivative, authorityLocation, underDerogation, isRetrospective, purposeId, source1Id, source2Id, delegationAuthorityId, expiryDate, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal permitId As Integer, ByVal derivative As Object, ByVal authorityLocation As Object, ByVal underDerogation As Boolean, ByVal isRetrospective As Boolean, ByVal purposeId As Object, ByVal source1Id As Object, ByVal source2Id As Object, ByVal delegationAuthorityId As Object, ByVal expiryDate As Object, ByVal checkSum As Integer) As Entity.CITESPermit
            Return Me.Update(id, permitId, derivative, authorityLocation, underDerogation, isRetrospective, purposeId, source1Id, source2Id, delegationAuthorityId, expiryDate, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal cITESPermit As Entity.CITESPermit) As Entity.CITESPermit
            Return Me.Update(cITESPermit.id, cITESPermit(1), cITESPermit(2), cITESPermit(3), cITESPermit(4), cITESPermit(5), cITESPermit(6), cITESPermit(7), cITESPermit(8), cITESPermit(9), cITESPermit(10))
        End Function
        
        Public Overloads Function Update(ByVal cITESPermit As Entity.CITESPermit, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.CITESPermit
            Return Me.Update(cITESPermit.id, cITESPermit(1), cITESPermit(2), cITESPermit(3), cITESPermit(4), cITESPermit(5), cITESPermit(6), cITESPermit(7), cITESPermit(8), cITESPermit(9), cITESPermit(10), transaction)
        End Function
        
        Public Overloads Function Update(ByVal cITESPermit As Entity.CITESPermit, ByVal checkSum As Integer) As Entity.CITESPermit
            Return Me.Update(cITESPermit.id, cITESPermit(1), cITESPermit(2), cITESPermit(3), cITESPermit(4), cITESPermit(5), cITESPermit(6), cITESPermit(7), cITESPermit(8), cITESPermit(9), cITESPermit(10), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal cITESPermit As Entity.CITESPermit, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.CITESPermit
            Return Me.Update(cITESPermit.id, cITESPermit(1), cITESPermit(2), cITESPermit(3), cITESPermit(4), cITESPermit(5), cITESPermit(6), cITESPermit(7), cITESPermit(8), cITESPermit(9), cITESPermit(10), checkSum, transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
        End Enum
    End Class
End Namespace
