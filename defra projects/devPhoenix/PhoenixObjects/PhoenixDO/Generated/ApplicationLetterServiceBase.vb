'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'ApplicationLetter'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class ApplicationLetterServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.ApplicationLetterSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.ApplicationLetterSet
            Return CType(MyBase.GetAll("eosp_SelectApplicationLetter", GetType(EntitySet.ApplicationLetterSet), includeHyphen, includeInactive, orderBy),EntitySet.ApplicationLetterSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.ApplicationLetterSet
            Return Me.GetAll(includeHyphen, includeInactive, ApplicationLetterServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, ApplicationLetterServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.ApplicationLetterSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal applicationLetterId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectApplicationLetter", "ApplicationLetterId", applicationLetterId, GetType(EntitySet.ApplicationLetterSet), tran),Entity.ApplicationLetter)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal applicationLetterId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(applicationLetterId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal applicationLetterId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationLetter
            Return CType(MyBase.GetById("eosp_SelectApplicationLetter", "ApplicationLetterId", applicationLetterId, GetType(EntitySet.ApplicationLetterSet), tran),Entity.ApplicationLetter)
        End Function
        
        Public Overloads Function GetById(ByVal applicationLetterId As Integer) As Entity.ApplicationLetter
            Return Me.GetById(applicationLetterId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal applicationLetterId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(applicationLetterId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal applicationLetterId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteApplicationLetter", "ApplicationLetterId", applicationLetterId, checkSum, transaction)
        End Function
        
        'GetForApplication - links to the Application table...
        Public Overloads Function GetForApplication(ByVal ApplicationId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ApplicationLetterSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from ApplicationLetter where Application"& _ 
"Id=" + ApplicationId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.ApplicationLetterSet), tran),EntitySet.ApplicationLetterSet)
        End Function
        
        'GetForApplication - links to the Application table...
        Public Overloads Function GetForApplication(ByVal ApplicationId As Integer) As EntitySet.ApplicationLetterSet
            Return Me.GetForApplication(ApplicationId, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal dueBackDate As Object, ByVal dateIssued As Date, ByVal numberOfTimesIssued As Integer, ByVal applicationId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationLetter
            Return Me.GetById(Sprocs.eosp_CreateApplicationLetter(dueBackDate, dateIssued, numberOfTimesIssued, applicationId, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal dueBackDate As Object, ByVal dateIssued As Date, ByVal numberOfTimesIssued As Integer, ByVal applicationId As Integer) As Entity.ApplicationLetter
            Return Me.Insert(dueBackDate, dateIssued, numberOfTimesIssued, applicationId, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal applicationLetter As Entity.ApplicationLetter) As Entity.ApplicationLetter
            Return Me.Insert(applicationLetter(1), applicationLetter(2), applicationLetter(3), applicationLetter(4))
        End Function
        
        Public Overloads Function Insert(ByVal applicationLetter As Entity.ApplicationLetter, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationLetter
            Return Me.Insert(applicationLetter(1), applicationLetter(2), applicationLetter(3), applicationLetter(4), transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal dueBackDate As Object, ByVal dateIssued As Date, ByVal numberOfTimesIssued As Integer, ByVal applicationId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationLetter
            Return Sprocs.eosp_UpdateApplicationLetter(id, dueBackDate, dateIssued, numberOfTimesIssued, applicationId, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal dueBackDate As Object, ByVal dateIssued As Date, ByVal numberOfTimesIssued As Integer, ByVal applicationId As Integer) As Entity.ApplicationLetter
            Return Me.Update(id, dueBackDate, dateIssued, numberOfTimesIssued, applicationId, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal dueBackDate As Object, ByVal dateIssued As Date, ByVal numberOfTimesIssued As Integer, ByVal applicationId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationLetter
            Return Me.Update(id, dueBackDate, dateIssued, numberOfTimesIssued, applicationId, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal dueBackDate As Object, ByVal dateIssued As Date, ByVal numberOfTimesIssued As Integer, ByVal applicationId As Integer, ByVal checkSum As Integer) As Entity.ApplicationLetter
            Return Me.Update(id, dueBackDate, dateIssued, numberOfTimesIssued, applicationId, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal applicationLetter As Entity.ApplicationLetter) As Entity.ApplicationLetter
            Return Me.Update(applicationLetter.id, applicationLetter(1), applicationLetter(2), applicationLetter(3), applicationLetter(4))
        End Function
        
        Public Overloads Function Update(ByVal applicationLetter As Entity.ApplicationLetter, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationLetter
            Return Me.Update(applicationLetter.id, applicationLetter(1), applicationLetter(2), applicationLetter(3), applicationLetter(4), transaction)
        End Function
        
        Public Overloads Function Update(ByVal applicationLetter As Entity.ApplicationLetter, ByVal checkSum As Integer) As Entity.ApplicationLetter
            Return Me.Update(applicationLetter.id, applicationLetter(1), applicationLetter(2), applicationLetter(3), applicationLetter(4), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal applicationLetter As Entity.ApplicationLetter, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationLetter
            Return Me.Update(applicationLetter.id, applicationLetter(1), applicationLetter(2), applicationLetter(3), applicationLetter(4), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_UQ__ApplicationLette__6B9D192A(ByVal applicationLetterId As Integer) As EntitySet.ApplicationLetterSet
            Return Sprocs.eosp_SelectApplicationLetter(applicationLetterId:=Nothing, Index_ApplicationLetterId:=[applicationLetterId], transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_UQ__ApplicationLette__6B9D192A(ByVal applicationLetterId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.ApplicationLetterSet
            Return Sprocs.eosp_SelectApplicationLetter(applicationLetterId:=Nothing, Index_ApplicationLetterId:=[applicationLetterId], sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            UQ__ApplicationLette__6B9D192A
            
            
        End Enum
    End Class
End Namespace
