'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'ApplicationType'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class ApplicationTypeServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return true
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.ApplicationTypeSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.ApplicationTypeSet
            Return CType(MyBase.GetAll("eosp_SelectApplicationType", GetType(EntitySet.ApplicationTypeSet), includeHyphen, includeInactive, orderBy),EntitySet.ApplicationTypeSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.ApplicationTypeSet
            Return Me.GetAll(includeHyphen, includeInactive, ApplicationTypeServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, ApplicationTypeServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.ApplicationTypeSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal applicationTypeId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectApplicationType", "ApplicationTypeId", applicationTypeId, GetType(EntitySet.ApplicationTypeSet), tran),Entity.ApplicationType)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal applicationTypeId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(applicationTypeId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal applicationTypeId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationType
            Return CType(MyBase.GetById("eosp_SelectApplicationType", "ApplicationTypeId", applicationTypeId, GetType(EntitySet.ApplicationTypeSet), tran),Entity.ApplicationType)
        End Function
        
        Public Overloads Function GetById(ByVal applicationTypeId As Integer) As Entity.ApplicationType
            Return Me.GetById(applicationTypeId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal applicationTypeId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(applicationTypeId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal applicationTypeId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteApplicationType", "ApplicationTypeId", applicationTypeId, checkSum, transaction)
        End Function
        
        Public Overloads Function Insert(ByVal code As String, ByVal description As String, ByVal serviceLevel As Integer, ByVal citesYesNo As Boolean, ByVal active As Boolean, ByVal wLRSService As Integer, ByVal jNCCService1 As Integer, ByVal jNCCService2 As Integer, ByVal kewService1 As Integer, ByVal kewService2 As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationType
            Return Me.GetById(Sprocs.eosp_CreateApplicationType(code, description, serviceLevel, citesYesNo, active, wLRSService, jNCCService1, jNCCService2, kewService1, kewService2, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal code As String, ByVal description As String, ByVal serviceLevel As Integer, ByVal citesYesNo As Boolean, ByVal active As Boolean, ByVal wLRSService As Integer, ByVal jNCCService1 As Integer, ByVal jNCCService2 As Integer, ByVal kewService1 As Integer, ByVal kewService2 As Integer) As Entity.ApplicationType
            Return Me.Insert(code, description, serviceLevel, citesYesNo, active, wLRSService, jNCCService1, jNCCService2, kewService1, kewService2, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal applicationType As Entity.ApplicationType) As Entity.ApplicationType
            Return Me.Insert(applicationType(1), applicationType(2), applicationType(3), applicationType(4), applicationType(5), applicationType(6), applicationType(7), applicationType(8), applicationType(9), applicationType(10))
        End Function
        
        Public Overloads Function Insert(ByVal applicationType As Entity.ApplicationType, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationType
            Return Me.Insert(applicationType(1), applicationType(2), applicationType(3), applicationType(4), applicationType(5), applicationType(6), applicationType(7), applicationType(8), applicationType(9), applicationType(10), transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal code As String, ByVal description As String, ByVal serviceLevel As Integer, ByVal citesYesNo As Boolean, ByVal active As Boolean, ByVal wLRSService As Integer, ByVal jNCCService1 As Integer, ByVal jNCCService2 As Integer, ByVal kewService1 As Integer, ByVal kewService2 As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationType
            Return Sprocs.eosp_UpdateApplicationType(id, code, description, serviceLevel, citesYesNo, active, wLRSService, jNCCService1, jNCCService2, kewService1, kewService2, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal code As String, ByVal description As String, ByVal serviceLevel As Integer, ByVal citesYesNo As Boolean, ByVal active As Boolean, ByVal wLRSService As Integer, ByVal jNCCService1 As Integer, ByVal jNCCService2 As Integer, ByVal kewService1 As Integer, ByVal kewService2 As Integer) As Entity.ApplicationType
            Return Me.Update(id, code, description, serviceLevel, citesYesNo, active, wLRSService, jNCCService1, jNCCService2, kewService1, kewService2, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal code As String, ByVal description As String, ByVal serviceLevel As Integer, ByVal citesYesNo As Boolean, ByVal active As Boolean, ByVal wLRSService As Integer, ByVal jNCCService1 As Integer, ByVal jNCCService2 As Integer, ByVal kewService1 As Integer, ByVal kewService2 As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationType
            Return Me.Update(id, code, description, serviceLevel, citesYesNo, active, wLRSService, jNCCService1, jNCCService2, kewService1, kewService2, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal code As String, ByVal description As String, ByVal serviceLevel As Integer, ByVal citesYesNo As Boolean, ByVal active As Boolean, ByVal wLRSService As Integer, ByVal jNCCService1 As Integer, ByVal jNCCService2 As Integer, ByVal kewService1 As Integer, ByVal kewService2 As Integer, ByVal checkSum As Integer) As Entity.ApplicationType
            Return Me.Update(id, code, description, serviceLevel, citesYesNo, active, wLRSService, jNCCService1, jNCCService2, kewService1, kewService2, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal applicationType As Entity.ApplicationType) As Entity.ApplicationType
            Return Me.Update(applicationType.id, applicationType(1), applicationType(2), applicationType(3), applicationType(4), applicationType(5), applicationType(6), applicationType(7), applicationType(8), applicationType(9), applicationType(10))
        End Function
        
        Public Overloads Function Update(ByVal applicationType As Entity.ApplicationType, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationType
            Return Me.Update(applicationType.id, applicationType(1), applicationType(2), applicationType(3), applicationType(4), applicationType(5), applicationType(6), applicationType(7), applicationType(8), applicationType(9), applicationType(10), transaction)
        End Function
        
        Public Overloads Function Update(ByVal applicationType As Entity.ApplicationType, ByVal checkSum As Integer) As Entity.ApplicationType
            Return Me.Update(applicationType.id, applicationType(1), applicationType(2), applicationType(3), applicationType(4), applicationType(5), applicationType(6), applicationType(7), applicationType(8), applicationType(9), applicationType(10), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal applicationType As Entity.ApplicationType, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationType
            Return Me.Update(applicationType.id, applicationType(1), applicationType(2), applicationType(3), applicationType(4), applicationType(5), applicationType(6), applicationType(7), applicationType(8), applicationType(9), applicationType(10), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_ApplicationType(ByVal code As String, ByVal includeInactive As Boolean) As EntitySet.ApplicationTypeSet
            Return Sprocs.eosp_SelectApplicationType(applicationTypeId:=Nothing, Index_Code:=[code], includeInactive:=includeInactive, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_ApplicationType(ByVal code As String, ByVal includeInactive As Boolean, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.ApplicationTypeSet
            Return Sprocs.eosp_SelectApplicationType(applicationTypeId:=Nothing, Index_Code:=[code], includeInactive:=includeInactive, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            IX_ApplicationType
            
            
        End Enum
    End Class
End Namespace
