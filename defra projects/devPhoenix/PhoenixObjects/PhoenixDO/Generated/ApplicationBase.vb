'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'Application'
    '*DO NOT* modify this file.
    'Add new properties and methods to Application instead.
    Public MustInherit Class ApplicationBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal applicationId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(applicationId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal applicationId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(applicationId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property ApplicationId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Property ApplicationDate As Date
            Get
                Return CType(Me(1),Date)
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        Public Property SemiComplete As Boolean
            Get
                Return CType(Me(2),Boolean)
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        Public Property ApplicationMethodId As Integer
            Get
                If (Me.IsApplicationMethodIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(3),Integer)
                End If
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        Public Property CreatedDate As Date
            Get
                If (Me.IsCreatedDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(4),Date)
                End If
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        Public Property PaymentStatusId As Integer
            Get
                If (Me.IsPaymentStatusIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(5),Integer)
                End If
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        Public Property Retrospective As Boolean
            Get
                Return CType(Me(6),Boolean)
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        Public Property Submitted As Boolean
            Get
                Return CType(Me(7),Boolean)
            End Get
            Set
                Me(7) = value
            End Set
        End Property
        
        Public Property PartyLinkId As Integer
            Get
                If (Me.IsPartyLinkIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(8),Integer)
                End If
            End Get
            Set
                Me(8) = value
            End Set
        End Property
        
        Public Property AgentLinkId As Integer
            Get
                If (Me.IsAgentLinkIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(9),Integer)
                End If
            End Get
            Set
                Me(9) = value
            End Set
        End Property
        
        Public Property CreatedBy As Integer
            Get
                If (Me.IsCreatedByNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(10),Integer)
                End If
            End Get
            Set
                Me(10) = value
            End Set
        End Property
        
        Public Property Validated As Boolean
            Get
                Return CType(Me(11),Boolean)
            End Get
            Set
                Me(11) = value
            End Set
        End Property
        
        Public Property RecievedDate As Date
            Get
                If (Me.IsRecievedDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(12),Date)
                End If
            End Get
            Set
                Me(12) = value
            End Set
        End Property
        
        Public Property CaseOfficerId As Integer
            Get
                If (Me.IsCaseOfficerIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(13),Integer)
                End If
            End Get
            Set
                Me(13) = value
            End Set
        End Property
        
        Public Property CustomerId As Integer
            Get
                If (Me.IsCustomerIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(14),Integer)
                End If
            End Get
            Set
                Me(14) = value
            End Set
        End Property
        
        Public Property PaymentBasketId As Integer
            Get
                If (Me.IsPaymentBasketIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(15),Integer)
                End If
            End Get
            Set
                Me(15) = value
            End Set
        End Property
        
        Public Property StandardFee As Decimal
            Get
                If (Me.IsStandardFeeNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(16),Decimal)
                End If
            End Get
            Set
                Me(16) = value
            End Set
        End Property
        
        Public Property FeeCharged As Decimal
            Get
                If (Me.IsFeeChargedNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(17),Decimal)
                End If
            End Get
            Set
                Me(17) = value
            End Set
        End Property
        
        Public Property ApplicationTypeId As Integer
            Get
                Return CType(Me(18),Integer)
            End Get
            Set
                Me(18) = value
            End Set
        End Property
        
        Public Property PaidDate As Date
            Get
                If (Me.IsPaidDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(19),Date)
                End If
            End Get
            Set
                Me(19) = value
            End Set
        End Property
        
        Public Property OwnerId As Decimal
            Get
                If (Me.IsOwnerIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(20),Decimal)
                End If
            End Get
            Set
                Me(20) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(21),Integer)
                End If
            End Get
            Set
                Me(21) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.ApplicationService
            Get
                Return CType(GetServiceObject(GetType(Service.ApplicationService)),Service.ApplicationService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsApplicationMethodIdNull() As Boolean
            Return Me.IsNull(3)
        End Function
        
        Public Sub SetApplicationMethodIdToNull()
            Me(3) = System.DBNull.Value
        End Sub
        
        Public Function IsCreatedDateNull() As Boolean
            Return Me.IsNull(4)
        End Function
        
        Public Sub SetCreatedDateToNull()
            Me(4) = System.DBNull.Value
        End Sub
        
        Public Function IsPaymentStatusIdNull() As Boolean
            Return Me.IsNull(5)
        End Function
        
        Public Sub SetPaymentStatusIdToNull()
            Me(5) = System.DBNull.Value
        End Sub
        
        Public Function IsPartyLinkIdNull() As Boolean
            Return Me.IsNull(8)
        End Function
        
        Public Sub SetPartyLinkIdToNull()
            Me(8) = System.DBNull.Value
        End Sub
        
        Public Function IsAgentLinkIdNull() As Boolean
            Return Me.IsNull(9)
        End Function
        
        Public Sub SetAgentLinkIdToNull()
            Me(9) = System.DBNull.Value
        End Sub
        
        Public Function IsCreatedByNull() As Boolean
            Return Me.IsNull(10)
        End Function
        
        Public Sub SetCreatedByToNull()
            Me(10) = System.DBNull.Value
        End Sub
        
        Public Function IsRecievedDateNull() As Boolean
            Return Me.IsNull(12)
        End Function
        
        Public Sub SetRecievedDateToNull()
            Me(12) = System.DBNull.Value
        End Sub
        
        Public Function IsCaseOfficerIdNull() As Boolean
            Return Me.IsNull(13)
        End Function
        
        Public Sub SetCaseOfficerIdToNull()
            Me(13) = System.DBNull.Value
        End Sub
        
        Public Function IsCustomerIdNull() As Boolean
            Return Me.IsNull(14)
        End Function
        
        Public Sub SetCustomerIdToNull()
            Me(14) = System.DBNull.Value
        End Sub
        
        Public Function IsPaymentBasketIdNull() As Boolean
            Return Me.IsNull(15)
        End Function
        
        Public Sub SetPaymentBasketIdToNull()
            Me(15) = System.DBNull.Value
        End Sub
        
        Public Function IsStandardFeeNull() As Boolean
            Return Me.IsNull(16)
        End Function
        
        Public Sub SetStandardFeeToNull()
            Me(16) = System.DBNull.Value
        End Sub
        
        Public Function IsFeeChargedNull() As Boolean
            Return Me.IsNull(17)
        End Function
        
        Public Sub SetFeeChargedToNull()
            Me(17) = System.DBNull.Value
        End Sub
        
        Public Function IsPaidDateNull() As Boolean
            Return Me.IsNull(19)
        End Function
        
        Public Sub SetPaidDateToNull()
            Me(19) = System.DBNull.Value
        End Sub
        
        Public Function IsOwnerIdNull() As Boolean
            Return Me.IsNull(20)
        End Function
        
        Public Sub SetOwnerIdToNull()
            Me(20) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(21)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(21) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(22)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.ApplicationSet
            Return ApplicationBase.GetAll(false, false, ApplicationServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.ApplicationSet
            Return ApplicationBase.GetAll(includeHyphen, false, ApplicationServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As ApplicationServiceBase.OrderBy) As EntitySet.ApplicationSet
            Dim service As Service.ApplicationService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As ApplicationServiceBase.OrderBy) As EntitySet.ApplicationSet
            Return ApplicationBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal applicationId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.Application
            Dim service As Service.ApplicationService
            service = ServiceObject
            Return service.GetById(ApplicationId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal applicationId As Integer) As Entity.Application
            Dim service As Service.ApplicationService
            service = ServiceObject
            Return service.GetById(ApplicationId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal applicationId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.ApplicationService
            service = ServiceObject
            Return service.DeleteById(applicationId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal applicationId As Integer) As Boolean
            Return ApplicationBase.DeleteById(applicationId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal applicationId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return ApplicationBase.DeleteById(applicationId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForPartyLinkIdPartyLink(ByVal partyLinkId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ApplicationSet
            Dim service As Service.ApplicationService
            service = ServiceObject
            Return service.GetForPartyLinkIdPartyLink(partyLinkId, tran)
        End Function
        
        Public Overloads Shared Function GetForPartyLinkIdPartyLink(ByVal partyLinkId As Integer) As EntitySet.ApplicationSet
            Return ApplicationBase.GetForPartyLinkIdPartyLink(partyLinkId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForAgentLinkIdPartyLink(ByVal partyLinkId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ApplicationSet
            Dim service As Service.ApplicationService
            service = ServiceObject
            Return service.GetForAgentLinkIdPartyLink(partyLinkId, tran)
        End Function
        
        Public Overloads Shared Function GetForAgentLinkIdPartyLink(ByVal partyLinkId As Integer) As EntitySet.ApplicationSet
            Return ApplicationBase.GetForAgentLinkIdPartyLink(partyLinkId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForPaymentBasket(ByVal paymentBasketId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ApplicationSet
            Dim service As Service.ApplicationService
            service = ServiceObject
            Return service.GetForPaymentBasket(paymentBasketId, tran)
        End Function
        
        Public Overloads Shared Function GetForPaymentBasket(ByVal paymentBasketId As Integer) As EntitySet.ApplicationSet
            Return ApplicationBase.GetForPaymentBasket(paymentBasketId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForApplicationType(ByVal applicationTypeId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ApplicationSet
            Dim service As Service.ApplicationService
            service = ServiceObject
            Return service.GetForApplicationType(applicationTypeId, tran)
        End Function
        
        Public Overloads Shared Function GetForApplicationType(ByVal applicationTypeId As Integer) As EntitySet.ApplicationSet
            Return ApplicationBase.GetForApplicationType(applicationTypeId, Nothing)
        End Function
        
        Public Overloads Function GetRelatedFeeReduction(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.FeeReductionSet
            Return Entity.FeeReduction.GetForApplication(Me.ApplicationId, tran)
        End Function
        
        Public Overloads Function GetRelatedFeeReduction() As EntitySet.FeeReductionSet
            Return Me.GetRelatedFeeReduction(Nothing)
        End Function
        
        Public Overloads Function GetRelatedPermit(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitSet
            Return Entity.Permit.GetForApplication(Me.ApplicationId, tran)
        End Function
        
        Public Overloads Function GetRelatedPermit() As EntitySet.PermitSet
            Return Me.GetRelatedPermit(Nothing)
        End Function
        
        Public Overloads Function GetRelatedRingApplication(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.RingApplicationSet
            Return Entity.RingApplication.GetForApplication(Me.ApplicationId, tran)
        End Function
        
        Public Overloads Function GetRelatedRingApplication() As EntitySet.RingApplicationSet
            Return Me.GetRelatedRingApplication(Nothing)
        End Function
        
        Public Overloads Function GetRelatedApplicationLetter(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ApplicationLetterSet
            Return Entity.ApplicationLetter.GetForApplication(Me.ApplicationId, tran)
        End Function
        
        Public Overloads Function GetRelatedApplicationLetter() As EntitySet.ApplicationLetterSet
            Return Me.GetRelatedApplicationLetter(Nothing)
        End Function
        
        Public Overloads Function GetRelatedApplicationNote(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ApplicationNoteSet
            Return Entity.ApplicationNote.GetForApplication(Me.ApplicationId, tran)
        End Function
        
        Public Overloads Function GetRelatedApplicationNote() As EntitySet.ApplicationNoteSet
            Return Me.GetRelatedApplicationNote(Nothing)
        End Function
        
        Public Overloads Function GetRelatedBirdNotification(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.BirdNotificationSet
            Return Entity.BirdNotification.GetForApplication(Me.ApplicationId, tran)
        End Function
        
        Public Overloads Function GetRelatedBirdNotification() As EntitySet.BirdNotificationSet
            Return Me.GetRelatedBirdNotification(Nothing)
        End Function
        
        Public Overloads Function GetRelatedCITESApplication(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CITESApplicationSet
            Return Entity.CITESApplication.GetForApplication(Me.ApplicationId, tran)
        End Function
        
        Public Overloads Function GetRelatedCITESApplication() As EntitySet.CITESApplicationSet
            Return Me.GetRelatedCITESApplication(Nothing)
        End Function
        
        Public Shared Function Insert( _
                    ByVal applicationDate As Date,  _
                    ByVal semiComplete As Boolean,  _
                    ByVal applicationMethodId As Object,  _
                    ByVal createdDate As Object,  _
                    ByVal paymentStatusId As Object,  _
                    ByVal retrospective As Boolean,  _
                    ByVal submitted As Boolean,  _
                    ByVal partyLinkId As Object,  _
                    ByVal agentLinkId As Object,  _
                    ByVal createdBy As Object,  _
                    ByVal validated As Boolean,  _
                    ByVal recievedDate As Object,  _
                    ByVal caseOfficerId As Object,  _
                    ByVal customerId As Object,  _
                    ByVal paymentBasketId As Object,  _
                    ByVal standardFee As Object,  _
                    ByVal feeCharged As Object,  _
                    ByVal applicationTypeId As Integer,  _
                    ByVal paidDate As Object,  _
                    ByVal ownerId As Object) As Entity.Application
            Return Entity.Application.ServiceObject.Insert(applicationDate, semiComplete, applicationMethodId, createdDate, paymentStatusId, retrospective, submitted, partyLinkId, agentLinkId, createdBy, validated, recievedDate, caseOfficerId, customerId, paymentBasketId, standardFee, feeCharged, applicationTypeId, paidDate, ownerId)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim applicationDateParam As Date = Me.ApplicationDate
            Dim semiCompleteParam As Boolean = Me.SemiComplete
            Dim applicationMethodIdParam As Object
            If (Me.IsApplicationMethodIdNull = false) Then
                applicationMethodIdParam = Me.ApplicationMethodId
            Else
                applicationMethodIdParam = System.DBNull.Value
            End If
            Dim createdDateParam As Object
            If (Me.IsCreatedDateNull = false) Then
                createdDateParam = Me.CreatedDate
            Else
                createdDateParam = System.DBNull.Value
            End If
            Dim paymentStatusIdParam As Object
            If (Me.IsPaymentStatusIdNull = false) Then
                paymentStatusIdParam = Me.PaymentStatusId
            Else
                paymentStatusIdParam = System.DBNull.Value
            End If
            Dim retrospectiveParam As Boolean = Me.Retrospective
            Dim submittedParam As Boolean = Me.Submitted
            Dim partyLinkIdParam As Object
            If (Me.IsPartyLinkIdNull = false) Then
                partyLinkIdParam = Me.PartyLinkId
            Else
                partyLinkIdParam = System.DBNull.Value
            End If
            Dim agentLinkIdParam As Object
            If (Me.IsAgentLinkIdNull = false) Then
                agentLinkIdParam = Me.AgentLinkId
            Else
                agentLinkIdParam = System.DBNull.Value
            End If
            Dim createdByParam As Object
            If (Me.IsCreatedByNull = false) Then
                createdByParam = Me.CreatedBy
            Else
                createdByParam = System.DBNull.Value
            End If
            Dim validatedParam As Boolean = Me.Validated
            Dim recievedDateParam As Object
            If (Me.IsRecievedDateNull = false) Then
                recievedDateParam = Me.RecievedDate
            Else
                recievedDateParam = System.DBNull.Value
            End If
            Dim caseOfficerIdParam As Object
            If (Me.IsCaseOfficerIdNull = false) Then
                caseOfficerIdParam = Me.CaseOfficerId
            Else
                caseOfficerIdParam = System.DBNull.Value
            End If
            Dim customerIdParam As Object
            If (Me.IsCustomerIdNull = false) Then
                customerIdParam = Me.CustomerId
            Else
                customerIdParam = System.DBNull.Value
            End If
            Dim paymentBasketIdParam As Object
            If (Me.IsPaymentBasketIdNull = false) Then
                paymentBasketIdParam = Me.PaymentBasketId
            Else
                paymentBasketIdParam = System.DBNull.Value
            End If
            Dim standardFeeParam As Object
            If (Me.IsStandardFeeNull = false) Then
                standardFeeParam = Me.StandardFee
            Else
                standardFeeParam = System.DBNull.Value
            End If
            Dim feeChargedParam As Object
            If (Me.IsFeeChargedNull = false) Then
                feeChargedParam = Me.FeeCharged
            Else
                feeChargedParam = System.DBNull.Value
            End If
            Dim applicationTypeIdParam As Integer = Me.ApplicationTypeId
            Dim paidDateParam As Object
            If (Me.IsPaidDateNull = false) Then
                paidDateParam = Me.PaidDate
            Else
                paidDateParam = System.DBNull.Value
            End If
            Dim ownerIdParam As Object
            If (Me.IsOwnerIdNull = false) Then
                ownerIdParam = Me.OwnerId
            Else
                ownerIdParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.Application.ServiceObject.Update(Me.Id, applicationDateParam, semiCompleteParam, applicationMethodIdParam, createdDateParam, paymentStatusIdParam, retrospectiveParam, submittedParam, partyLinkIdParam, agentLinkIdParam, createdByParam, validatedParam, recievedDateParam, caseOfficerIdParam, customerIdParam, paymentBasketIdParam, standardFeeParam, feeChargedParam, applicationTypeIdParam, paidDateParam, ownerIdParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
