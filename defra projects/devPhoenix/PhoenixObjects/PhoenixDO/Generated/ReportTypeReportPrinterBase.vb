'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'ReportTypeReportPrinter'
    '*DO NOT* modify this file.
    'Add new properties and methods to ReportTypeReportPrinter instead.
    Public MustInherit Class ReportTypeReportPrinterBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal reportTypeId As Integer, ByVal reportPrinterId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(reportTypeId, reportPrinterId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal reportTypeId As Integer, ByVal reportPrinterId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(reportTypeId, reportPrinterId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property ReportTypeId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Property ReportPrinterId As Integer
            Get
                Return CType(Me(1),Integer)
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(2),Integer)
                End If
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.ReportTypeReportPrinterService
            Get
                Return CType(GetServiceObject(GetType(Service.ReportTypeReportPrinterService)),Service.ReportTypeReportPrinterService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(2)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(2) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(3)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.ReportTypeReportPrinterSet
            Return ReportTypeReportPrinterBase.GetAll(false, false, ReportTypeReportPrinterServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.ReportTypeReportPrinterSet
            Return ReportTypeReportPrinterBase.GetAll(includeHyphen, false, ReportTypeReportPrinterServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As ReportTypeReportPrinterServiceBase.OrderBy) As EntitySet.ReportTypeReportPrinterSet
            Dim service As Service.ReportTypeReportPrinterService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As ReportTypeReportPrinterServiceBase.OrderBy) As EntitySet.ReportTypeReportPrinterSet
            Return ReportTypeReportPrinterBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal reportTypeId As Integer, ByVal reportPrinterId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.ReportTypeReportPrinter
            Dim service As Service.ReportTypeReportPrinterService
            service = ServiceObject
            Return service.GetById(New Integer() {reportTypeId, reportPrinterId}, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal reportTypeId As Integer, ByVal reportPrinterId As Integer) As Entity.ReportTypeReportPrinter
            Dim service As Service.ReportTypeReportPrinterService
            service = ServiceObject
            Return service.GetById(New Integer() {reportTypeId, reportPrinterId})
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal reportTypeId As Integer, ByVal reportPrinterId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.ReportTypeReportPrinterService
            service = ServiceObject
            Return service.DeleteById(New Integer() {reportTypeId, reportPrinterId}, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal reportTypeId As Integer, ByVal reportPrinterId As Integer) As Boolean
            Return ReportTypeReportPrinterBase.DeleteById(reportTypeId, reportPrinterId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal reportTypeId As Integer, ByVal reportPrinterId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return ReportTypeReportPrinterBase.DeleteById(reportTypeId, reportPrinterId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForReportType(ByVal reportTypeId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ReportTypeReportPrinterSet
            Dim service As Service.ReportTypeReportPrinterService
            service = ServiceObject
            Return service.GetForReportType(reportTypeId, tran)
        End Function
        
        Public Overloads Shared Function GetForReportType(ByVal reportTypeId As Integer) As EntitySet.ReportTypeReportPrinterSet
            Return ReportTypeReportPrinterBase.GetForReportType(reportTypeId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForReportPrinter(ByVal reportPrinterId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ReportTypeReportPrinterSet
            Dim service As Service.ReportTypeReportPrinterService
            service = ServiceObject
            Return service.GetForReportPrinter(reportPrinterId, tran)
        End Function
        
        Public Overloads Shared Function GetForReportPrinter(ByVal reportPrinterId As Integer) As EntitySet.ReportTypeReportPrinterSet
            Return ReportTypeReportPrinterBase.GetForReportPrinter(reportPrinterId, Nothing)
        End Function
        
        Public Shared Sub Insert(ByVal reportTypeId As Integer, ByVal reportPrinterId As Integer)
            Entity.ReportTypeReportPrinter.ServiceObject.Insert(reportTypeId, reportPrinterId)
        End Sub
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim reportTypeIdParam As Integer = Me.ReportTypeId
            Dim reportPrinterIdParam As Integer = Me.ReportPrinterId
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.ReportTypeReportPrinter.ServiceObject.Update(reportTypeIdParam, reportPrinterIdParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
