'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'PermitApplicationLetter'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class PermitApplicationLetterServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.PermitApplicationLetterSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.PermitApplicationLetterSet
            Return CType(MyBase.GetAll("eosp_SelectPermitApplicationLetter", GetType(EntitySet.PermitApplicationLetterSet), includeHyphen, includeInactive, orderBy),EntitySet.PermitApplicationLetterSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.PermitApplicationLetterSet
            Return Me.GetAll(includeHyphen, includeInactive, PermitApplicationLetterServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, PermitApplicationLetterServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.PermitApplicationLetterSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal permitApplicationLetterId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectPermitApplicationLetter", "PermitApplicationLetterId", permitApplicationLetterId, GetType(EntitySet.PermitApplicationLetterSet), tran),Entity.PermitApplicationLetter)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal permitApplicationLetterId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(permitApplicationLetterId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal permitApplicationLetterId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.PermitApplicationLetter
            Return CType(MyBase.GetById("eosp_SelectPermitApplicationLetter", "PermitApplicationLetterId", permitApplicationLetterId, GetType(EntitySet.PermitApplicationLetterSet), tran),Entity.PermitApplicationLetter)
        End Function
        
        Public Overloads Function GetById(ByVal permitApplicationLetterId As Integer) As Entity.PermitApplicationLetter
            Return Me.GetById(permitApplicationLetterId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal permitApplicationLetterId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(permitApplicationLetterId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal permitApplicationLetterId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeletePermitApplicationLetter", "PermitApplicationLetterId", permitApplicationLetterId, checkSum, transaction)
        End Function
        
        'GetForApplicationLetter - links to the ApplicationLetter table...
        Public Overloads Function GetForApplicationLetter(ByVal ApplicationLetterId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitApplicationLetterSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitApplicationLetter where Appli"& _ 
"cationLetterId=" + ApplicationLetterId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitApplicationLetterSet), tran),EntitySet.PermitApplicationLetterSet)
        End Function
        
        'GetForApplicationLetter - links to the ApplicationLetter table...
        Public Overloads Function GetForApplicationLetter(ByVal ApplicationLetterId As Integer) As EntitySet.PermitApplicationLetterSet
            Return Me.GetForApplicationLetter(ApplicationLetterId, Nothing)
        End Function
        
        'GetForPermit - links to the Permit table...
        Public Overloads Function GetForPermit(ByVal PermitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitApplicationLetterSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitApplicationLetter where Permi"& _ 
"tId=" + PermitId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitApplicationLetterSet), tran),EntitySet.PermitApplicationLetterSet)
        End Function
        
        'GetForPermit - links to the Permit table...
        Public Overloads Function GetForPermit(ByVal PermitId As Integer) As EntitySet.PermitApplicationLetterSet
            Return Me.GetForPermit(PermitId, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal applicationLetterId As Object, ByVal permitId As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitApplicationLetter
            Return Me.GetById(Sprocs.eosp_CreatePermitApplicationLetter(applicationLetterId, permitId, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal applicationLetterId As Object, ByVal permitId As Object) As Entity.PermitApplicationLetter
            Return Me.Insert(applicationLetterId, permitId, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal permitApplicationLetter As Entity.PermitApplicationLetter) As Entity.PermitApplicationLetter
            Return Me.Insert(permitApplicationLetter(1), permitApplicationLetter(2))
        End Function
        
        Public Overloads Function Insert(ByVal permitApplicationLetter As Entity.PermitApplicationLetter, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitApplicationLetter
            Return Me.Insert(permitApplicationLetter(1), permitApplicationLetter(2), transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal applicationLetterId As Object, ByVal permitId As Object, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitApplicationLetter
            Return Sprocs.eosp_UpdatePermitApplicationLetter(id, applicationLetterId, permitId, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal applicationLetterId As Object, ByVal permitId As Object) As Entity.PermitApplicationLetter
            Return Me.Update(id, applicationLetterId, permitId, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal applicationLetterId As Object, ByVal permitId As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitApplicationLetter
            Return Me.Update(id, applicationLetterId, permitId, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal applicationLetterId As Object, ByVal permitId As Object, ByVal checkSum As Integer) As Entity.PermitApplicationLetter
            Return Me.Update(id, applicationLetterId, permitId, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal permitApplicationLetter As Entity.PermitApplicationLetter) As Entity.PermitApplicationLetter
            Return Me.Update(permitApplicationLetter.id, permitApplicationLetter(1), permitApplicationLetter(2))
        End Function
        
        Public Overloads Function Update(ByVal permitApplicationLetter As Entity.PermitApplicationLetter, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitApplicationLetter
            Return Me.Update(permitApplicationLetter.id, permitApplicationLetter(1), permitApplicationLetter(2), transaction)
        End Function
        
        Public Overloads Function Update(ByVal permitApplicationLetter As Entity.PermitApplicationLetter, ByVal checkSum As Integer) As Entity.PermitApplicationLetter
            Return Me.Update(permitApplicationLetter.id, permitApplicationLetter(1), permitApplicationLetter(2), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal permitApplicationLetter As Entity.PermitApplicationLetter, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitApplicationLetter
            Return Me.Update(permitApplicationLetter.id, permitApplicationLetter(1), permitApplicationLetter(2), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_UQ__PermitApplicatio__5AB9788F(ByVal permitApplicationLetterId As Integer, ByVal applicationLetterId As Integer, ByVal permitId As Integer) As EntitySet.PermitApplicationLetterSet
            Return Sprocs.eosp_SelectPermitApplicationLetter(permitApplicationLetterId:=Nothing, Index_PermitApplicationLetterId:=[permitApplicationLetterId], Index_ApplicationLetterId:=[applicationLetterId], Index_PermitId:=[permitId], transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_UQ__PermitApplicatio__5AB9788F(ByVal permitApplicationLetterId As Integer, ByVal applicationLetterId As Integer, ByVal permitId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitApplicationLetterSet
            Return Sprocs.eosp_SelectPermitApplicationLetter(permitApplicationLetterId:=Nothing, Index_PermitApplicationLetterId:=[permitApplicationLetterId], Index_ApplicationLetterId:=[applicationLetterId], Index_PermitId:=[permitId], sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            UQ__PermitApplicatio__5AB9788F
            
            
        End Enum
    End Class
End Namespace
