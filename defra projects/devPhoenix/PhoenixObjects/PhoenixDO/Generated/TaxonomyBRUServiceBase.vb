'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'TaxonomyBRU'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class TaxonomyBRUServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.TaxonomyBRUSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.TaxonomyBRUSet
            Return CType(MyBase.GetAll("eosp_SelectTaxonomyBRU", GetType(EntitySet.TaxonomyBRUSet), includeHyphen, includeInactive, orderBy),EntitySet.TaxonomyBRUSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.TaxonomyBRUSet
            Return Me.GetAll(includeHyphen, includeInactive, TaxonomyBRUServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, TaxonomyBRUServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.TaxonomyBRUSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal bRUID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectTaxonomyBRU", "BRUID", bRUID, GetType(EntitySet.TaxonomyBRUSet), tran),Entity.TaxonomyBRU)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal bRUID As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(bRUID, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal bRUID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyBRU
            Return CType(MyBase.GetById("eosp_SelectTaxonomyBRU", "BRUID", bRUID, GetType(EntitySet.TaxonomyBRUSet), tran),Entity.TaxonomyBRU)
        End Function
        
        Public Overloads Function GetById(ByVal bRUID As Integer) As Entity.TaxonomyBRU
            Return Me.GetById(bRUID, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal bRUID As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(bRUID, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal bRUID As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteTaxonomyBRU", "BRUID", bRUID, checkSum, transaction)
        End Function
        
        'GetForTaxonomyBRU - links to the TaxonomyBRU table...
        Public Overloads Function GetForTaxonomyBRU(ByVal BRUID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.TaxonomyBRUSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from TaxonomyBRU where Id=" + BRUID.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.TaxonomyBRUSet), tran),EntitySet.TaxonomyBRUSet)
        End Function
        
        'GetForTaxonomyBRU - links to the TaxonomyBRU table...
        Public Overloads Function GetForTaxonomyBRU(ByVal BRUID As Integer) As EntitySet.TaxonomyBRUSet
            Return Me.GetForTaxonomyBRU(BRUID, Nothing)
        End Function
        
        'GetForCountry - links to the Country table...
        Public Overloads Function GetForCountry(ByVal CountryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.TaxonomyBRUSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from TaxonomyBRU where CountryID=" + CountryId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.TaxonomyBRUSet), tran),EntitySet.TaxonomyBRUSet)
        End Function
        
        'GetForCountry - links to the Country table...
        Public Overloads Function GetForCountry(ByVal CountryId As Integer) As EntitySet.TaxonomyBRUSet
            Return Me.GetForCountry(CountryId, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal bRUID As Integer, ByVal wCMCName As Object, ByVal level3Name As Object, ByVal level4Code As Object, ByVal level4Name As Object, ByVal countryID As Integer, ByVal valid As Boolean, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyBRU
            Return Me.GetById(Sprocs.eosp_CreateTaxonomyBRU(bRUID, wCMCName, level3Name, level4Code, level4Name, countryID, valid, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal bRUID As Integer, ByVal wCMCName As Object, ByVal level3Name As Object, ByVal level4Code As Object, ByVal level4Name As Object, ByVal countryID As Integer, ByVal valid As Boolean) As Entity.TaxonomyBRU
            Return Me.Insert(bRUID, wCMCName, level3Name, level4Code, level4Name, countryID, valid, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal taxonomyBRU As Entity.TaxonomyBRU) As Entity.TaxonomyBRU
            Return Me.Insert(taxonomyBRU(0), taxonomyBRU(1), taxonomyBRU(2), taxonomyBRU(3), taxonomyBRU(4), taxonomyBRU(5), taxonomyBRU(6))
        End Function
        
        Public Overloads Function Insert(ByVal taxonomyBRU As Entity.TaxonomyBRU, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyBRU
            Return Me.Insert(taxonomyBRU(0), taxonomyBRU(1), taxonomyBRU(2), taxonomyBRU(3), taxonomyBRU(4), taxonomyBRU(5), taxonomyBRU(6), transaction)
        End Function
        
        Public Overloads Function Update(ByVal bRUID As Integer, ByVal wCMCName As Object, ByVal level3Name As Object, ByVal level4Code As Object, ByVal level4Name As Object, ByVal countryID As Integer, ByVal valid As Boolean, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyBRU
            Return Sprocs.eosp_UpdateTaxonomyBRU(bRUID, wCMCName, level3Name, level4Code, level4Name, countryID, valid, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal bRUID As Integer, ByVal wCMCName As Object, ByVal level3Name As Object, ByVal level4Code As Object, ByVal level4Name As Object, ByVal countryID As Integer, ByVal valid As Boolean) As Entity.TaxonomyBRU
            Return Me.Update(bRUID, wCMCName, level3Name, level4Code, level4Name, countryID, valid, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal bRUID As Integer, ByVal wCMCName As Object, ByVal level3Name As Object, ByVal level4Code As Object, ByVal level4Name As Object, ByVal countryID As Integer, ByVal valid As Boolean, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyBRU
            Return Me.Update(bRUID, wCMCName, level3Name, level4Code, level4Name, countryID, valid, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal bRUID As Integer, ByVal wCMCName As Object, ByVal level3Name As Object, ByVal level4Code As Object, ByVal level4Name As Object, ByVal countryID As Integer, ByVal valid As Boolean, ByVal checkSum As Integer) As Entity.TaxonomyBRU
            Return Me.Update(bRUID, wCMCName, level3Name, level4Code, level4Name, countryID, valid, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal taxonomyBRU As Entity.TaxonomyBRU) As Entity.TaxonomyBRU
            Return Me.Update(taxonomyBRU(0), taxonomyBRU(1), taxonomyBRU(2), taxonomyBRU(3), taxonomyBRU(4), taxonomyBRU(5), taxonomyBRU(6))
        End Function
        
        Public Overloads Function Update(ByVal taxonomyBRU As Entity.TaxonomyBRU, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyBRU
            Return Me.Update(taxonomyBRU(0), taxonomyBRU(1), taxonomyBRU(2), taxonomyBRU(3), taxonomyBRU(4), taxonomyBRU(5), taxonomyBRU(6), transaction)
        End Function
        
        Public Overloads Function Update(ByVal taxonomyBRU As Entity.TaxonomyBRU, ByVal checkSum As Integer) As Entity.TaxonomyBRU
            Return Me.Update(taxonomyBRU(0), taxonomyBRU(1), taxonomyBRU(2), taxonomyBRU(3), taxonomyBRU(4), taxonomyBRU(5), taxonomyBRU(6), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal taxonomyBRU As Entity.TaxonomyBRU, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyBRU
            Return Me.Update(taxonomyBRU(0), taxonomyBRU(1), taxonomyBRU(2), taxonomyBRU(3), taxonomyBRU(4), taxonomyBRU(5), taxonomyBRU(6), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_TaxonomyBRU(ByVal countryID As Integer) As EntitySet.TaxonomyBRUSet
            Return Sprocs.eosp_SelectTaxonomyBRU(bRUID:=Nothing, Index_CountryID:=[countryID], transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_TaxonomyBRU(ByVal countryID As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.TaxonomyBRUSet
            Return Sprocs.eosp_SelectTaxonomyBRU(bRUID:=Nothing, Index_CountryID:=[countryID], sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            IX_TaxonomyBRU
            
            
        End Enum
    End Class
End Namespace
