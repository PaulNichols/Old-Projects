'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'PermitNote'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class PermitNoteServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.PermitNoteSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.PermitNoteSet
            Return CType(MyBase.GetAll("eosp_SelectPermitNote", GetType(EntitySet.PermitNoteSet), includeHyphen, includeInactive, orderBy),EntitySet.PermitNoteSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.PermitNoteSet
            Return Me.GetAll(includeHyphen, includeInactive, PermitNoteServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, PermitNoteServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.PermitNoteSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Function GetById(ByVal idColumns() As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.PermitNote
            Return CType(MyBase.GetById("eosp_SelectPermitNote", New String() {"ApplicationId", "NoteId", "PermitId"}, idColumns, GetType(EntitySet.PermitNoteSet), tran),Entity.PermitNote)
        End Function
        
        Public Overloads Function GetById(ByVal idColumns() As Integer) As Entity.PermitNote
            Return Me.GetById(idColumns, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal idColumns() As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(idColumns, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal idColumns() As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeletePermitNote", New String() {"ApplicationId", "NoteId", "PermitId"}, idColumns, checkSum, transaction)
        End Function
        
        'GetForApplicationIdApplicationNote - links to the ApplicationNote table...
        Public Overloads Function GetForApplicationIdApplicationNote(ByVal ApplicationId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitNoteSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitNote where ApplicationId=" + ApplicationId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitNoteSet), tran),EntitySet.PermitNoteSet)
        End Function
        
        'GetForApplicationIdApplicationNote - links to the ApplicationNote table...
        Public Overloads Function GetForApplicationIdApplicationNote(ByVal ApplicationId As Integer) As EntitySet.PermitNoteSet
            Return Me.GetForApplicationIdApplicationNote(ApplicationId, Nothing)
        End Function
        
        'GetForNoteIdApplicationNote - links to the ApplicationNote table...
        Public Overloads Function GetForNoteIdApplicationNote(ByVal NoteId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitNoteSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitNote where NoteId=" + NoteId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitNoteSet), tran),EntitySet.PermitNoteSet)
        End Function
        
        'GetForNoteIdApplicationNote - links to the ApplicationNote table...
        Public Overloads Function GetForNoteIdApplicationNote(ByVal NoteId As Integer) As EntitySet.PermitNoteSet
            Return Me.GetForNoteIdApplicationNote(NoteId, Nothing)
        End Function
        
        'GetForPermit - links to the Permit table...
        Public Overloads Function GetForPermit(ByVal PermitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitNoteSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitNote where PermitId=" + PermitId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitNoteSet), tran),EntitySet.PermitNoteSet)
        End Function
        
        'GetForPermit - links to the Permit table...
        Public Overloads Function GetForPermit(ByVal PermitId As Integer) As EntitySet.PermitNoteSet
            Return Me.GetForPermit(PermitId, Nothing)
        End Function
        
        Public Overloads Sub Insert(ByVal applicationId As Integer, ByVal noteId As Integer, ByVal permitId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction)
            Sprocs.eosp_CreatePermitNote(applicationId, noteId, permitId, transaction)
        End Sub
        
        Public Overloads Sub Insert(ByVal applicationId As Integer, ByVal noteId As Integer, ByVal permitId As Integer)
            Me.Insert(applicationId, noteId, permitId, Nothing)
        End Sub
        
        Public Overloads Sub Insert(ByVal permitNote As Entity.PermitNote)
            Me.Insert(permitNote(0), permitNote(1), permitNote(2))
        End Sub
        
        Public Overloads Sub Insert(ByVal permitNote As Entity.PermitNote, ByVal transaction As System.Data.SqlClient.SqlTransaction)
            Me.Insert(permitNote(0), permitNote(1), permitNote(2), transaction)
        End Sub
        
        Public Overloads Function Update(ByVal applicationId As Integer, ByVal noteId As Integer, ByVal permitId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitNote
            Return Sprocs.eosp_UpdatePermitNote(applicationId, noteId, permitId, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal applicationId As Integer, ByVal noteId As Integer, ByVal permitId As Integer) As Entity.PermitNote
            Return Me.Update(applicationId, noteId, permitId, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal applicationId As Integer, ByVal noteId As Integer, ByVal permitId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitNote
            Return Me.Update(applicationId, noteId, permitId, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal applicationId As Integer, ByVal noteId As Integer, ByVal permitId As Integer, ByVal checkSum As Integer) As Entity.PermitNote
            Return Me.Update(applicationId, noteId, permitId, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal permitNote As Entity.PermitNote) As Entity.PermitNote
            Return Me.Update(permitNote(0), permitNote(1), permitNote(2))
        End Function
        
        Public Overloads Function Update(ByVal permitNote As Entity.PermitNote, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitNote
            Return Me.Update(permitNote(0), permitNote(1), permitNote(2), transaction)
        End Function
        
        Public Overloads Function Update(ByVal permitNote As Entity.PermitNote, ByVal checkSum As Integer) As Entity.PermitNote
            Return Me.Update(permitNote(0), permitNote(1), permitNote(2), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal permitNote As Entity.PermitNote, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitNote
            Return Me.Update(permitNote(0), permitNote(1), permitNote(2), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_PermitNote(ByVal noteId As Integer, ByVal permitId As Integer) As EntitySet.PermitNoteSet
            Return Sprocs.eosp_SelectPermitNote(applicationId:=Nothing, noteId:=Nothing, permitId:=Nothing, Index_NoteId:=[noteId], Index_PermitId:=[permitId], Index_ApplicationId:=Nothing, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_PermitNote(ByVal noteId As Integer, ByVal permitId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitNoteSet
            Return Sprocs.eosp_SelectPermitNote(applicationId:=Nothing, noteId:=Nothing, permitId:=Nothing, Index_NoteId:=[noteId], Index_PermitId:=[permitId], Index_ApplicationId:=Nothing, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_PermitNote_1(ByVal noteId As Integer) As EntitySet.PermitNoteSet
            Return Sprocs.eosp_SelectPermitNote(applicationId:=Nothing, noteId:=Nothing, permitId:=Nothing, Index_NoteId:=[noteId], Index_PermitId:=Nothing, Index_ApplicationId:=Nothing, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_PermitNote_1(ByVal noteId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitNoteSet
            Return Sprocs.eosp_SelectPermitNote(applicationId:=Nothing, noteId:=Nothing, permitId:=Nothing, Index_NoteId:=[noteId], Index_PermitId:=Nothing, Index_ApplicationId:=Nothing, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_PermitNote_2(ByVal applicationId As Integer, ByVal permitId As Integer) As EntitySet.PermitNoteSet
            Return Sprocs.eosp_SelectPermitNote(applicationId:=Nothing, noteId:=Nothing, permitId:=Nothing, Index_ApplicationId:=[applicationId], Index_PermitId:=[permitId], Index_NoteId:=Nothing, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_PermitNote_2(ByVal applicationId As Integer, ByVal permitId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitNoteSet
            Return Sprocs.eosp_SelectPermitNote(applicationId:=Nothing, noteId:=Nothing, permitId:=Nothing, Index_ApplicationId:=[applicationId], Index_PermitId:=[permitId], Index_NoteId:=Nothing, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            IX_PermitNote
            
            IX_PermitNote_1
            
            IX_PermitNote_2
            
            
        End Enum
    End Class
End Namespace
