'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'TaxonomyLegislationName'
    '*DO NOT* modify this file.
    'Add new properties and methods to TaxonomyLegislationName instead.
    Public MustInherit Class TaxonomyLegislationNameBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal legislationNameID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(legislationNameID, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal legislationNameID As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(legislationNameID).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property LegislationNameID As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property LegislationShortName As String
            Get
                If (Me.IsLegislationShortNameNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(1),String)
                End If
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(250)>  _
        Public Property LegislationLongName As String
            Get
                If (Me.IsLegislationLongNameNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(2),String)
                End If
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(1)>  _
        Public Property LegislationLevel As String
            Get
                If (Me.IsLegislationLevelNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(3),String)
                End If
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        Public Property LegislationDateAdopted As Date
            Get
                If (Me.IsLegislationDateAdoptedNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(4),Date)
                End If
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        Public Property LegislationDateEnforced As Date
            Get
                If (Me.IsLegislationDateEnforcedNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(5),Date)
                End If
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(100)>  _
        Public Property LegislationURL As String
            Get
                If (Me.IsLegislationURLNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(6),String)
                End If
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(1)>  _
        Public Property LegislationNameStatus As String
            Get
                If (Me.IsLegislationNameStatusNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(7),String)
                End If
            End Get
            Set
                Me(7) = value
            End Set
        End Property
        
        Public Property Note As String
            Get
                If (Me.IsNoteNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(8),String)
                End If
            End Get
            Set
                Me(8) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(9),Integer)
                End If
            End Get
            Set
                Me(9) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.TaxonomyLegislationNameService
            Get
                Return CType(GetServiceObject(GetType(Service.TaxonomyLegislationNameService)),Service.TaxonomyLegislationNameService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsLegislationShortNameNull() As Boolean
            Return Me.IsNull(1)
        End Function
        
        Public Sub SetLegislationShortNameToNull()
            Me(1) = System.DBNull.Value
        End Sub
        
        Public Function IsLegislationLongNameNull() As Boolean
            Return Me.IsNull(2)
        End Function
        
        Public Sub SetLegislationLongNameToNull()
            Me(2) = System.DBNull.Value
        End Sub
        
        Public Function IsLegislationLevelNull() As Boolean
            Return Me.IsNull(3)
        End Function
        
        Public Sub SetLegislationLevelToNull()
            Me(3) = System.DBNull.Value
        End Sub
        
        Public Function IsLegislationDateAdoptedNull() As Boolean
            Return Me.IsNull(4)
        End Function
        
        Public Sub SetLegislationDateAdoptedToNull()
            Me(4) = System.DBNull.Value
        End Sub
        
        Public Function IsLegislationDateEnforcedNull() As Boolean
            Return Me.IsNull(5)
        End Function
        
        Public Sub SetLegislationDateEnforcedToNull()
            Me(5) = System.DBNull.Value
        End Sub
        
        Public Function IsLegislationURLNull() As Boolean
            Return Me.IsNull(6)
        End Function
        
        Public Sub SetLegislationURLToNull()
            Me(6) = System.DBNull.Value
        End Sub
        
        Public Function IsLegislationNameStatusNull() As Boolean
            Return Me.IsNull(7)
        End Function
        
        Public Sub SetLegislationNameStatusToNull()
            Me(7) = System.DBNull.Value
        End Sub
        
        Public Function IsNoteNull() As Boolean
            Return Me.IsNull(8)
        End Function
        
        Public Sub SetNoteToNull()
            Me(8) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(9)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(9) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(10)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.TaxonomyLegislationNameSet
            Return TaxonomyLegislationNameBase.GetAll(false, false, TaxonomyLegislationNameServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.TaxonomyLegislationNameSet
            Return TaxonomyLegislationNameBase.GetAll(includeHyphen, false, TaxonomyLegislationNameServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As TaxonomyLegislationNameServiceBase.OrderBy) As EntitySet.TaxonomyLegislationNameSet
            Dim service As Service.TaxonomyLegislationNameService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As TaxonomyLegislationNameServiceBase.OrderBy) As EntitySet.TaxonomyLegislationNameSet
            Return TaxonomyLegislationNameBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal legislationNameID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyLegislationName
            Dim service As Service.TaxonomyLegislationNameService
            service = ServiceObject
            Return service.GetById(LegislationNameID, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal legislationNameID As Integer) As Entity.TaxonomyLegislationName
            Dim service As Service.TaxonomyLegislationNameService
            service = ServiceObject
            Return service.GetById(LegislationNameID)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal legislationNameID As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.TaxonomyLegislationNameService
            service = ServiceObject
            Return service.DeleteById(legislationNameID, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal legislationNameID As Integer) As Boolean
            Return TaxonomyLegislationNameBase.DeleteById(legislationNameID, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal legislationNameID As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return TaxonomyLegislationNameBase.DeleteById(legislationNameID, 0, transaction)
        End Function
        
        Public Overloads Function GetRelatedTaxonomyLegislation(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.TaxonomyLegislationSet
            Return Entity.TaxonomyLegislation.GetForTaxonomyLegislationName(Me.LegislationNameID, tran)
        End Function
        
        Public Overloads Function GetRelatedTaxonomyLegislation() As EntitySet.TaxonomyLegislationSet
            Return Me.GetRelatedTaxonomyLegislation(Nothing)
        End Function
        
        Public Overloads Function GetRelatedTaxonomyPermittedListingValue(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.TaxonomyPermittedListingValueSet
            Return Entity.TaxonomyPermittedListingValue.GetForTaxonomyLegislationName(Me.LegislationNameID, tran)
        End Function
        
        Public Overloads Function GetRelatedTaxonomyPermittedListingValue() As EntitySet.TaxonomyPermittedListingValueSet
            Return Me.GetRelatedTaxonomyPermittedListingValue(Nothing)
        End Function
        
        Public Shared Sub Insert(ByVal legislationNameID As Integer, ByVal legislationShortName As Object, ByVal legislationLongName As Object, ByVal legislationLevel As Object, ByVal legislationDateAdopted As Object, ByVal legislationDateEnforced As Object, ByVal legislationURL As Object, ByVal legislationNameStatus As Object, ByVal note As Object)
            Entity.TaxonomyLegislationName.ServiceObject.Insert(legislationNameID, legislationShortName, legislationLongName, legislationLevel, legislationDateAdopted, legislationDateEnforced, legislationURL, legislationNameStatus, note)
        End Sub
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim legislationShortNameParam As Object
            If (Me.IsLegislationShortNameNull = false) Then
                legislationShortNameParam = EnterpriseObjects.Common.ParseSQLText(Me.LegislationShortName)
            Else
                legislationShortNameParam = System.DBNull.Value
            End If
            Dim legislationLongNameParam As Object
            If (Me.IsLegislationLongNameNull = false) Then
                legislationLongNameParam = EnterpriseObjects.Common.ParseSQLText(Me.LegislationLongName)
            Else
                legislationLongNameParam = System.DBNull.Value
            End If
            Dim legislationLevelParam As Object
            If (Me.IsLegislationLevelNull = false) Then
                legislationLevelParam = Me.LegislationLevel
            Else
                legislationLevelParam = System.DBNull.Value
            End If
            Dim legislationDateAdoptedParam As Object
            If (Me.IsLegislationDateAdoptedNull = false) Then
                legislationDateAdoptedParam = Me.LegislationDateAdopted
            Else
                legislationDateAdoptedParam = System.DBNull.Value
            End If
            Dim legislationDateEnforcedParam As Object
            If (Me.IsLegislationDateEnforcedNull = false) Then
                legislationDateEnforcedParam = Me.LegislationDateEnforced
            Else
                legislationDateEnforcedParam = System.DBNull.Value
            End If
            Dim legislationURLParam As Object
            If (Me.IsLegislationURLNull = false) Then
                legislationURLParam = EnterpriseObjects.Common.ParseSQLText(Me.LegislationURL)
            Else
                legislationURLParam = System.DBNull.Value
            End If
            Dim legislationNameStatusParam As Object
            If (Me.IsLegislationNameStatusNull = false) Then
                legislationNameStatusParam = Me.LegislationNameStatus
            Else
                legislationNameStatusParam = System.DBNull.Value
            End If
            Dim noteParam As Object
            If (Me.IsNoteNull = false) Then
                noteParam = Me.Note
            Else
                noteParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.TaxonomyLegislationName.ServiceObject.Update(Me.Id, legislationShortNameParam, legislationLongNameParam, legislationLevelParam, legislationDateAdoptedParam, legislationDateEnforcedParam, legislationURLParam, legislationNameStatusParam, noteParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
