'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'PrintDuplicate'
    '*DO NOT* modify this file.
    'Add new properties and methods to PrintDuplicate instead.
    Public MustInherit Class PrintDuplicateBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal printDuplicateId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(printDuplicateId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal printDuplicateId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(printDuplicateId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property PrintDuplicateId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Property [Date] As Date
            Get
                If (Me.IsDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(1),Date)
                End If
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        Public Property AuthorisedDate As Date
            Get
                Return CType(Me(2),Date)
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        Public Property AuthorisedUserId As Decimal
            Get
                If (Me.IsAuthorisedUserIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(3),Decimal)
                End If
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        Public Property PermitId As Integer
            Get
                If (Me.IsPermitIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(4),Integer)
                End If
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        Public Property DuplicateReasonId As Integer
            Get
                If (Me.IsDuplicateReasonIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(5),Integer)
                End If
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(6),Integer)
                End If
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.PrintDuplicateService
            Get
                Return CType(GetServiceObject(GetType(Service.PrintDuplicateService)),Service.PrintDuplicateService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsDateNull() As Boolean
            Return Me.IsNull(1)
        End Function
        
        Public Sub SetDateToNull()
            Me(1) = System.DBNull.Value
        End Sub
        
        Public Function IsAuthorisedUserIdNull() As Boolean
            Return Me.IsNull(3)
        End Function
        
        Public Sub SetAuthorisedUserIdToNull()
            Me(3) = System.DBNull.Value
        End Sub
        
        Public Function IsPermitIdNull() As Boolean
            Return Me.IsNull(4)
        End Function
        
        Public Sub SetPermitIdToNull()
            Me(4) = System.DBNull.Value
        End Sub
        
        Public Function IsDuplicateReasonIdNull() As Boolean
            Return Me.IsNull(5)
        End Function
        
        Public Sub SetDuplicateReasonIdToNull()
            Me(5) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(6)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(6) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(7)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.PrintDuplicateSet
            Return PrintDuplicateBase.GetAll(false, false, PrintDuplicateServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.PrintDuplicateSet
            Return PrintDuplicateBase.GetAll(includeHyphen, false, PrintDuplicateServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As PrintDuplicateServiceBase.OrderBy) As EntitySet.PrintDuplicateSet
            Dim service As Service.PrintDuplicateService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As PrintDuplicateServiceBase.OrderBy) As EntitySet.PrintDuplicateSet
            Return PrintDuplicateBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal printDuplicateId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.PrintDuplicate
            Dim service As Service.PrintDuplicateService
            service = ServiceObject
            Return service.GetById(PrintDuplicateId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal printDuplicateId As Integer) As Entity.PrintDuplicate
            Dim service As Service.PrintDuplicateService
            service = ServiceObject
            Return service.GetById(PrintDuplicateId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal printDuplicateId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.PrintDuplicateService
            service = ServiceObject
            Return service.DeleteById(printDuplicateId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal printDuplicateId As Integer) As Boolean
            Return PrintDuplicateBase.DeleteById(printDuplicateId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal printDuplicateId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return PrintDuplicateBase.DeleteById(printDuplicateId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForPermit(ByVal permitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PrintDuplicateSet
            Dim service As Service.PrintDuplicateService
            service = ServiceObject
            Return service.GetForPermit(permitId, tran)
        End Function
        
        Public Overloads Shared Function GetForPermit(ByVal permitId As Integer) As EntitySet.PrintDuplicateSet
            Return PrintDuplicateBase.GetForPermit(permitId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForDuplicateReason(ByVal duplicateReasonId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PrintDuplicateSet
            Dim service As Service.PrintDuplicateService
            service = ServiceObject
            Return service.GetForDuplicateReason(duplicateReasonId, tran)
        End Function
        
        Public Overloads Shared Function GetForDuplicateReason(ByVal duplicateReasonId As Integer) As EntitySet.PrintDuplicateSet
            Return PrintDuplicateBase.GetForDuplicateReason(duplicateReasonId, Nothing)
        End Function
        
        Public Shared Function Insert(ByVal [date] As Object, ByVal authorisedDate As Date, ByVal authorisedUserId As Object, ByVal permitId As Object, ByVal duplicateReasonId As Object) As Entity.PrintDuplicate
            Return Entity.PrintDuplicate.ServiceObject.Insert([date], authorisedDate, authorisedUserId, permitId, duplicateReasonId)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim dateParam As Object
            If (Me.IsDateNull = false) Then
                dateParam = Me.Date
            Else
                dateParam = System.DBNull.Value
            End If
            Dim authorisedDateParam As Date = Me.AuthorisedDate
            Dim authorisedUserIdParam As Object
            If (Me.IsAuthorisedUserIdNull = false) Then
                authorisedUserIdParam = Me.AuthorisedUserId
            Else
                authorisedUserIdParam = System.DBNull.Value
            End If
            Dim permitIdParam As Object
            If (Me.IsPermitIdNull = false) Then
                permitIdParam = Me.PermitId
            Else
                permitIdParam = System.DBNull.Value
            End If
            Dim duplicateReasonIdParam As Object
            If (Me.IsDuplicateReasonIdNull = false) Then
                duplicateReasonIdParam = Me.DuplicateReasonId
            Else
                duplicateReasonIdParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.PrintDuplicate.ServiceObject.Update(Me.Id, dateParam, authorisedDateParam, authorisedUserIdParam, permitIdParam, duplicateReasonIdParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
