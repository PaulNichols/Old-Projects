'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'ReportType'
    '*DO NOT* modify this file.
    'Add new properties and methods to ReportType instead.
    Public MustInherit Class ReportTypeBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal reportTypeId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(reportTypeId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal reportTypeId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(reportTypeId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property ReportTypeId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property Description As String
            Get
                Return CType(Me(1),String)
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property BOTypeName As String
            Get
                Return CType(Me(2),String)
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        Public Property OutputType As Integer
            Get
                Return CType(Me(3),Integer)
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property ContentType As String
            Get
                Return CType(Me(4),String)
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        Public Property StapleStartPage As Integer
            Get
                Return CType(Me(5),Integer)
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        Public Property StapleEndPage As Integer
            Get
                Return CType(Me(6),Integer)
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        Public Property StapleBatch As Integer
            Get
                Return CType(Me(7),Integer)
            End Get
            Set
                Me(7) = value
            End Set
        End Property
        
        Public Property ReportPrinterId As Integer
            Get
                If (Me.IsReportPrinterIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(8),Integer)
                End If
            End Get
            Set
                Me(8) = value
            End Set
        End Property
        
        Public Property Version As Integer
            Get
                Return CType(Me(9),Integer)
            End Get
            Set
                Me(9) = value
            End Set
        End Property
        
        Public Property Active As Boolean
            Get
                Return CType(Me(10),Boolean)
            End Get
            Set
                Me(10) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldDescription("FK for ReportCategory")>  _
        Public Property ReportCategoryId As Integer
            Get
                If (Me.IsReportCategoryIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(11),Integer)
                End If
            End Get
            Set
                Me(11) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(12),Integer)
                End If
            End Get
            Set
                Me(12) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.ReportTypeService
            Get
                Return CType(GetServiceObject(GetType(Service.ReportTypeService)),Service.ReportTypeService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsReportPrinterIdNull() As Boolean
            Return Me.IsNull(8)
        End Function
        
        Public Sub SetReportPrinterIdToNull()
            Me(8) = System.DBNull.Value
        End Sub
        
        Public Function IsReportCategoryIdNull() As Boolean
            Return Me.IsNull(11)
        End Function
        
        Public Sub SetReportCategoryIdToNull()
            Me(11) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(12)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(12) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(13)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.ReportTypeSet
            Return ReportTypeBase.GetAll(false, false, ReportTypeServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.ReportTypeSet
            Return ReportTypeBase.GetAll(includeHyphen, false, ReportTypeServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As ReportTypeServiceBase.OrderBy) As EntitySet.ReportTypeSet
            Dim service As Service.ReportTypeService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As ReportTypeServiceBase.OrderBy) As EntitySet.ReportTypeSet
            Return ReportTypeBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal reportTypeId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.ReportType
            Dim service As Service.ReportTypeService
            service = ServiceObject
            Return service.GetById(ReportTypeId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal reportTypeId As Integer) As Entity.ReportType
            Dim service As Service.ReportTypeService
            service = ServiceObject
            Return service.GetById(ReportTypeId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal reportTypeId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.ReportTypeService
            service = ServiceObject
            Return service.DeleteById(reportTypeId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal reportTypeId As Integer) As Boolean
            Return ReportTypeBase.DeleteById(reportTypeId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal reportTypeId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return ReportTypeBase.DeleteById(reportTypeId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForReportPrinter(ByVal reportPrinterId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ReportTypeSet
            Dim service As Service.ReportTypeService
            service = ServiceObject
            Return service.GetForReportPrinter(reportPrinterId, tran)
        End Function
        
        Public Overloads Shared Function GetForReportPrinter(ByVal reportPrinterId As Integer) As EntitySet.ReportTypeSet
            Return ReportTypeBase.GetForReportPrinter(reportPrinterId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForReportCategory(ByVal reportCategoryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ReportTypeSet
            Dim service As Service.ReportTypeService
            service = ServiceObject
            Return service.GetForReportCategory(reportCategoryId, tran)
        End Function
        
        Public Overloads Shared Function GetForReportCategory(ByVal reportCategoryId As Integer) As EntitySet.ReportTypeSet
            Return ReportTypeBase.GetForReportCategory(reportCategoryId, Nothing)
        End Function
        
        Public Overloads Function GetRelatedReport(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ReportSet
            Return Entity.Report.GetForReportType(Me.ReportTypeId, tran)
        End Function
        
        Public Overloads Function GetRelatedReport() As EntitySet.ReportSet
            Return Me.GetRelatedReport(Nothing)
        End Function
        
        Public Overloads Function GetRelatedReportTypeReportPrinter(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ReportTypeReportPrinterSet
            Return Entity.ReportTypeReportPrinter.GetForReportType(Me.ReportTypeId, tran)
        End Function
        
        Public Overloads Function GetRelatedReportTypeReportPrinter() As EntitySet.ReportTypeReportPrinterSet
            Return Me.GetRelatedReportTypeReportPrinter(Nothing)
        End Function
        
        Public Shared Function Insert(ByVal description As String, ByVal bOTypeName As String, ByVal outputType As Integer, ByVal contentType As String, ByVal stapleStartPage As Integer, ByVal stapleEndPage As Integer, ByVal stapleBatch As Integer, ByVal reportPrinterId As Object, ByVal version As Integer, ByVal active As Boolean, ByVal reportCategoryId As Object) As Entity.ReportType
            Return Entity.ReportType.ServiceObject.Insert(description, bOTypeName, outputType, contentType, stapleStartPage, stapleEndPage, stapleBatch, reportPrinterId, version, active, reportCategoryId)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim descriptionParam As String = Me.Description
            Dim bOTypeNameParam As String = Me.BOTypeName
            Dim outputTypeParam As Integer = Me.OutputType
            Dim contentTypeParam As String = Me.ContentType
            Dim stapleStartPageParam As Integer = Me.StapleStartPage
            Dim stapleEndPageParam As Integer = Me.StapleEndPage
            Dim stapleBatchParam As Integer = Me.StapleBatch
            Dim reportPrinterIdParam As Object
            If (Me.IsReportPrinterIdNull = false) Then
                reportPrinterIdParam = Me.ReportPrinterId
            Else
                reportPrinterIdParam = System.DBNull.Value
            End If
            Dim versionParam As Integer = Me.Version
            Dim activeParam As Boolean = Me.Active
            Dim reportCategoryIdParam As Object
            If (Me.IsReportCategoryIdNull = false) Then
                reportCategoryIdParam = Me.ReportCategoryId
            Else
                reportCategoryIdParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.ReportType.ServiceObject.Update(Me.Id, descriptionParam, bOTypeNameParam, outputTypeParam, contentTypeParam, stapleStartPageParam, stapleEndPageParam, stapleBatchParam, reportPrinterIdParam, versionParam, activeParam, reportCategoryIdParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
