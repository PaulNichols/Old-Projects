'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'PermitStatus'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class PermitStatusServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return true
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.PermitStatusSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.PermitStatusSet
            Return CType(MyBase.GetAll("eosp_SelectPermitStatus", GetType(EntitySet.PermitStatusSet), includeHyphen, includeInactive, orderBy),EntitySet.PermitStatusSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.PermitStatusSet
            Return Me.GetAll(includeHyphen, includeInactive, PermitStatusServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, PermitStatusServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.PermitStatusSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal permitStatusId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectPermitStatus", "PermitStatusId", permitStatusId, GetType(EntitySet.PermitStatusSet), tran),Entity.PermitStatus)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal permitStatusId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(permitStatusId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal permitStatusId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.PermitStatus
            Return CType(MyBase.GetById("eosp_SelectPermitStatus", "PermitStatusId", permitStatusId, GetType(EntitySet.PermitStatusSet), tran),Entity.PermitStatus)
        End Function
        
        Public Overloads Function GetById(ByVal permitStatusId As Integer) As Entity.PermitStatus
            Return Me.GetById(permitStatusId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal permitStatusId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(permitStatusId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal permitStatusId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeletePermitStatus", "PermitStatusId", permitStatusId, checkSum, transaction)
        End Function
        
        Public Overloads Function Insert(ByVal description As String, ByVal action As String, ByVal active As Boolean, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitStatus
            Return Me.GetById(Sprocs.eosp_CreatePermitStatus(description, action, active, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal description As String, ByVal action As String, ByVal active As Boolean) As Entity.PermitStatus
            Return Me.Insert(description, action, active, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal permitStatus As Entity.PermitStatus) As Entity.PermitStatus
            Return Me.Insert(permitStatus(1), permitStatus(2), permitStatus(3))
        End Function
        
        Public Overloads Function Insert(ByVal permitStatus As Entity.PermitStatus, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitStatus
            Return Me.Insert(permitStatus(1), permitStatus(2), permitStatus(3), transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal description As String, ByVal action As String, ByVal active As Boolean, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitStatus
            Return Sprocs.eosp_UpdatePermitStatus(id, description, action, active, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal description As String, ByVal action As String, ByVal active As Boolean) As Entity.PermitStatus
            Return Me.Update(id, description, action, active, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal description As String, ByVal action As String, ByVal active As Boolean, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitStatus
            Return Me.Update(id, description, action, active, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal description As String, ByVal action As String, ByVal active As Boolean, ByVal checkSum As Integer) As Entity.PermitStatus
            Return Me.Update(id, description, action, active, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal permitStatus As Entity.PermitStatus) As Entity.PermitStatus
            Return Me.Update(permitStatus.id, permitStatus(1), permitStatus(2), permitStatus(3))
        End Function
        
        Public Overloads Function Update(ByVal permitStatus As Entity.PermitStatus, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitStatus
            Return Me.Update(permitStatus.id, permitStatus(1), permitStatus(2), permitStatus(3), transaction)
        End Function
        
        Public Overloads Function Update(ByVal permitStatus As Entity.PermitStatus, ByVal checkSum As Integer) As Entity.PermitStatus
            Return Me.Update(permitStatus.id, permitStatus(1), permitStatus(2), permitStatus(3), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal permitStatus As Entity.PermitStatus, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitStatus
            Return Me.Update(permitStatus.id, permitStatus(1), permitStatus(2), permitStatus(3), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_PermitStatus(ByVal description As String, ByVal includeInactive As Boolean) As EntitySet.PermitStatusSet
            Return Sprocs.eosp_SelectPermitStatus(permitStatusId:=Nothing, Index_Description:=[description], includeInactive:=includeInactive, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_PermitStatus(ByVal description As String, ByVal includeInactive As Boolean, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitStatusSet
            Return Sprocs.eosp_SelectPermitStatus(permitStatusId:=Nothing, Index_Description:=[description], includeInactive:=includeInactive, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            IX_PermitStatus
            
            
        End Enum
    End Class
End Namespace
