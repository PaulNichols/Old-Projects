'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'RelatedPermits'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class RelatedPermitsServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.RelatedPermitsSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.RelatedPermitsSet
            Return CType(MyBase.GetAll("eosp_SelectRelatedPermits", GetType(EntitySet.RelatedPermitsSet), includeHyphen, includeInactive, orderBy),EntitySet.RelatedPermitsSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.RelatedPermitsSet
            Return Me.GetAll(includeHyphen, includeInactive, RelatedPermitsServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, RelatedPermitsServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Function GetById(ByVal idColumns() As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.RelatedPermits
            Return CType(MyBase.GetById("eosp_SelectRelatedPermits", New String() {"PermitId", "RelatedPermitId"}, idColumns, GetType(EntitySet.RelatedPermitsSet), tran),Entity.RelatedPermits)
        End Function
        
        Public Overloads Function GetById(ByVal idColumns() As Integer) As Entity.RelatedPermits
            Return Me.GetById(idColumns, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal idColumns() As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(idColumns, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal idColumns() As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteRelatedPermits", New String() {"PermitId", "RelatedPermitId"}, idColumns, checkSum, transaction)
        End Function
        
        'GetForPermitIdPermit - links to the Permit table...
        Public Overloads Function GetForPermitIdPermit(ByVal PermitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.RelatedPermitsSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from RelatedPermits where PermitId=" + PermitId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.RelatedPermitsSet), tran),EntitySet.RelatedPermitsSet)
        End Function
        
        'GetForPermitIdPermit - links to the Permit table...
        Public Overloads Function GetForPermitIdPermit(ByVal PermitId As Integer) As EntitySet.RelatedPermitsSet
            Return Me.GetForPermitIdPermit(PermitId, Nothing)
        End Function
        
        'GetForRelatedPermitIdPermit - links to the Permit table...
        Public Overloads Function GetForRelatedPermitIdPermit(ByVal RelatedPermitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.RelatedPermitsSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from RelatedPermits where RelatedPermitI"& _ 
"d=" + RelatedPermitId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.RelatedPermitsSet), tran),EntitySet.RelatedPermitsSet)
        End Function
        
        'GetForRelatedPermitIdPermit - links to the Permit table...
        Public Overloads Function GetForRelatedPermitIdPermit(ByVal RelatedPermitId As Integer) As EntitySet.RelatedPermitsSet
            Return Me.GetForRelatedPermitIdPermit(RelatedPermitId, Nothing)
        End Function
        
        Public Overloads Sub Insert(ByVal permitId As Integer, ByVal relatedPermitId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction)
            Sprocs.eosp_CreateRelatedPermits(permitId, relatedPermitId, transaction)
        End Sub
        
        Public Overloads Sub Insert(ByVal permitId As Integer, ByVal relatedPermitId As Integer)
            Me.Insert(permitId, relatedPermitId, Nothing)
        End Sub
        
        Public Overloads Sub Insert(ByVal relatedPermits As Entity.RelatedPermits)
            Me.Insert(relatedPermits(0), relatedPermits(1))
        End Sub
        
        Public Overloads Sub Insert(ByVal relatedPermits As Entity.RelatedPermits, ByVal transaction As System.Data.SqlClient.SqlTransaction)
            Me.Insert(relatedPermits(0), relatedPermits(1), transaction)
        End Sub
        
        Public Overloads Function Update(ByVal permitId As Integer, ByVal relatedPermitId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.RelatedPermits
            Return Sprocs.eosp_UpdateRelatedPermits(permitId, relatedPermitId, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal permitId As Integer, ByVal relatedPermitId As Integer) As Entity.RelatedPermits
            Return Me.Update(permitId, relatedPermitId, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal permitId As Integer, ByVal relatedPermitId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.RelatedPermits
            Return Me.Update(permitId, relatedPermitId, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal permitId As Integer, ByVal relatedPermitId As Integer, ByVal checkSum As Integer) As Entity.RelatedPermits
            Return Me.Update(permitId, relatedPermitId, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal relatedPermits As Entity.RelatedPermits) As Entity.RelatedPermits
            Return Me.Update(relatedPermits(0), relatedPermits(1))
        End Function
        
        Public Overloads Function Update(ByVal relatedPermits As Entity.RelatedPermits, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.RelatedPermits
            Return Me.Update(relatedPermits(0), relatedPermits(1), transaction)
        End Function
        
        Public Overloads Function Update(ByVal relatedPermits As Entity.RelatedPermits, ByVal checkSum As Integer) As Entity.RelatedPermits
            Return Me.Update(relatedPermits(0), relatedPermits(1), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal relatedPermits As Entity.RelatedPermits, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.RelatedPermits
            Return Me.Update(relatedPermits(0), relatedPermits(1), checkSum, transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
        End Enum
    End Class
End Namespace
