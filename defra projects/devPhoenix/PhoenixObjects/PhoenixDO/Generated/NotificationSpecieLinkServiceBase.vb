'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'NotificationSpecieLink'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class NotificationSpecieLinkServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.NotificationSpecieLinkSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.NotificationSpecieLinkSet
            Return CType(MyBase.GetAll("eosp_SelectNotificationSpecieLink", GetType(EntitySet.NotificationSpecieLinkSet), includeHyphen, includeInactive, orderBy),EntitySet.NotificationSpecieLinkSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.NotificationSpecieLinkSet
            Return Me.GetAll(includeHyphen, includeInactive, NotificationSpecieLinkServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, NotificationSpecieLinkServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Function GetById(ByVal idColumns() As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.NotificationSpecieLink
            Return CType(MyBase.GetById("eosp_SelectNotificationSpecieLink", New String() {"SpecieId", "CITESNotificationId"}, idColumns, GetType(EntitySet.NotificationSpecieLinkSet), tran),Entity.NotificationSpecieLink)
        End Function
        
        Public Overloads Function GetById(ByVal idColumns() As Integer) As Entity.NotificationSpecieLink
            Return Me.GetById(idColumns, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal idColumns() As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(idColumns, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal idColumns() As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteNotificationSpecieLink", New String() {"SpecieId", "CITESNotificationId"}, idColumns, checkSum, transaction)
        End Function
        
        'GetForSpecie - links to the Specie table...
        Public Overloads Function GetForSpecie(ByVal SpecieId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.NotificationSpecieLinkSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from NotificationSpecieLink where Specie"& _ 
"Id=" + SpecieId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.NotificationSpecieLinkSet), tran),EntitySet.NotificationSpecieLinkSet)
        End Function
        
        'GetForSpecie - links to the Specie table...
        Public Overloads Function GetForSpecie(ByVal SpecieId As Integer) As EntitySet.NotificationSpecieLinkSet
            Return Me.GetForSpecie(SpecieId, Nothing)
        End Function
        
        'GetForCITESNotification - links to the CITESNotification table...
        Public Overloads Function GetForCITESNotification(ByVal CITESNotificationId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.NotificationSpecieLinkSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from NotificationSpecieLink where CITESN"& _ 
"otificationId=" + CITESNotificationId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.NotificationSpecieLinkSet), tran),EntitySet.NotificationSpecieLinkSet)
        End Function
        
        'GetForCITESNotification - links to the CITESNotification table...
        Public Overloads Function GetForCITESNotification(ByVal CITESNotificationId As Integer) As EntitySet.NotificationSpecieLinkSet
            Return Me.GetForCITESNotification(CITESNotificationId, Nothing)
        End Function
        
        'GetForCITESDerivative - links to the CITESDerivative table...
        Public Overloads Function GetForCITESDerivative(ByVal CITESDerivativeId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.NotificationSpecieLinkSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from NotificationSpecieLink where CITESD"& _ 
"erivativeId=" + CITESDerivativeId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.NotificationSpecieLinkSet), tran),EntitySet.NotificationSpecieLinkSet)
        End Function
        
        'GetForCITESDerivative - links to the CITESDerivative table...
        Public Overloads Function GetForCITESDerivative(ByVal CITESDerivativeId As Integer) As EntitySet.NotificationSpecieLinkSet
            Return Me.GetForCITESDerivative(CITESDerivativeId, Nothing)
        End Function
        
        'GetForUOM - links to the UOM table...
        Public Overloads Function GetForUOM(ByVal UOMId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.NotificationSpecieLinkSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from NotificationSpecieLink where UOMId="& _ 
"" + UOMId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.NotificationSpecieLinkSet), tran),EntitySet.NotificationSpecieLinkSet)
        End Function
        
        'GetForUOM - links to the UOM table...
        Public Overloads Function GetForUOM(ByVal UOMId As Integer) As EntitySet.NotificationSpecieLinkSet
            Return Me.GetForUOM(UOMId, Nothing)
        End Function
        
        Public Overloads Sub Insert(ByVal specieId As Integer, ByVal cITESNotificationId As Integer, ByVal cITESDerivativeId As Object, ByVal uOMId As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction)
            Sprocs.eosp_CreateNotificationSpecieLink(specieId, cITESNotificationId, cITESDerivativeId, uOMId, transaction)
        End Sub
        
        Public Overloads Sub Insert(ByVal specieId As Integer, ByVal cITESNotificationId As Integer, ByVal cITESDerivativeId As Object, ByVal uOMId As Object)
            Me.Insert(specieId, cITESNotificationId, cITESDerivativeId, uOMId, Nothing)
        End Sub
        
        Public Overloads Sub Insert(ByVal notificationSpecieLink As Entity.NotificationSpecieLink)
            Me.Insert(notificationSpecieLink(0), notificationSpecieLink(1), notificationSpecieLink(2), notificationSpecieLink(3))
        End Sub
        
        Public Overloads Sub Insert(ByVal notificationSpecieLink As Entity.NotificationSpecieLink, ByVal transaction As System.Data.SqlClient.SqlTransaction)
            Me.Insert(notificationSpecieLink(0), notificationSpecieLink(1), notificationSpecieLink(2), notificationSpecieLink(3), transaction)
        End Sub
        
        Public Overloads Function Update(ByVal specieId As Integer, ByVal cITESNotificationId As Integer, ByVal cITESDerivativeId As Object, ByVal uOMId As Object, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.NotificationSpecieLink
            Return Sprocs.eosp_UpdateNotificationSpecieLink(specieId, cITESNotificationId, cITESDerivativeId, uOMId, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal specieId As Integer, ByVal cITESNotificationId As Integer, ByVal cITESDerivativeId As Object, ByVal uOMId As Object) As Entity.NotificationSpecieLink
            Return Me.Update(specieId, cITESNotificationId, cITESDerivativeId, uOMId, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal specieId As Integer, ByVal cITESNotificationId As Integer, ByVal cITESDerivativeId As Object, ByVal uOMId As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.NotificationSpecieLink
            Return Me.Update(specieId, cITESNotificationId, cITESDerivativeId, uOMId, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal specieId As Integer, ByVal cITESNotificationId As Integer, ByVal cITESDerivativeId As Object, ByVal uOMId As Object, ByVal checkSum As Integer) As Entity.NotificationSpecieLink
            Return Me.Update(specieId, cITESNotificationId, cITESDerivativeId, uOMId, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal notificationSpecieLink As Entity.NotificationSpecieLink) As Entity.NotificationSpecieLink
            Return Me.Update(notificationSpecieLink(0), notificationSpecieLink(1), notificationSpecieLink(2), notificationSpecieLink(3))
        End Function
        
        Public Overloads Function Update(ByVal notificationSpecieLink As Entity.NotificationSpecieLink, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.NotificationSpecieLink
            Return Me.Update(notificationSpecieLink(0), notificationSpecieLink(1), notificationSpecieLink(2), notificationSpecieLink(3), transaction)
        End Function
        
        Public Overloads Function Update(ByVal notificationSpecieLink As Entity.NotificationSpecieLink, ByVal checkSum As Integer) As Entity.NotificationSpecieLink
            Return Me.Update(notificationSpecieLink(0), notificationSpecieLink(1), notificationSpecieLink(2), notificationSpecieLink(3), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal notificationSpecieLink As Entity.NotificationSpecieLink, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.NotificationSpecieLink
            Return Me.Update(notificationSpecieLink(0), notificationSpecieLink(1), notificationSpecieLink(2), notificationSpecieLink(3), checkSum, transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
        End Enum
    End Class
End Namespace
