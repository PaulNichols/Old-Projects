'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'PermitHistory'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class PermitHistoryServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.PermitHistorySet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.PermitHistorySet
            Return CType(MyBase.GetAll("eosp_SelectPermitHistory", GetType(EntitySet.PermitHistorySet), includeHyphen, includeInactive, orderBy),EntitySet.PermitHistorySet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.PermitHistorySet
            Return Me.GetAll(includeHyphen, includeInactive, PermitHistoryServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, PermitHistoryServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.PermitHistorySet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal permitHistoryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectPermitHistory", "PermitHistoryId", permitHistoryId, GetType(EntitySet.PermitHistorySet), tran),Entity.PermitHistory)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal permitHistoryId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(permitHistoryId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal permitHistoryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.PermitHistory
            Return CType(MyBase.GetById("eosp_SelectPermitHistory", "PermitHistoryId", permitHistoryId, GetType(EntitySet.PermitHistorySet), tran),Entity.PermitHistory)
        End Function
        
        Public Overloads Function GetById(ByVal permitHistoryId As Integer) As Entity.PermitHistory
            Return Me.GetById(permitHistoryId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal permitHistoryId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(permitHistoryId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal permitHistoryId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeletePermitHistory", "PermitHistoryId", permitHistoryId, checkSum, transaction)
        End Function
        
        'GetForPermitInfo - links to the PermitInfo table...
        Public Overloads Function GetForPermitInfo(ByVal PermitInfoId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitHistorySet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitHistory where PermitInfoId=" + PermitInfoId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitHistorySet), tran),EntitySet.PermitHistorySet)
        End Function
        
        'GetForPermitInfo - links to the PermitInfo table...
        Public Overloads Function GetForPermitInfo(ByVal PermitInfoId As Integer) As EntitySet.PermitHistorySet
            Return Me.GetForPermitInfo(PermitInfoId, Nothing)
        End Function
        
        'GetForProgressStatusPayment - links to the ProgressStatusPayment table...
        Public Overloads Function GetForProgressStatusPayment(ByVal ProgressStatusPaymentId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitHistorySet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitHistory where ProgressStatusI"& _ 
"nspectionId=" + ProgressStatusPaymentId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitHistorySet), tran),EntitySet.PermitHistorySet)
        End Function
        
        'GetForProgressStatusPayment - links to the ProgressStatusPayment table...
        Public Overloads Function GetForProgressStatusPayment(ByVal ProgressStatusPaymentId As Integer) As EntitySet.PermitHistorySet
            Return Me.GetForProgressStatusPayment(ProgressStatusPaymentId, Nothing)
        End Function
        
        'GetForProgressStatusSAAdvice - links to the ProgressStatusSAAdvice table...
        Public Overloads Function GetForProgressStatusSAAdvice(ByVal ProgressStatusSAAdviceId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitHistorySet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitHistory where ProgressStatusS"& _ 
"AAdviceId=" + ProgressStatusSAAdviceId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitHistorySet), tran),EntitySet.PermitHistorySet)
        End Function
        
        'GetForProgressStatusSAAdvice - links to the ProgressStatusSAAdvice table...
        Public Overloads Function GetForProgressStatusSAAdvice(ByVal ProgressStatusSAAdviceId As Integer) As EntitySet.PermitHistorySet
            Return Me.GetForProgressStatusSAAdvice(ProgressStatusSAAdviceId, Nothing)
        End Function
        
        'GetForProgressStatusReferralHistory - links to the ProgressStatusReferralHistory table...
        Public Overloads Function GetForProgressStatusReferralHistory(ByVal ProgressStatusReferralHistoryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitHistorySet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitHistory where ProgressStatusR"& _ 
"eferralHistoryId=" + ProgressStatusReferralHistoryId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitHistorySet), tran),EntitySet.PermitHistorySet)
        End Function
        
        'GetForProgressStatusReferralHistory - links to the ProgressStatusReferralHistory table...
        Public Overloads Function GetForProgressStatusReferralHistory(ByVal ProgressStatusReferralHistoryId As Integer) As EntitySet.PermitHistorySet
            Return Me.GetForProgressStatusReferralHistory(ProgressStatusReferralHistoryId, Nothing)
        End Function
        
        'GetForProgressStatusReIssued - links to the ProgressStatusReIssued table...
        Public Overloads Function GetForProgressStatusReIssued(ByVal ProgressStatusReIssuedId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitHistorySet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitHistory where ProgressStatusR"& _ 
"eIssuedId=" + ProgressStatusReIssuedId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitHistorySet), tran),EntitySet.PermitHistorySet)
        End Function
        
        'GetForProgressStatusReIssued - links to the ProgressStatusReIssued table...
        Public Overloads Function GetForProgressStatusReIssued(ByVal ProgressStatusReIssuedId As Integer) As EntitySet.PermitHistorySet
            Return Me.GetForProgressStatusReIssued(ProgressStatusReIssuedId, Nothing)
        End Function
        
        'GetForPermitStatus - links to the PermitStatus table...
        Public Overloads Function GetForPermitStatus(ByVal PermitStatusId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitHistorySet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitHistory where PermitStatusId="& _ 
"" + PermitStatusId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitHistorySet), tran),EntitySet.PermitHistorySet)
        End Function
        
        'GetForPermitStatus - links to the PermitStatus table...
        Public Overloads Function GetForPermitStatus(ByVal PermitStatusId As Integer) As EntitySet.PermitHistorySet
            Return Me.GetForPermitStatus(PermitStatusId, Nothing)
        End Function
        
        'GetForStatusAssignedToGroup - links to the StatusAssignedToGroup table...
        Public Overloads Function GetForStatusAssignedToGroup(ByVal StatusAssignedToGroupId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitHistorySet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitHistory where AssignedTo=" + StatusAssignedToGroupId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitHistorySet), tran),EntitySet.PermitHistorySet)
        End Function
        
        'GetForStatusAssignedToGroup - links to the StatusAssignedToGroup table...
        Public Overloads Function GetForStatusAssignedToGroup(ByVal StatusAssignedToGroupId As Integer) As EntitySet.PermitHistorySet
            Return Me.GetForStatusAssignedToGroup(StatusAssignedToGroupId, Nothing)
        End Function
        
        'GetForReportPrintJob - links to the ReportPrintJob table...
        Public Overloads Function GetForReportPrintJob(ByVal ReportPrintJobId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitHistorySet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitHistory where ReportPrintJobI"& _ 
"d=" + ReportPrintJobId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitHistorySet), tran),EntitySet.PermitHistorySet)
        End Function
        
        'GetForReportPrintJob - links to the ReportPrintJob table...
        Public Overloads Function GetForReportPrintJob(ByVal ReportPrintJobId As Integer) As EntitySet.PermitHistorySet
            Return Me.GetForReportPrintJob(ReportPrintJobId, Nothing)
        End Function
        
        Public Overloads Function Insert( _
                    ByVal permitInfoId As Integer,  _
                    ByVal progressStatusPaymentId As Object,  _
                    ByVal progressStatusInspectionId As Object,  _
                    ByVal progressStatusSAAdviceId As Object,  _
                    ByVal progressStatusReferralHistoryId As Object,  _
                    ByVal progressStatusReIssuedId As Object,  _
                    ByVal permitStatusId As Object,  _
                    ByVal changeDate As Date,  _
                    ByVal changedByUserId As Decimal,  _
                    ByVal assignedTo As Object,  _
                    ByVal nextActionDate As Object,  _
                    ByVal cancelReason As Object,  _
                    ByVal cancelPendingReason As Object,  _
                    ByVal reportPrintJobId As Object,  _
                    ByVal cancelPendingDeclineReason As Object,  _
                    ByVal coveringLetterReportId As Object,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitHistory
            Return Me.GetById(Sprocs.eosp_CreatePermitHistory(permitInfoId, progressStatusPaymentId, progressStatusInspectionId, progressStatusSAAdviceId, progressStatusReferralHistoryId, progressStatusReIssuedId, permitStatusId, changeDate, changedByUserId, assignedTo, nextActionDate, cancelReason, cancelPendingReason, reportPrintJobId, cancelPendingDeclineReason, coveringLetterReportId, transaction), transaction)
        End Function
        
        Public Overloads Function Insert( _
                    ByVal permitInfoId As Integer,  _
                    ByVal progressStatusPaymentId As Object,  _
                    ByVal progressStatusInspectionId As Object,  _
                    ByVal progressStatusSAAdviceId As Object,  _
                    ByVal progressStatusReferralHistoryId As Object,  _
                    ByVal progressStatusReIssuedId As Object,  _
                    ByVal permitStatusId As Object,  _
                    ByVal changeDate As Date,  _
                    ByVal changedByUserId As Decimal,  _
                    ByVal assignedTo As Object,  _
                    ByVal nextActionDate As Object,  _
                    ByVal cancelReason As Object,  _
                    ByVal cancelPendingReason As Object,  _
                    ByVal reportPrintJobId As Object,  _
                    ByVal cancelPendingDeclineReason As Object,  _
                    ByVal coveringLetterReportId As Object) As Entity.PermitHistory
            Return Me.Insert(permitInfoId, progressStatusPaymentId, progressStatusInspectionId, progressStatusSAAdviceId, progressStatusReferralHistoryId, progressStatusReIssuedId, permitStatusId, changeDate, changedByUserId, assignedTo, nextActionDate, cancelReason, cancelPendingReason, reportPrintJobId, cancelPendingDeclineReason, coveringLetterReportId, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal permitHistory As Entity.PermitHistory) As Entity.PermitHistory
            Return Me.Insert(permitHistory(1), permitHistory(2), permitHistory(3), permitHistory(4), permitHistory(5), permitHistory(6), permitHistory(7), permitHistory(8), permitHistory(9), permitHistory(10), permitHistory(11), permitHistory(12), permitHistory(13), permitHistory(14), permitHistory(15), permitHistory(16))
        End Function
        
        Public Overloads Function Insert(ByVal permitHistory As Entity.PermitHistory, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitHistory
            Return Me.Insert(permitHistory(1), permitHistory(2), permitHistory(3), permitHistory(4), permitHistory(5), permitHistory(6), permitHistory(7), permitHistory(8), permitHistory(9), permitHistory(10), permitHistory(11), permitHistory(12), permitHistory(13), permitHistory(14), permitHistory(15), permitHistory(16), transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal permitInfoId As Integer,  _
                    ByVal progressStatusPaymentId As Object,  _
                    ByVal progressStatusInspectionId As Object,  _
                    ByVal progressStatusSAAdviceId As Object,  _
                    ByVal progressStatusReferralHistoryId As Object,  _
                    ByVal progressStatusReIssuedId As Object,  _
                    ByVal permitStatusId As Object,  _
                    ByVal changeDate As Date,  _
                    ByVal changedByUserId As Decimal,  _
                    ByVal assignedTo As Object,  _
                    ByVal nextActionDate As Object,  _
                    ByVal cancelReason As Object,  _
                    ByVal cancelPendingReason As Object,  _
                    ByVal reportPrintJobId As Object,  _
                    ByVal cancelPendingDeclineReason As Object,  _
                    ByVal coveringLetterReportId As Object,  _
                    ByVal checkSum As Integer,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitHistory
            Return Sprocs.eosp_UpdatePermitHistory(id, permitInfoId, progressStatusPaymentId, progressStatusInspectionId, progressStatusSAAdviceId, progressStatusReferralHistoryId, progressStatusReIssuedId, permitStatusId, changeDate, changedByUserId, assignedTo, nextActionDate, cancelReason, cancelPendingReason, reportPrintJobId, cancelPendingDeclineReason, coveringLetterReportId, checkSum, transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal permitInfoId As Integer,  _
                    ByVal progressStatusPaymentId As Object,  _
                    ByVal progressStatusInspectionId As Object,  _
                    ByVal progressStatusSAAdviceId As Object,  _
                    ByVal progressStatusReferralHistoryId As Object,  _
                    ByVal progressStatusReIssuedId As Object,  _
                    ByVal permitStatusId As Object,  _
                    ByVal changeDate As Date,  _
                    ByVal changedByUserId As Decimal,  _
                    ByVal assignedTo As Object,  _
                    ByVal nextActionDate As Object,  _
                    ByVal cancelReason As Object,  _
                    ByVal cancelPendingReason As Object,  _
                    ByVal reportPrintJobId As Object,  _
                    ByVal cancelPendingDeclineReason As Object,  _
                    ByVal coveringLetterReportId As Object) As Entity.PermitHistory
            Return Me.Update(id, permitInfoId, progressStatusPaymentId, progressStatusInspectionId, progressStatusSAAdviceId, progressStatusReferralHistoryId, progressStatusReIssuedId, permitStatusId, changeDate, changedByUserId, assignedTo, nextActionDate, cancelReason, cancelPendingReason, reportPrintJobId, cancelPendingDeclineReason, coveringLetterReportId, 0, Nothing)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal permitInfoId As Integer,  _
                    ByVal progressStatusPaymentId As Object,  _
                    ByVal progressStatusInspectionId As Object,  _
                    ByVal progressStatusSAAdviceId As Object,  _
                    ByVal progressStatusReferralHistoryId As Object,  _
                    ByVal progressStatusReIssuedId As Object,  _
                    ByVal permitStatusId As Object,  _
                    ByVal changeDate As Date,  _
                    ByVal changedByUserId As Decimal,  _
                    ByVal assignedTo As Object,  _
                    ByVal nextActionDate As Object,  _
                    ByVal cancelReason As Object,  _
                    ByVal cancelPendingReason As Object,  _
                    ByVal reportPrintJobId As Object,  _
                    ByVal cancelPendingDeclineReason As Object,  _
                    ByVal coveringLetterReportId As Object,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitHistory
            Return Me.Update(id, permitInfoId, progressStatusPaymentId, progressStatusInspectionId, progressStatusSAAdviceId, progressStatusReferralHistoryId, progressStatusReIssuedId, permitStatusId, changeDate, changedByUserId, assignedTo, nextActionDate, cancelReason, cancelPendingReason, reportPrintJobId, cancelPendingDeclineReason, coveringLetterReportId, 0, transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal permitInfoId As Integer,  _
                    ByVal progressStatusPaymentId As Object,  _
                    ByVal progressStatusInspectionId As Object,  _
                    ByVal progressStatusSAAdviceId As Object,  _
                    ByVal progressStatusReferralHistoryId As Object,  _
                    ByVal progressStatusReIssuedId As Object,  _
                    ByVal permitStatusId As Object,  _
                    ByVal changeDate As Date,  _
                    ByVal changedByUserId As Decimal,  _
                    ByVal assignedTo As Object,  _
                    ByVal nextActionDate As Object,  _
                    ByVal cancelReason As Object,  _
                    ByVal cancelPendingReason As Object,  _
                    ByVal reportPrintJobId As Object,  _
                    ByVal cancelPendingDeclineReason As Object,  _
                    ByVal coveringLetterReportId As Object,  _
                    ByVal checkSum As Integer) As Entity.PermitHistory
            Return Me.Update(id, permitInfoId, progressStatusPaymentId, progressStatusInspectionId, progressStatusSAAdviceId, progressStatusReferralHistoryId, progressStatusReIssuedId, permitStatusId, changeDate, changedByUserId, assignedTo, nextActionDate, cancelReason, cancelPendingReason, reportPrintJobId, cancelPendingDeclineReason, coveringLetterReportId, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal permitHistory As Entity.PermitHistory) As Entity.PermitHistory
            Return Me.Update(permitHistory.id, permitHistory(1), permitHistory(2), permitHistory(3), permitHistory(4), permitHistory(5), permitHistory(6), permitHistory(7), permitHistory(8), permitHistory(9), permitHistory(10), permitHistory(11), permitHistory(12), permitHistory(13), permitHistory(14), permitHistory(15), permitHistory(16))
        End Function
        
        Public Overloads Function Update(ByVal permitHistory As Entity.PermitHistory, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitHistory
            Return Me.Update(permitHistory.id, permitHistory(1), permitHistory(2), permitHistory(3), permitHistory(4), permitHistory(5), permitHistory(6), permitHistory(7), permitHistory(8), permitHistory(9), permitHistory(10), permitHistory(11), permitHistory(12), permitHistory(13), permitHistory(14), permitHistory(15), permitHistory(16), transaction)
        End Function
        
        Public Overloads Function Update(ByVal permitHistory As Entity.PermitHistory, ByVal checkSum As Integer) As Entity.PermitHistory
            Return Me.Update(permitHistory.id, permitHistory(1), permitHistory(2), permitHistory(3), permitHistory(4), permitHistory(5), permitHistory(6), permitHistory(7), permitHistory(8), permitHistory(9), permitHistory(10), permitHistory(11), permitHistory(12), permitHistory(13), permitHistory(14), permitHistory(15), permitHistory(16), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal permitHistory As Entity.PermitHistory, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitHistory
            Return Me.Update(permitHistory.id, permitHistory(1), permitHistory(2), permitHistory(3), permitHistory(4), permitHistory(5), permitHistory(6), permitHistory(7), permitHistory(8), permitHistory(9), permitHistory(10), permitHistory(11), permitHistory(12), permitHistory(13), permitHistory(14), permitHistory(15), permitHistory(16), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_ChangeDate(ByVal changeDate As Date) As EntitySet.PermitHistorySet
            Return Sprocs.eosp_SelectPermitHistory(permitHistoryId:=Nothing, Index_ChangeDate:=[changeDate], Index_PermitInfoId:=Nothing, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_ChangeDate(ByVal changeDate As Date, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitHistorySet
            Return Sprocs.eosp_SelectPermitHistory(permitHistoryId:=Nothing, Index_ChangeDate:=[changeDate], Index_PermitInfoId:=Nothing, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Overloads Function GetByIndex_PermitId(ByVal permitInfoId As Integer) As EntitySet.PermitHistorySet
            Return Sprocs.eosp_SelectPermitHistory(permitHistoryId:=Nothing, Index_PermitInfoId:=[permitInfoId], Index_ChangeDate:=Nothing, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_PermitId(ByVal permitInfoId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitHistorySet
            Return Sprocs.eosp_SelectPermitHistory(permitHistoryId:=Nothing, Index_PermitInfoId:=[permitInfoId], Index_ChangeDate:=Nothing, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            ChangeDate
            
            PermitId
            
            
        End Enum
    End Class
End Namespace
