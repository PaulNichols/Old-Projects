'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'PaymentBasket'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class PaymentBasketServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.PaymentBasketSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.PaymentBasketSet
            Return CType(MyBase.GetAll("eosp_SelectPaymentBasket", GetType(EntitySet.PaymentBasketSet), includeHyphen, includeInactive, orderBy),EntitySet.PaymentBasketSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.PaymentBasketSet
            Return Me.GetAll(includeHyphen, includeInactive, PaymentBasketServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, PaymentBasketServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal paymentBasketId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectPaymentBasket", "PaymentBasketId", paymentBasketId, GetType(EntitySet.PaymentBasketSet), tran),Entity.PaymentBasket)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal paymentBasketId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(paymentBasketId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal paymentBasketId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.PaymentBasket
            Return CType(MyBase.GetById("eosp_SelectPaymentBasket", "PaymentBasketId", paymentBasketId, GetType(EntitySet.PaymentBasketSet), tran),Entity.PaymentBasket)
        End Function
        
        Public Overloads Function GetById(ByVal paymentBasketId As Integer) As Entity.PaymentBasket
            Return Me.GetById(paymentBasketId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal paymentBasketId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(paymentBasketId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal paymentBasketId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeletePaymentBasket", "PaymentBasketId", paymentBasketId, checkSum, transaction)
        End Function
        
        'GetForParty - links to the Party table...
        Public Overloads Function GetForParty(ByVal PartyId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PaymentBasketSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PaymentBasket where PartyId=" + PartyId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PaymentBasketSet), tran),EntitySet.PaymentBasketSet)
        End Function
        
        'GetForParty - links to the Party table...
        Public Overloads Function GetForParty(ByVal PartyId As Integer) As EntitySet.PaymentBasketSet
            Return Me.GetForParty(PartyId, Nothing)
        End Function
        
        'GetForPayment - links to the Payment table...
        Public Overloads Function GetForPayment(ByVal PaymentId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PaymentBasketSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PaymentBasket where RemittanceAdvic"& _ 
"ePaymentId=" + PaymentId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PaymentBasketSet), tran),EntitySet.PaymentBasketSet)
        End Function
        
        'GetForPayment - links to the Payment table...
        Public Overloads Function GetForPayment(ByVal PaymentId As Integer) As EntitySet.PaymentBasketSet
            Return Me.GetForPayment(PaymentId, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal partyId As Integer, ByVal totalFeeCharged As Object, ByVal basketClosed As Object, ByVal remittanceAdvicePrinted As Object, ByVal remittanceAdviceDateTime As Object, ByVal remittanceAdvicePaymentId As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PaymentBasket
            Return Me.GetById(Sprocs.eosp_CreatePaymentBasket(partyId, totalFeeCharged, basketClosed, remittanceAdvicePrinted, remittanceAdviceDateTime, remittanceAdvicePaymentId, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal partyId As Integer, ByVal totalFeeCharged As Object, ByVal basketClosed As Object, ByVal remittanceAdvicePrinted As Object, ByVal remittanceAdviceDateTime As Object, ByVal remittanceAdvicePaymentId As Object) As Entity.PaymentBasket
            Return Me.Insert(partyId, totalFeeCharged, basketClosed, remittanceAdvicePrinted, remittanceAdviceDateTime, remittanceAdvicePaymentId, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal paymentBasket As Entity.PaymentBasket) As Entity.PaymentBasket
            Return Me.Insert(paymentBasket(1), paymentBasket(2), paymentBasket(3), paymentBasket(4), paymentBasket(5), paymentBasket(6))
        End Function
        
        Public Overloads Function Insert(ByVal paymentBasket As Entity.PaymentBasket, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PaymentBasket
            Return Me.Insert(paymentBasket(1), paymentBasket(2), paymentBasket(3), paymentBasket(4), paymentBasket(5), paymentBasket(6), transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal partyId As Integer, ByVal totalFeeCharged As Object, ByVal basketClosed As Object, ByVal remittanceAdvicePrinted As Object, ByVal remittanceAdviceDateTime As Object, ByVal remittanceAdvicePaymentId As Object, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PaymentBasket
            Return Sprocs.eosp_UpdatePaymentBasket(id, partyId, totalFeeCharged, basketClosed, remittanceAdvicePrinted, remittanceAdviceDateTime, remittanceAdvicePaymentId, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal partyId As Integer, ByVal totalFeeCharged As Object, ByVal basketClosed As Object, ByVal remittanceAdvicePrinted As Object, ByVal remittanceAdviceDateTime As Object, ByVal remittanceAdvicePaymentId As Object) As Entity.PaymentBasket
            Return Me.Update(id, partyId, totalFeeCharged, basketClosed, remittanceAdvicePrinted, remittanceAdviceDateTime, remittanceAdvicePaymentId, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal partyId As Integer, ByVal totalFeeCharged As Object, ByVal basketClosed As Object, ByVal remittanceAdvicePrinted As Object, ByVal remittanceAdviceDateTime As Object, ByVal remittanceAdvicePaymentId As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PaymentBasket
            Return Me.Update(id, partyId, totalFeeCharged, basketClosed, remittanceAdvicePrinted, remittanceAdviceDateTime, remittanceAdvicePaymentId, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal partyId As Integer, ByVal totalFeeCharged As Object, ByVal basketClosed As Object, ByVal remittanceAdvicePrinted As Object, ByVal remittanceAdviceDateTime As Object, ByVal remittanceAdvicePaymentId As Object, ByVal checkSum As Integer) As Entity.PaymentBasket
            Return Me.Update(id, partyId, totalFeeCharged, basketClosed, remittanceAdvicePrinted, remittanceAdviceDateTime, remittanceAdvicePaymentId, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal paymentBasket As Entity.PaymentBasket) As Entity.PaymentBasket
            Return Me.Update(paymentBasket.id, paymentBasket(1), paymentBasket(2), paymentBasket(3), paymentBasket(4), paymentBasket(5), paymentBasket(6))
        End Function
        
        Public Overloads Function Update(ByVal paymentBasket As Entity.PaymentBasket, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PaymentBasket
            Return Me.Update(paymentBasket.id, paymentBasket(1), paymentBasket(2), paymentBasket(3), paymentBasket(4), paymentBasket(5), paymentBasket(6), transaction)
        End Function
        
        Public Overloads Function Update(ByVal paymentBasket As Entity.PaymentBasket, ByVal checkSum As Integer) As Entity.PaymentBasket
            Return Me.Update(paymentBasket.id, paymentBasket(1), paymentBasket(2), paymentBasket(3), paymentBasket(4), paymentBasket(5), paymentBasket(6), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal paymentBasket As Entity.PaymentBasket, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PaymentBasket
            Return Me.Update(paymentBasket.id, paymentBasket(1), paymentBasket(2), paymentBasket(3), paymentBasket(4), paymentBasket(5), paymentBasket(6), checkSum, transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
        End Enum
    End Class
End Namespace
