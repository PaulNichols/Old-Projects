'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'Business'
    '*DO NOT* modify this file.
    'Add new properties and methods to Business instead.
    Public MustInherit Class BusinessBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal businessId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(businessId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal businessId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(businessId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property BusinessId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(100)>  _
        Public Property BusinessName As String
            Get
                If (Me.IsBusinessNameNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(1),String)
                End If
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        Public Property BusinessTypeId As Integer
            Get
                Return CType(Me(2),Integer)
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        Public Property PartyId As Integer
            Get
                Return CType(Me(3),Integer)
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(5)>  _
        Public Property CITESRegisteredNumber As String
            Get
                If (Me.IsCITESRegisteredNumberNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(4),String)
                End If
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        Public Property DefaultManagementForCountry As Boolean
            Get
                Return CType(Me(5),Boolean)
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(6),Integer)
                End If
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.BusinessService
            Get
                Return CType(GetServiceObject(GetType(Service.BusinessService)),Service.BusinessService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsBusinessNameNull() As Boolean
            Return Me.IsNull(1)
        End Function
        
        Public Sub SetBusinessNameToNull()
            Me(1) = System.DBNull.Value
        End Sub
        
        Public Function IsCITESRegisteredNumberNull() As Boolean
            Return Me.IsNull(4)
        End Function
        
        Public Sub SetCITESRegisteredNumberToNull()
            Me(4) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(6)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(6) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(7)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.BusinessSet
            Return BusinessBase.GetAll(false, false, BusinessServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.BusinessSet
            Return BusinessBase.GetAll(includeHyphen, false, BusinessServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As BusinessServiceBase.OrderBy) As EntitySet.BusinessSet
            Dim service As Service.BusinessService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As BusinessServiceBase.OrderBy) As EntitySet.BusinessSet
            Return BusinessBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal businessId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.Business
            Dim service As Service.BusinessService
            service = ServiceObject
            Return service.GetById(BusinessId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal businessId As Integer) As Entity.Business
            Dim service As Service.BusinessService
            service = ServiceObject
            Return service.GetById(BusinessId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal businessId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.BusinessService
            service = ServiceObject
            Return service.DeleteById(businessId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal businessId As Integer) As Boolean
            Return BusinessBase.DeleteById(businessId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal businessId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return BusinessBase.DeleteById(businessId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForBusinessType(ByVal businessTypeId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.BusinessSet
            Dim service As Service.BusinessService
            service = ServiceObject
            Return service.GetForBusinessType(businessTypeId, tran)
        End Function
        
        Public Overloads Shared Function GetForBusinessType(ByVal businessTypeId As Integer) As EntitySet.BusinessSet
            Return BusinessBase.GetForBusinessType(businessTypeId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForParty(ByVal partyId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.BusinessSet
            Dim service As Service.BusinessService
            service = ServiceObject
            Return service.GetForParty(partyId, tran)
        End Function
        
        Public Overloads Shared Function GetForParty(ByVal partyId As Integer) As EntitySet.BusinessSet
            Return BusinessBase.GetForParty(partyId, Nothing)
        End Function
        
        Public Shared Function Insert(ByVal businessName As Object, ByVal businessTypeId As Integer, ByVal partyId As Integer, ByVal cITESRegisteredNumber As Object, ByVal defaultManagementForCountry As Boolean) As Entity.Business
            Return Entity.Business.ServiceObject.Insert(businessName, businessTypeId, partyId, cITESRegisteredNumber, defaultManagementForCountry)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim businessNameParam As Object
            If (Me.IsBusinessNameNull = false) Then
                businessNameParam = EnterpriseObjects.Common.ParseSQLText(Me.BusinessName)
            Else
                businessNameParam = System.DBNull.Value
            End If
            Dim businessTypeIdParam As Integer = Me.BusinessTypeId
            Dim partyIdParam As Integer = Me.PartyId
            Dim cITESRegisteredNumberParam As Object
            If (Me.IsCITESRegisteredNumberNull = false) Then
                cITESRegisteredNumberParam = EnterpriseObjects.Common.ParseSQLText(Me.CITESRegisteredNumber)
            Else
                cITESRegisteredNumberParam = System.DBNull.Value
            End If
            Dim defaultManagementForCountryParam As Boolean = Me.DefaultManagementForCountry
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.Business.ServiceObject.Update(Me.Id, businessNameParam, businessTypeIdParam, partyIdParam, cITESRegisteredNumberParam, defaultManagementForCountryParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
