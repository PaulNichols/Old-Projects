'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'tblKnownFacts'
    '*DO NOT* modify this file.
    'Add new properties and methods to tblKnownFacts instead.
    Public MustInherit Class tblKnownFactsBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal phoenixFactId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(phoenixFactId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal phoenixFactId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(phoenixFactId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property PhoenixFactId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(10)>  _
        Public Property KnownFact1 As String
            Get
                Return CType(Me(1),String)
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(10)>  _
        Public Property KnownFact2 As String
            Get
                Return CType(Me(2),String)
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        Public Property PartyId As Integer
            Get
                Return CType(Me(3),Integer)
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        Public Property SSOKnownFactId As Integer
            Get
                If (Me.IsSSOKnownFactIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(4),Integer)
                End If
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        Public Property SSOUserId As Integer
            Get
                If (Me.IsSSOUserIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(5),Integer)
                End If
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(6),Integer)
                End If
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.tblKnownFactsService
            Get
                Return CType(GetServiceObject(GetType(Service.tblKnownFactsService)),Service.tblKnownFactsService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsSSOKnownFactIdNull() As Boolean
            Return Me.IsNull(4)
        End Function
        
        Public Sub SetSSOKnownFactIdToNull()
            Me(4) = System.DBNull.Value
        End Sub
        
        Public Function IsSSOUserIdNull() As Boolean
            Return Me.IsNull(5)
        End Function
        
        Public Sub SetSSOUserIdToNull()
            Me(5) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(6)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(6) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(7)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.tblKnownFactsSet
            Return tblKnownFactsBase.GetAll(false, false, tblKnownFactsServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.tblKnownFactsSet
            Return tblKnownFactsBase.GetAll(includeHyphen, false, tblKnownFactsServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As tblKnownFactsServiceBase.OrderBy) As EntitySet.tblKnownFactsSet
            Dim service As Service.tblKnownFactsService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As tblKnownFactsServiceBase.OrderBy) As EntitySet.tblKnownFactsSet
            Return tblKnownFactsBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal phoenixFactId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.tblKnownFacts
            Dim service As Service.tblKnownFactsService
            service = ServiceObject
            Return service.GetById(PhoenixFactId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal phoenixFactId As Integer) As Entity.tblKnownFacts
            Dim service As Service.tblKnownFactsService
            service = ServiceObject
            Return service.GetById(PhoenixFactId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal phoenixFactId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.tblKnownFactsService
            service = ServiceObject
            Return service.DeleteById(phoenixFactId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal phoenixFactId As Integer) As Boolean
            Return tblKnownFactsBase.DeleteById(phoenixFactId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal phoenixFactId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return tblKnownFactsBase.DeleteById(phoenixFactId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForParty(ByVal partyId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.tblKnownFactsSet
            Dim service As Service.tblKnownFactsService
            service = ServiceObject
            Return service.GetForParty(partyId, tran)
        End Function
        
        Public Overloads Shared Function GetForParty(ByVal partyId As Integer) As EntitySet.tblKnownFactsSet
            Return tblKnownFactsBase.GetForParty(partyId, Nothing)
        End Function
        
        Public Shared Function Insert(ByVal knownFact1 As String, ByVal knownFact2 As String, ByVal partyId As Integer, ByVal sSOKnownFactId As Object, ByVal sSOUserId As Object) As Entity.tblKnownFacts
            Return Entity.tblKnownFacts.ServiceObject.Insert(knownFact1, knownFact2, partyId, sSOKnownFactId, sSOUserId)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim knownFact1Param As String = Me.KnownFact1
            Dim knownFact2Param As String = Me.KnownFact2
            Dim partyIdParam As Integer = Me.PartyId
            Dim sSOKnownFactIdParam As Object
            If (Me.IsSSOKnownFactIdNull = false) Then
                sSOKnownFactIdParam = Me.SSOKnownFactId
            Else
                sSOKnownFactIdParam = System.DBNull.Value
            End If
            Dim sSOUserIdParam As Object
            If (Me.IsSSOUserIdNull = false) Then
                sSOUserIdParam = Me.SSOUserId
            Else
                sSOUserIdParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.tblKnownFacts.ServiceObject.Update(Me.Id, knownFact1Param, knownFact2Param, partyIdParam, sSOKnownFactIdParam, sSOUserIdParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
