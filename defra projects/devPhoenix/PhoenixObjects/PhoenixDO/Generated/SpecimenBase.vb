'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'Specimen'
    '*DO NOT* modify this file.
    'Add new properties and methods to Specimen instead.
    Public MustInherit Class SpecimenBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal specimenId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(specimenId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal specimenId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(specimenId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property SpecimenId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Property GenderId As Integer
            Get
                If (Me.IsGenderIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(1),Integer)
                End If
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        Public Property DOB As Date
            Get
                If (Me.IsDOBNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(2),Date)
                End If
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        Public Property FateId As Integer
            Get
                If (Me.IsFateIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(3),Integer)
                End If
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        Public Property FatherSpecimen As Integer
            Get
                If (Me.IsFatherSpecimenNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(4),Integer)
                End If
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        Public Property MotherSpecimen As Integer
            Get
                If (Me.IsMotherSpecimenNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(5),Integer)
                End If
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        Public Property AcquisitionDate As Date
            Get
                If (Me.IsAcquisitionDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(6),Date)
                End If
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property Description As String
            Get
                If (Me.IsDescriptionNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(7),String)
                End If
            End Get
            Set
                Me(7) = value
            End Set
        End Property
        
        Public Property ExactDOB As Boolean
            Get
                Return CType(Me(8),Boolean)
            End Get
            Set
                Me(8) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldDescription("Date fate was entered")>  _
        Public Property FateDate As Date
            Get
                If (Me.IsFateDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(9),Date)
                End If
            End Get
            Set
                Me(9) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(10),Integer)
                End If
            End Get
            Set
                Me(10) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.SpecimenService
            Get
                Return CType(GetServiceObject(GetType(Service.SpecimenService)),Service.SpecimenService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsGenderIdNull() As Boolean
            Return Me.IsNull(1)
        End Function
        
        Public Sub SetGenderIdToNull()
            Me(1) = System.DBNull.Value
        End Sub
        
        Public Function IsDOBNull() As Boolean
            Return Me.IsNull(2)
        End Function
        
        Public Sub SetDOBToNull()
            Me(2) = System.DBNull.Value
        End Sub
        
        Public Function IsFateIdNull() As Boolean
            Return Me.IsNull(3)
        End Function
        
        Public Sub SetFateIdToNull()
            Me(3) = System.DBNull.Value
        End Sub
        
        Public Function IsFatherSpecimenNull() As Boolean
            Return Me.IsNull(4)
        End Function
        
        Public Sub SetFatherSpecimenToNull()
            Me(4) = System.DBNull.Value
        End Sub
        
        Public Function IsMotherSpecimenNull() As Boolean
            Return Me.IsNull(5)
        End Function
        
        Public Sub SetMotherSpecimenToNull()
            Me(5) = System.DBNull.Value
        End Sub
        
        Public Function IsAcquisitionDateNull() As Boolean
            Return Me.IsNull(6)
        End Function
        
        Public Sub SetAcquisitionDateToNull()
            Me(6) = System.DBNull.Value
        End Sub
        
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(7)
        End Function
        
        Public Sub SetDescriptionToNull()
            Me(7) = System.DBNull.Value
        End Sub
        
        Public Function IsFateDateNull() As Boolean
            Return Me.IsNull(9)
        End Function
        
        Public Sub SetFateDateToNull()
            Me(9) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(10)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(10) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(11)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.SpecimenSet
            Return SpecimenBase.GetAll(false, false, SpecimenServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.SpecimenSet
            Return SpecimenBase.GetAll(includeHyphen, false, SpecimenServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As SpecimenServiceBase.OrderBy) As EntitySet.SpecimenSet
            Dim service As Service.SpecimenService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As SpecimenServiceBase.OrderBy) As EntitySet.SpecimenSet
            Return SpecimenBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal specimenId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.Specimen
            Dim service As Service.SpecimenService
            service = ServiceObject
            Return service.GetById(SpecimenId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal specimenId As Integer) As Entity.Specimen
            Dim service As Service.SpecimenService
            service = ServiceObject
            Return service.GetById(SpecimenId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal specimenId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.SpecimenService
            service = ServiceObject
            Return service.DeleteById(specimenId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal specimenId As Integer) As Boolean
            Return SpecimenBase.DeleteById(specimenId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal specimenId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return SpecimenBase.DeleteById(specimenId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForSpecimenFate(ByVal specimenFateID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenSet
            Dim service As Service.SpecimenService
            service = ServiceObject
            Return service.GetForSpecimenFate(specimenFateID, tran)
        End Function
        
        Public Overloads Shared Function GetForSpecimenFate(ByVal specimenFateID As Integer) As EntitySet.SpecimenSet
            Return SpecimenBase.GetForSpecimenFate(specimenFateID, Nothing)
        End Function
        
        Public Overloads Shared Function GetForFatherSpecimenSpecimen(ByVal specimenId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenSet
            Dim service As Service.SpecimenService
            service = ServiceObject
            Return service.GetForFatherSpecimenSpecimen(specimenId, tran)
        End Function
        
        Public Overloads Shared Function GetForFatherSpecimenSpecimen(ByVal specimenId As Integer) As EntitySet.SpecimenSet
            Return SpecimenBase.GetForFatherSpecimenSpecimen(specimenId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForMotherSpecimenSpecimen(ByVal specimenId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenSet
            Dim service As Service.SpecimenService
            service = ServiceObject
            Return service.GetForMotherSpecimenSpecimen(specimenId, tran)
        End Function
        
        Public Overloads Shared Function GetForMotherSpecimenSpecimen(ByVal specimenId As Integer) As EntitySet.SpecimenSet
            Return SpecimenBase.GetForMotherSpecimenSpecimen(specimenId, Nothing)
        End Function
        
        Public Overloads Function GetRelatedParentIDParentSpecimen(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ParentSpecimenSet
            Return Entity.ParentSpecimen.GetForParentIDSpecimen(Me.SpecimenId, tran)
        End Function
        
        Public Overloads Function GetRelatedParentIDParentSpecimen() As EntitySet.ParentSpecimenSet
            Return Me.GetRelatedParentIDParentSpecimen(Nothing)
        End Function
        
        Public Overloads Function GetRelatedSpecimenIDParentSpecimen(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ParentSpecimenSet
            Return Entity.ParentSpecimen.GetForSpecimenIDSpecimen(Me.SpecimenId, tran)
        End Function
        
        Public Overloads Function GetRelatedSpecimenIDParentSpecimen() As EntitySet.ParentSpecimenSet
            Return Me.GetRelatedSpecimenIDParentSpecimen(Nothing)
        End Function
        
        Public Overloads Function GetRelatedPartySpecimen(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PartySpecimenSet
            Return Entity.PartySpecimen.GetForSpecimen(Me.SpecimenId, tran)
        End Function
        
        Public Overloads Function GetRelatedPartySpecimen() As EntitySet.PartySpecimenSet
            Return Me.GetRelatedPartySpecimen(Nothing)
        End Function
        
        Public Overloads Function GetRelatedPermitSpecimen(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitSpecimenSet
            Return Entity.PermitSpecimen.GetForSpecimen(Me.SpecimenId, tran)
        End Function
        
        Public Overloads Function GetRelatedPermitSpecimen() As EntitySet.PermitSpecimenSet
            Return Me.GetRelatedPermitSpecimen(Nothing)
        End Function
        
        Public Overloads Function GetRelatedFatherSpecimenSpecimen(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenSet
            Return Entity.Specimen.GetForFatherSpecimenSpecimen(Me.SpecimenId, tran)
        End Function
        
        Public Overloads Function GetRelatedFatherSpecimenSpecimen() As EntitySet.SpecimenSet
            Return Me.GetRelatedFatherSpecimenSpecimen(Nothing)
        End Function
        
        Public Overloads Function GetRelatedMotherSpecimenSpecimen(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenSet
            Return Entity.Specimen.GetForMotherSpecimenSpecimen(Me.SpecimenId, tran)
        End Function
        
        Public Overloads Function GetRelatedMotherSpecimenSpecimen() As EntitySet.SpecimenSet
            Return Me.GetRelatedMotherSpecimenSpecimen(Nothing)
        End Function
        
        Public Overloads Function GetRelatedSpecimenIDMark(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenIDMarkSet
            Return Entity.SpecimenIDMark.GetForSpecimen(Me.SpecimenId, tran)
        End Function
        
        Public Overloads Function GetRelatedSpecimenIDMark() As EntitySet.SpecimenIDMarkSet
            Return Me.GetRelatedSpecimenIDMark(Nothing)
        End Function
        
        Public Overloads Function GetRelatedSpecimenReport(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenReportSet
            Return Entity.SpecimenReport.GetForSpecimen(Me.SpecimenId, tran)
        End Function
        
        Public Overloads Function GetRelatedSpecimenReport() As EntitySet.SpecimenReportSet
            Return Me.GetRelatedSpecimenReport(Nothing)
        End Function
        
        Public Overloads Function GetRelatedSpecimenSpecie(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenSpecieSet
            Return Entity.SpecimenSpecie.GetForSpecimen(Me.SpecimenId, tran)
        End Function
        
        Public Overloads Function GetRelatedSpecimenSpecie() As EntitySet.SpecimenSpecieSet
            Return Me.GetRelatedSpecimenSpecie(Nothing)
        End Function
        
        Public Shared Function Insert(ByVal genderId As Object, ByVal dOB As Object, ByVal fateId As Object, ByVal fatherSpecimen As Object, ByVal motherSpecimen As Object, ByVal acquisitionDate As Object, ByVal description As Object, ByVal exactDOB As Boolean, ByVal fateDate As Object) As Entity.Specimen
            Return Entity.Specimen.ServiceObject.Insert(genderId, dOB, fateId, fatherSpecimen, motherSpecimen, acquisitionDate, description, exactDOB, fateDate)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim genderIdParam As Object
            If (Me.IsGenderIdNull = false) Then
                genderIdParam = Me.GenderId
            Else
                genderIdParam = System.DBNull.Value
            End If
            Dim dOBParam As Object
            If (Me.IsDOBNull = false) Then
                dOBParam = Me.DOB
            Else
                dOBParam = System.DBNull.Value
            End If
            Dim fateIdParam As Object
            If (Me.IsFateIdNull = false) Then
                fateIdParam = Me.FateId
            Else
                fateIdParam = System.DBNull.Value
            End If
            Dim fatherSpecimenParam As Object
            If (Me.IsFatherSpecimenNull = false) Then
                fatherSpecimenParam = Me.FatherSpecimen
            Else
                fatherSpecimenParam = System.DBNull.Value
            End If
            Dim motherSpecimenParam As Object
            If (Me.IsMotherSpecimenNull = false) Then
                motherSpecimenParam = Me.MotherSpecimen
            Else
                motherSpecimenParam = System.DBNull.Value
            End If
            Dim acquisitionDateParam As Object
            If (Me.IsAcquisitionDateNull = false) Then
                acquisitionDateParam = Me.AcquisitionDate
            Else
                acquisitionDateParam = System.DBNull.Value
            End If
            Dim descriptionParam As Object
            If (Me.IsDescriptionNull = false) Then
                descriptionParam = EnterpriseObjects.Common.ParseSQLText(Me.Description)
            Else
                descriptionParam = System.DBNull.Value
            End If
            Dim exactDOBParam As Boolean = Me.ExactDOB
            Dim fateDateParam As Object
            If (Me.IsFateDateNull = false) Then
                fateDateParam = Me.FateDate
            Else
                fateDateParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.Specimen.ServiceObject.Update(Me.Id, genderIdParam, dOBParam, fateIdParam, fatherSpecimenParam, motherSpecimenParam, acquisitionDateParam, descriptionParam, exactDOBParam, fateDateParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
