'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'Taxon'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class TaxonServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.TaxonSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.TaxonSet
            Return CType(MyBase.GetAll("eosp_SelectTaxon", GetType(EntitySet.TaxonSet), includeHyphen, includeInactive, orderBy),EntitySet.TaxonSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.TaxonSet
            Return Me.GetAll(includeHyphen, includeInactive, TaxonServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, TaxonServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.TaxonSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal taxonID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectTaxon", "TaxonID", taxonID, GetType(EntitySet.TaxonSet), tran),Entity.Taxon)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal taxonID As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(taxonID, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal taxonID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.Taxon
            Return CType(MyBase.GetById("eosp_SelectTaxon", "TaxonID", taxonID, GetType(EntitySet.TaxonSet), tran),Entity.Taxon)
        End Function
        
        Public Overloads Function GetById(ByVal taxonID As Integer) As Entity.Taxon
            Return Me.GetById(taxonID, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal taxonID As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(taxonID, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal taxonID As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteTaxon", "TaxonID", taxonID, checkSum, transaction)
        End Function
        
        'GetForSpecie - links to the Specie table...
        Public Overloads Function GetForSpecie(ByVal SpecieId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.TaxonSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from Taxon where SpecieID=" + SpecieId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.TaxonSet), tran),EntitySet.TaxonSet)
        End Function
        
        'GetForSpecie - links to the Specie table...
        Public Overloads Function GetForSpecie(ByVal SpecieId As Integer) As EntitySet.TaxonSet
            Return Me.GetForSpecie(SpecieId, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal specieID As Integer, ByVal taxonomyKingdomID As Object, ByVal taxonomyTaxonID As Object, ByVal taxonomyTaxonTypeID As Object, ByVal isCoral As Boolean, ByVal paymentKingdom As Object, ByVal paymentTaxonType As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Taxon
            Return Me.GetById(Sprocs.eosp_CreateTaxon(specieID, taxonomyKingdomID, taxonomyTaxonID, taxonomyTaxonTypeID, isCoral, paymentKingdom, paymentTaxonType, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal specieID As Integer, ByVal taxonomyKingdomID As Object, ByVal taxonomyTaxonID As Object, ByVal taxonomyTaxonTypeID As Object, ByVal isCoral As Boolean, ByVal paymentKingdom As Object, ByVal paymentTaxonType As Object) As Entity.Taxon
            Return Me.Insert(specieID, taxonomyKingdomID, taxonomyTaxonID, taxonomyTaxonTypeID, isCoral, paymentKingdom, paymentTaxonType, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal taxon As Entity.Taxon) As Entity.Taxon
            Return Me.Insert(taxon(1), taxon(2), taxon(3), taxon(4), taxon(5), taxon(6), taxon(7))
        End Function
        
        Public Overloads Function Insert(ByVal taxon As Entity.Taxon, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Taxon
            Return Me.Insert(taxon(1), taxon(2), taxon(3), taxon(4), taxon(5), taxon(6), taxon(7), transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal specieID As Integer, ByVal taxonomyKingdomID As Object, ByVal taxonomyTaxonID As Object, ByVal taxonomyTaxonTypeID As Object, ByVal isCoral As Boolean, ByVal paymentKingdom As Object, ByVal paymentTaxonType As Object, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Taxon
            Return Sprocs.eosp_UpdateTaxon(id, specieID, taxonomyKingdomID, taxonomyTaxonID, taxonomyTaxonTypeID, isCoral, paymentKingdom, paymentTaxonType, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal specieID As Integer, ByVal taxonomyKingdomID As Object, ByVal taxonomyTaxonID As Object, ByVal taxonomyTaxonTypeID As Object, ByVal isCoral As Boolean, ByVal paymentKingdom As Object, ByVal paymentTaxonType As Object) As Entity.Taxon
            Return Me.Update(id, specieID, taxonomyKingdomID, taxonomyTaxonID, taxonomyTaxonTypeID, isCoral, paymentKingdom, paymentTaxonType, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal specieID As Integer, ByVal taxonomyKingdomID As Object, ByVal taxonomyTaxonID As Object, ByVal taxonomyTaxonTypeID As Object, ByVal isCoral As Boolean, ByVal paymentKingdom As Object, ByVal paymentTaxonType As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Taxon
            Return Me.Update(id, specieID, taxonomyKingdomID, taxonomyTaxonID, taxonomyTaxonTypeID, isCoral, paymentKingdom, paymentTaxonType, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal specieID As Integer, ByVal taxonomyKingdomID As Object, ByVal taxonomyTaxonID As Object, ByVal taxonomyTaxonTypeID As Object, ByVal isCoral As Boolean, ByVal paymentKingdom As Object, ByVal paymentTaxonType As Object, ByVal checkSum As Integer) As Entity.Taxon
            Return Me.Update(id, specieID, taxonomyKingdomID, taxonomyTaxonID, taxonomyTaxonTypeID, isCoral, paymentKingdom, paymentTaxonType, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal taxon As Entity.Taxon) As Entity.Taxon
            Return Me.Update(taxon.id, taxon(1), taxon(2), taxon(3), taxon(4), taxon(5), taxon(6), taxon(7))
        End Function
        
        Public Overloads Function Update(ByVal taxon As Entity.Taxon, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Taxon
            Return Me.Update(taxon.id, taxon(1), taxon(2), taxon(3), taxon(4), taxon(5), taxon(6), taxon(7), transaction)
        End Function
        
        Public Overloads Function Update(ByVal taxon As Entity.Taxon, ByVal checkSum As Integer) As Entity.Taxon
            Return Me.Update(taxon.id, taxon(1), taxon(2), taxon(3), taxon(4), taxon(5), taxon(6), taxon(7), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal taxon As Entity.Taxon, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Taxon
            Return Me.Update(taxon.id, taxon(1), taxon(2), taxon(3), taxon(4), taxon(5), taxon(6), taxon(7), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_Taxon(ByVal taxonomyKingdomID As Integer, ByVal taxonomyTaxonID As Integer, ByVal taxonomyTaxonTypeID As Integer) As EntitySet.TaxonSet
            Return Sprocs.eosp_SelectTaxon(taxonID:=Nothing, Index_TaxonomyKingdomID:=[taxonomyKingdomID], Index_TaxonomyTaxonID:=[taxonomyTaxonID], Index_TaxonomyTaxonTypeID:=[taxonomyTaxonTypeID], Index_SpecieID:=Nothing, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_Taxon(ByVal taxonomyKingdomID As Integer, ByVal taxonomyTaxonID As Integer, ByVal taxonomyTaxonTypeID As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.TaxonSet
            Return Sprocs.eosp_SelectTaxon(taxonID:=Nothing, Index_TaxonomyKingdomID:=[taxonomyKingdomID], Index_TaxonomyTaxonID:=[taxonomyTaxonID], Index_TaxonomyTaxonTypeID:=[taxonomyTaxonTypeID], Index_SpecieID:=Nothing, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_Taxon_1(ByVal specieID As Integer) As EntitySet.TaxonSet
            Return Sprocs.eosp_SelectTaxon(taxonID:=Nothing, Index_SpecieID:=[specieID], Index_TaxonomyKingdomID:=Nothing, Index_TaxonomyTaxonID:=Nothing, Index_TaxonomyTaxonTypeID:=Nothing, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_Taxon_1(ByVal specieID As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.TaxonSet
            Return Sprocs.eosp_SelectTaxon(taxonID:=Nothing, Index_SpecieID:=[specieID], Index_TaxonomyKingdomID:=Nothing, Index_TaxonomyTaxonID:=Nothing, Index_TaxonomyTaxonTypeID:=Nothing, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            IX_Taxon
            
            IX_Taxon_1
            
            
        End Enum
    End Class
End Namespace
