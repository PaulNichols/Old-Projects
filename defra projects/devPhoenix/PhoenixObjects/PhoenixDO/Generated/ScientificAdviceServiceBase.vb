'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'ScientificAdvice'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class ScientificAdviceServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return true
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.ScientificAdviceSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.ScientificAdviceSet
            Return CType(MyBase.GetAll("eosp_SelectScientificAdvice", GetType(EntitySet.ScientificAdviceSet), includeHyphen, includeInactive, orderBy),EntitySet.ScientificAdviceSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.ScientificAdviceSet
            Return Me.GetAll(includeHyphen, includeInactive, ScientificAdviceServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, ScientificAdviceServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.ScientificAdviceSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal scientificAdviceId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectScientificAdvice", "ScientificAdviceId", scientificAdviceId, GetType(EntitySet.ScientificAdviceSet), tran),Entity.ScientificAdvice)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal scientificAdviceId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(scientificAdviceId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal scientificAdviceId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.ScientificAdvice
            Return CType(MyBase.GetById("eosp_SelectScientificAdvice", "ScientificAdviceId", scientificAdviceId, GetType(EntitySet.ScientificAdviceSet), tran),Entity.ScientificAdvice)
        End Function
        
        Public Overloads Function GetById(ByVal scientificAdviceId As Integer) As Entity.ScientificAdvice
            Return Me.GetById(scientificAdviceId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal scientificAdviceId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(scientificAdviceId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal scientificAdviceId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteScientificAdvice", "ScientificAdviceId", scientificAdviceId, checkSum, transaction)
        End Function
        
        'GetForProgressStatusSAAdvice - links to the ProgressStatusSAAdvice table...
        Public Overloads Function GetForProgressStatusSAAdvice(ByVal ProgressStatusSAAdviceId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ScientificAdviceSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from ScientificAdvice where RecommendedS"& _ 
"tatus=" + ProgressStatusSAAdviceId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.ScientificAdviceSet), tran),EntitySet.ScientificAdviceSet)
        End Function
        
        'GetForProgressStatusSAAdvice - links to the ProgressStatusSAAdvice table...
        Public Overloads Function GetForProgressStatusSAAdvice(ByVal ProgressStatusSAAdviceId As Integer) As EntitySet.ScientificAdviceSet
            Return Me.GetForProgressStatusSAAdvice(ProgressStatusSAAdviceId, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal code As String, ByVal description As String, ByVal adviceText As String, ByVal userRole As Integer, ByVal active As Boolean, ByVal editable As Boolean, ByVal defaultAdviceText As String, ByVal recommendedStatus As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ScientificAdvice
            Return Me.GetById(Sprocs.eosp_CreateScientificAdvice(code, description, adviceText, userRole, active, editable, defaultAdviceText, recommendedStatus, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal code As String, ByVal description As String, ByVal adviceText As String, ByVal userRole As Integer, ByVal active As Boolean, ByVal editable As Boolean, ByVal defaultAdviceText As String, ByVal recommendedStatus As Object) As Entity.ScientificAdvice
            Return Me.Insert(code, description, adviceText, userRole, active, editable, defaultAdviceText, recommendedStatus, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal scientificAdvice As Entity.ScientificAdvice) As Entity.ScientificAdvice
            Return Me.Insert(scientificAdvice(1), scientificAdvice(2), scientificAdvice(3), scientificAdvice(5), scientificAdvice(6), scientificAdvice(7), scientificAdvice(8), scientificAdvice(9))
        End Function
        
        Public Overloads Function Insert(ByVal scientificAdvice As Entity.ScientificAdvice, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ScientificAdvice
            Return Me.Insert(scientificAdvice(1), scientificAdvice(2), scientificAdvice(3), scientificAdvice(5), scientificAdvice(6), scientificAdvice(7), scientificAdvice(8), scientificAdvice(9), transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal code As String, ByVal description As String, ByVal adviceText As String, ByVal userRole As Integer, ByVal active As Boolean, ByVal editable As Boolean, ByVal defaultAdviceText As String, ByVal recommendedStatus As Object, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ScientificAdvice
            Return Sprocs.eosp_UpdateScientificAdvice(id, code, description, adviceText, userRole, active, editable, defaultAdviceText, recommendedStatus, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal code As String, ByVal description As String, ByVal adviceText As String, ByVal userRole As Integer, ByVal active As Boolean, ByVal editable As Boolean, ByVal defaultAdviceText As String, ByVal recommendedStatus As Object) As Entity.ScientificAdvice
            Return Me.Update(id, code, description, adviceText, userRole, active, editable, defaultAdviceText, recommendedStatus, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal code As String, ByVal description As String, ByVal adviceText As String, ByVal userRole As Integer, ByVal active As Boolean, ByVal editable As Boolean, ByVal defaultAdviceText As String, ByVal recommendedStatus As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ScientificAdvice
            Return Me.Update(id, code, description, adviceText, userRole, active, editable, defaultAdviceText, recommendedStatus, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal code As String, ByVal description As String, ByVal adviceText As String, ByVal userRole As Integer, ByVal active As Boolean, ByVal editable As Boolean, ByVal defaultAdviceText As String, ByVal recommendedStatus As Object, ByVal checkSum As Integer) As Entity.ScientificAdvice
            Return Me.Update(id, code, description, adviceText, userRole, active, editable, defaultAdviceText, recommendedStatus, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal scientificAdvice As Entity.ScientificAdvice) As Entity.ScientificAdvice
            Return Me.Update(scientificAdvice.id, scientificAdvice(1), scientificAdvice(2), scientificAdvice(3), scientificAdvice(5), scientificAdvice(6), scientificAdvice(7), scientificAdvice(8), scientificAdvice(9))
        End Function
        
        Public Overloads Function Update(ByVal scientificAdvice As Entity.ScientificAdvice, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ScientificAdvice
            Return Me.Update(scientificAdvice.id, scientificAdvice(1), scientificAdvice(2), scientificAdvice(3), scientificAdvice(5), scientificAdvice(6), scientificAdvice(7), scientificAdvice(8), scientificAdvice(9), transaction)
        End Function
        
        Public Overloads Function Update(ByVal scientificAdvice As Entity.ScientificAdvice, ByVal checkSum As Integer) As Entity.ScientificAdvice
            Return Me.Update(scientificAdvice.id, scientificAdvice(1), scientificAdvice(2), scientificAdvice(3), scientificAdvice(5), scientificAdvice(6), scientificAdvice(7), scientificAdvice(8), scientificAdvice(9), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal scientificAdvice As Entity.ScientificAdvice, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ScientificAdvice
            Return Me.Update(scientificAdvice.id, scientificAdvice(1), scientificAdvice(2), scientificAdvice(3), scientificAdvice(5), scientificAdvice(6), scientificAdvice(7), scientificAdvice(8), scientificAdvice(9), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_ScientificAdvice(ByVal code As String, ByVal description As String, ByVal includeInactive As Boolean) As EntitySet.ScientificAdviceSet
            Return Sprocs.eosp_SelectScientificAdvice(scientificAdviceId:=Nothing, Index_Code:=[code], Index_Description:=[description], includeInactive:=includeInactive, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_ScientificAdvice(ByVal code As String, ByVal description As String, ByVal includeInactive As Boolean, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.ScientificAdviceSet
            Return Sprocs.eosp_SelectScientificAdvice(scientificAdviceId:=Nothing, Index_Code:=[code], Index_Description:=[description], includeInactive:=includeInactive, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_ScientificAdvice_1(ByVal code As String, ByVal includeInactive As Boolean) As EntitySet.ScientificAdviceSet
            Return Sprocs.eosp_SelectScientificAdvice(scientificAdviceId:=Nothing, Index_Code:=[code], Index_Description:=Nothing, includeInactive:=includeInactive, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_ScientificAdvice_1(ByVal code As String, ByVal includeInactive As Boolean, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.ScientificAdviceSet
            Return Sprocs.eosp_SelectScientificAdvice(scientificAdviceId:=Nothing, Index_Code:=[code], Index_Description:=Nothing, includeInactive:=includeInactive, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            IX_ScientificAdvice
            
            IX_ScientificAdvice_1
            
            
        End Enum
    End Class
End Namespace
