'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'Permit'
    '*DO NOT* modify this file.
    'Add new properties and methods to Permit instead.
    Public MustInherit Class PermitBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal permitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(permitId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal permitId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(permitId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property PermitId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Property CountryOfOriginId As Integer
            Get
                If (Me.IsCountryOfOriginIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(1),Integer)
                End If
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        Public Property CountryOfOriginPermitDate As Date
            Get
                If (Me.IsCountryOfOriginPermitDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(2),Date)
                End If
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(10)>  _
        Public Property CountryOfOriginPermitNumber As String
            Get
                If (Me.IsCountryOfOriginPermitNumberNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(3),String)
                End If
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        Public Property PermitDate As Date
            Get
                If (Me.IsPermitDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(4),Date)
                End If
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(255)>  _
        Public Property Description As String
            Get
                If (Me.IsDescriptionNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(5),String)
                End If
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        Public Property NumberOfCopies As Integer
            Get
                If (Me.IsNumberOfCopiesNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(6),Integer)
                End If
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        Public Property SpecieId As Integer
            Get
                If (Me.IsSpecieIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(7),Integer)
                End If
            End Get
            Set
                Me(7) = value
            End Set
        End Property
        
        Public Property ExpiryDate As Date
            Get
                If (Me.IsExpiryDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(8),Date)
                End If
            End Get
            Set
                Me(8) = value
            End Set
        End Property
        
        Public Property ApplicationId As Integer
            Get
                Return CType(Me(9),Integer)
            End Get
            Set
                Me(9) = value
            End Set
        End Property
        
        Public Property PermitNumber As Integer
            Get
                Return CType(Me(10),Integer)
            End Get
            Set
                Me(10) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property KewAdvice As String
            Get
                If (Me.IsKewAdviceNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(11),String)
                End If
            End Get
            Set
                Me(11) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property JNCCAdvice As String
            Get
                If (Me.IsJNCCAdviceNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(12),String)
                End If
            End Get
            Set
                Me(12) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property ApplicationReference As String
            Get
                If (Me.IsApplicationReferenceNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(13),String)
                End If
            End Get
            Set
                Me(13) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(14),Integer)
                End If
            End Get
            Set
                Me(14) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.PermitService
            Get
                Return CType(GetServiceObject(GetType(Service.PermitService)),Service.PermitService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsCountryOfOriginIdNull() As Boolean
            Return Me.IsNull(1)
        End Function
        
        Public Sub SetCountryOfOriginIdToNull()
            Me(1) = System.DBNull.Value
        End Sub
        
        Public Function IsCountryOfOriginPermitDateNull() As Boolean
            Return Me.IsNull(2)
        End Function
        
        Public Sub SetCountryOfOriginPermitDateToNull()
            Me(2) = System.DBNull.Value
        End Sub
        
        Public Function IsCountryOfOriginPermitNumberNull() As Boolean
            Return Me.IsNull(3)
        End Function
        
        Public Sub SetCountryOfOriginPermitNumberToNull()
            Me(3) = System.DBNull.Value
        End Sub
        
        Public Function IsPermitDateNull() As Boolean
            Return Me.IsNull(4)
        End Function
        
        Public Sub SetPermitDateToNull()
            Me(4) = System.DBNull.Value
        End Sub
        
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(5)
        End Function
        
        Public Sub SetDescriptionToNull()
            Me(5) = System.DBNull.Value
        End Sub
        
        Public Function IsNumberOfCopiesNull() As Boolean
            Return Me.IsNull(6)
        End Function
        
        Public Sub SetNumberOfCopiesToNull()
            Me(6) = System.DBNull.Value
        End Sub
        
        Public Function IsSpecieIdNull() As Boolean
            Return Me.IsNull(7)
        End Function
        
        Public Sub SetSpecieIdToNull()
            Me(7) = System.DBNull.Value
        End Sub
        
        Public Function IsExpiryDateNull() As Boolean
            Return Me.IsNull(8)
        End Function
        
        Public Sub SetExpiryDateToNull()
            Me(8) = System.DBNull.Value
        End Sub
        
        Public Function IsKewAdviceNull() As Boolean
            Return Me.IsNull(11)
        End Function
        
        Public Sub SetKewAdviceToNull()
            Me(11) = System.DBNull.Value
        End Sub
        
        Public Function IsJNCCAdviceNull() As Boolean
            Return Me.IsNull(12)
        End Function
        
        Public Sub SetJNCCAdviceToNull()
            Me(12) = System.DBNull.Value
        End Sub
        
        Public Function IsApplicationReferenceNull() As Boolean
            Return Me.IsNull(13)
        End Function
        
        Public Sub SetApplicationReferenceToNull()
            Me(13) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(14)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(14) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(15)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.PermitSet
            Return PermitBase.GetAll(false, false, PermitServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.PermitSet
            Return PermitBase.GetAll(includeHyphen, false, PermitServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As PermitServiceBase.OrderBy) As EntitySet.PermitSet
            Dim service As Service.PermitService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As PermitServiceBase.OrderBy) As EntitySet.PermitSet
            Return PermitBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal permitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.Permit
            Dim service As Service.PermitService
            service = ServiceObject
            Return service.GetById(PermitId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal permitId As Integer) As Entity.Permit
            Dim service As Service.PermitService
            service = ServiceObject
            Return service.GetById(PermitId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal permitId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.PermitService
            service = ServiceObject
            Return service.DeleteById(permitId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal permitId As Integer) As Boolean
            Return PermitBase.DeleteById(permitId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal permitId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return PermitBase.DeleteById(permitId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForCountry(ByVal countryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitSet
            Dim service As Service.PermitService
            service = ServiceObject
            Return service.GetForCountry(countryId, tran)
        End Function
        
        Public Overloads Shared Function GetForCountry(ByVal countryId As Integer) As EntitySet.PermitSet
            Return PermitBase.GetForCountry(countryId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForSpecie(ByVal specieId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitSet
            Dim service As Service.PermitService
            service = ServiceObject
            Return service.GetForSpecie(specieId, tran)
        End Function
        
        Public Overloads Shared Function GetForSpecie(ByVal specieId As Integer) As EntitySet.PermitSet
            Return PermitBase.GetForSpecie(specieId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForApplication(ByVal applicationId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitSet
            Dim service As Service.PermitService
            service = ServiceObject
            Return service.GetForApplication(applicationId, tran)
        End Function
        
        Public Overloads Shared Function GetForApplication(ByVal applicationId As Integer) As EntitySet.PermitSet
            Return PermitBase.GetForApplication(applicationId, Nothing)
        End Function
        
        Public Overloads Function GetRelatedCITESPermit(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CITESPermitSet
            Return Entity.CITESPermit.GetForPermit(Me.PermitId, tran)
        End Function
        
        Public Overloads Function GetRelatedCITESPermit() As EntitySet.CITESPermitSet
            Return Me.GetRelatedCITESPermit(Nothing)
        End Function
        
     
        
        Public Overloads Function GetRelatedPermitApplicationLetter(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitApplicationLetterSet
            Return Entity.PermitApplicationLetter.GetForPermit(Me.PermitId, tran)
        End Function
        
        Public Overloads Function GetRelatedPermitApplicationLetter() As EntitySet.PermitApplicationLetterSet
            Return Me.GetRelatedPermitApplicationLetter(Nothing)
        End Function
        
        Public Overloads Function GetRelatedPermitDerogationGuildline(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitDerogationGuildlineSet
            Return Entity.PermitDerogationGuildline.GetForPermit(Me.PermitId, tran)
        End Function
        
        Public Overloads Function GetRelatedPermitDerogationGuildline() As EntitySet.PermitDerogationGuildlineSet
            Return Me.GetRelatedPermitDerogationGuildline(Nothing)
        End Function
        
        Public Overloads Function GetRelatedPermitInfo(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Return Entity.PermitInfo.GetForPermit(Me.PermitId, tran)
        End Function
        
        Public Overloads Function GetRelatedPermitInfo() As EntitySet.PermitInfoSet
            Return Me.GetRelatedPermitInfo(Nothing)
        End Function
        
        Public Overloads Function GetRelatedPermitNote(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitNoteSet
            Return Entity.PermitNote.GetForPermit(Me.PermitId, tran)
        End Function
        
        Public Overloads Function GetRelatedPermitNote() As EntitySet.PermitNoteSet
            Return Me.GetRelatedPermitNote(Nothing)
        End Function
        
        Public Overloads Function GetRelatedPermitScientificAdvice(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitScientificAdviceSet
            Return Entity.PermitScientificAdvice.GetForPermit(Me.PermitId, tran)
        End Function
        
        Public Overloads Function GetRelatedPermitScientificAdvice() As EntitySet.PermitScientificAdviceSet
            Return Me.GetRelatedPermitScientificAdvice(Nothing)
        End Function
        
        Public Overloads Function GetRelatedPermitSpecialCondition(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitSpecialConditionSet
            Return Entity.PermitSpecialCondition.GetForPermit(Me.PermitId, tran)
        End Function
        
        Public Overloads Function GetRelatedPermitSpecialCondition() As EntitySet.PermitSpecialConditionSet
            Return Me.GetRelatedPermitSpecialCondition(Nothing)
        End Function
        
        Public Overloads Function GetRelatedPermitSpecimen(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitSpecimenSet
            Return Entity.PermitSpecimen.GetForPermit(Me.PermitId, tran)
        End Function
        
        Public Overloads Function GetRelatedPermitSpecimen() As EntitySet.PermitSpecimenSet
            Return Me.GetRelatedPermitSpecimen(Nothing)
        End Function
        
        Public Overloads Function GetRelatedPrintDuplicate(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PrintDuplicateSet
            Return Entity.PrintDuplicate.GetForPermit(Me.PermitId, tran)
        End Function
        
        Public Overloads Function GetRelatedPrintDuplicate() As EntitySet.PrintDuplicateSet
            Return Me.GetRelatedPrintDuplicate(Nothing)
        End Function
        
        Public Overloads Function GetRelatedPermitIdRelatedPermits(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.RelatedPermitsSet
            Return Entity.RelatedPermits.GetForPermitIdPermit(Me.PermitId, tran)
        End Function
        
        Public Overloads Function GetRelatedPermitIdRelatedPermits() As EntitySet.RelatedPermitsSet
            Return Me.GetRelatedPermitIdRelatedPermits(Nothing)
        End Function
        
        Public Overloads Function GetRelatedRelatedPermitIdRelatedPermits(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.RelatedPermitsSet
            Return Entity.RelatedPermits.GetForRelatedPermitIdPermit(Me.PermitId, tran)
        End Function
        
        Public Overloads Function GetRelatedRelatedPermitIdRelatedPermits() As EntitySet.RelatedPermitsSet
            Return Me.GetRelatedRelatedPermitIdRelatedPermits(Nothing)
        End Function
        
        Public Overloads Function GetRelatedSeizureToPermitLink(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SeizureToPermitLinkSet
            Return Entity.SeizureToPermitLink.GetForPermit(Me.PermitId, tran)
        End Function
        
        Public Overloads Function GetRelatedSeizureToPermitLink() As EntitySet.SeizureToPermitLinkSet
            Return Me.GetRelatedSeizureToPermitLink(Nothing)
        End Function
        
        Public Overloads Function GetRelatedSpecimenReport(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenReportSet
            Return Entity.SpecimenReport.GetForPermit(Me.PermitId, tran)
        End Function
        
        Public Overloads Function GetRelatedSpecimenReport() As EntitySet.SpecimenReportSet
            Return Me.GetRelatedSpecimenReport(Nothing)
        End Function
        
        Public Overloads Function GetRelatedArticle10CertificateFate(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.Article10CertificateFateSet
            Return Entity.Article10CertificateFate.GetForPermit(Me.PermitId, tran)
        End Function
        
        Public Overloads Function GetRelatedArticle10CertificateFate() As EntitySet.Article10CertificateFateSet
            Return Me.GetRelatedArticle10CertificateFate(Nothing)
        End Function
        
        Public Shared Function Insert(ByVal countryOfOriginId As Object, ByVal countryOfOriginPermitDate As Object, ByVal countryOfOriginPermitNumber As Object, ByVal permitDate As Object, ByVal description As Object, ByVal numberOfCopies As Object, ByVal specieId As Object, ByVal expiryDate As Object, ByVal applicationId As Integer, ByVal permitNumber As Integer, ByVal kewAdvice As Object, ByVal jNCCAdvice As Object) As Entity.Permit
            Return Entity.Permit.ServiceObject.Insert(countryOfOriginId, countryOfOriginPermitDate, countryOfOriginPermitNumber, permitDate, description, numberOfCopies, specieId, expiryDate, applicationId, permitNumber, kewAdvice, jNCCAdvice)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim countryOfOriginIdParam As Object
            If (Me.IsCountryOfOriginIdNull = false) Then
                countryOfOriginIdParam = Me.CountryOfOriginId
            Else
                countryOfOriginIdParam = System.DBNull.Value
            End If
            Dim countryOfOriginPermitDateParam As Object
            If (Me.IsCountryOfOriginPermitDateNull = false) Then
                countryOfOriginPermitDateParam = Me.CountryOfOriginPermitDate
            Else
                countryOfOriginPermitDateParam = System.DBNull.Value
            End If
            Dim countryOfOriginPermitNumberParam As Object
            If (Me.IsCountryOfOriginPermitNumberNull = false) Then
                countryOfOriginPermitNumberParam = EnterpriseObjects.Common.ParseSQLText(Me.CountryOfOriginPermitNumber)
            Else
                countryOfOriginPermitNumberParam = System.DBNull.Value
            End If
            Dim permitDateParam As Object
            If (Me.IsPermitDateNull = false) Then
                permitDateParam = Me.PermitDate
            Else
                permitDateParam = System.DBNull.Value
            End If
            Dim descriptionParam As Object
            If (Me.IsDescriptionNull = false) Then
                descriptionParam = EnterpriseObjects.Common.ParseSQLText(Me.Description)
            Else
                descriptionParam = System.DBNull.Value
            End If
            Dim numberOfCopiesParam As Object
            If (Me.IsNumberOfCopiesNull = false) Then
                numberOfCopiesParam = Me.NumberOfCopies
            Else
                numberOfCopiesParam = System.DBNull.Value
            End If
            Dim specieIdParam As Object
            If (Me.IsSpecieIdNull = false) Then
                specieIdParam = Me.SpecieId
            Else
                specieIdParam = System.DBNull.Value
            End If
            Dim expiryDateParam As Object
            If (Me.IsExpiryDateNull = false) Then
                expiryDateParam = Me.ExpiryDate
            Else
                expiryDateParam = System.DBNull.Value
            End If
            Dim applicationIdParam As Integer = Me.ApplicationId
            Dim permitNumberParam As Integer = Me.PermitNumber
            Dim kewAdviceParam As Object
            If (Me.IsKewAdviceNull = false) Then
                kewAdviceParam = EnterpriseObjects.Common.ParseSQLText(Me.KewAdvice)
            Else
                kewAdviceParam = System.DBNull.Value
            End If
            Dim jNCCAdviceParam As Object
            If (Me.IsJNCCAdviceNull = false) Then
                jNCCAdviceParam = EnterpriseObjects.Common.ParseSQLText(Me.JNCCAdvice)
            Else
                jNCCAdviceParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.Permit.ServiceObject.Update(Me.Id, countryOfOriginIdParam, countryOfOriginPermitDateParam, countryOfOriginPermitNumberParam, permitDateParam, descriptionParam, numberOfCopiesParam, specieIdParam, expiryDateParam, applicationIdParam, permitNumberParam, kewAdviceParam, jNCCAdviceParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
