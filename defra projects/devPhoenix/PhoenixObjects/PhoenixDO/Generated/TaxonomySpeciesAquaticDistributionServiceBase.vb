'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'TaxonomySpeciesAquaticDistribution'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class TaxonomySpeciesAquaticDistributionServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.TaxonomySpeciesAquaticDistributionSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.TaxonomySpeciesAquaticDistributionSet
            Return CType(MyBase.GetAll("eosp_SelectTaxonomySpeciesAquaticDistribution", GetType(EntitySet.TaxonomySpeciesAquaticDistributionSet), includeHyphen, includeInactive, orderBy),EntitySet.TaxonomySpeciesAquaticDistributionSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.TaxonomySpeciesAquaticDistributionSet
            Return Me.GetAll(includeHyphen, includeInactive, TaxonomySpeciesAquaticDistributionServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, TaxonomySpeciesAquaticDistributionServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.TaxonomySpeciesAquaticDistributionSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal speciesAquaticDistributionID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectTaxonomySpeciesAquaticDistribution", "SpeciesAquaticDistributionID", speciesAquaticDistributionID, GetType(EntitySet.TaxonomySpeciesAquaticDistributionSet), tran),Entity.TaxonomySpeciesAquaticDistribution)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal speciesAquaticDistributionID As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(speciesAquaticDistributionID, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal speciesAquaticDistributionID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomySpeciesAquaticDistribution
            Return CType(MyBase.GetById("eosp_SelectTaxonomySpeciesAquaticDistribution", "SpeciesAquaticDistributionID", speciesAquaticDistributionID, GetType(EntitySet.TaxonomySpeciesAquaticDistributionSet), tran),Entity.TaxonomySpeciesAquaticDistribution)
        End Function
        
        Public Overloads Function GetById(ByVal speciesAquaticDistributionID As Integer) As Entity.TaxonomySpeciesAquaticDistribution
            Return Me.GetById(speciesAquaticDistributionID, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal speciesAquaticDistributionID As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(speciesAquaticDistributionID, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal speciesAquaticDistributionID As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteTaxonomySpeciesAquaticDistribution", "SpeciesAquaticDistributionID", speciesAquaticDistributionID, checkSum, transaction)
        End Function
        
        'GetForTaxonomyAquaticRegion - links to the TaxonomyAquaticRegion table...
        Public Overloads Function GetForTaxonomyAquaticRegion(ByVal AquaticRegionID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.TaxonomySpeciesAquaticDistributionSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from TaxonomySpeciesAquaticDistribution "& _ 
"where AquaticRegionID=" + AquaticRegionID.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.TaxonomySpeciesAquaticDistributionSet), tran),EntitySet.TaxonomySpeciesAquaticDistributionSet)
        End Function
        
        'GetForTaxonomyAquaticRegion - links to the TaxonomyAquaticRegion table...
        Public Overloads Function GetForTaxonomyAquaticRegion(ByVal AquaticRegionID As Integer) As EntitySet.TaxonomySpeciesAquaticDistributionSet
            Return Me.GetForTaxonomyAquaticRegion(AquaticRegionID, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal speciesAquaticDistributionID As Integer, ByVal kingdomId As Integer, ByVal taxonID As Integer, ByVal taxonTypeID As Integer, ByVal aquaticRegionID As Integer, ByVal certain As String, ByVal extinct As String, ByVal introduced As String, ByVal reIntroduced As String, ByVal speciesAquaticDistributionNoteID As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomySpeciesAquaticDistribution
            Return Me.GetById(Sprocs.eosp_CreateTaxonomySpeciesAquaticDistribution(speciesAquaticDistributionID, kingdomId, taxonID, taxonTypeID, aquaticRegionID, certain, extinct, introduced, reIntroduced, speciesAquaticDistributionNoteID, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal speciesAquaticDistributionID As Integer, ByVal kingdomId As Integer, ByVal taxonID As Integer, ByVal taxonTypeID As Integer, ByVal aquaticRegionID As Integer, ByVal certain As String, ByVal extinct As String, ByVal introduced As String, ByVal reIntroduced As String, ByVal speciesAquaticDistributionNoteID As Object) As Entity.TaxonomySpeciesAquaticDistribution
            Return Me.Insert(speciesAquaticDistributionID, kingdomId, taxonID, taxonTypeID, aquaticRegionID, certain, extinct, introduced, reIntroduced, speciesAquaticDistributionNoteID, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal taxonomySpeciesAquaticDistribution As Entity.TaxonomySpeciesAquaticDistribution) As Entity.TaxonomySpeciesAquaticDistribution
            Return Me.Insert(taxonomySpeciesAquaticDistribution(0), taxonomySpeciesAquaticDistribution(1), taxonomySpeciesAquaticDistribution(2), taxonomySpeciesAquaticDistribution(3), taxonomySpeciesAquaticDistribution(4), taxonomySpeciesAquaticDistribution(5), taxonomySpeciesAquaticDistribution(6), taxonomySpeciesAquaticDistribution(7), taxonomySpeciesAquaticDistribution(8), taxonomySpeciesAquaticDistribution(9))
        End Function
        
        Public Overloads Function Insert(ByVal taxonomySpeciesAquaticDistribution As Entity.TaxonomySpeciesAquaticDistribution, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomySpeciesAquaticDistribution
            Return Me.Insert(taxonomySpeciesAquaticDistribution(0), taxonomySpeciesAquaticDistribution(1), taxonomySpeciesAquaticDistribution(2), taxonomySpeciesAquaticDistribution(3), taxonomySpeciesAquaticDistribution(4), taxonomySpeciesAquaticDistribution(5), taxonomySpeciesAquaticDistribution(6), taxonomySpeciesAquaticDistribution(7), taxonomySpeciesAquaticDistribution(8), taxonomySpeciesAquaticDistribution(9), transaction)
        End Function
        
        Public Overloads Function Update(ByVal speciesAquaticDistributionID As Integer, ByVal kingdomId As Integer, ByVal taxonID As Integer, ByVal taxonTypeID As Integer, ByVal aquaticRegionID As Integer, ByVal certain As String, ByVal extinct As String, ByVal introduced As String, ByVal reIntroduced As String, ByVal speciesAquaticDistributionNoteID As Object, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomySpeciesAquaticDistribution
            Return Sprocs.eosp_UpdateTaxonomySpeciesAquaticDistribution(speciesAquaticDistributionID, kingdomId, taxonID, taxonTypeID, aquaticRegionID, certain, extinct, introduced, reIntroduced, speciesAquaticDistributionNoteID, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal speciesAquaticDistributionID As Integer, ByVal kingdomId As Integer, ByVal taxonID As Integer, ByVal taxonTypeID As Integer, ByVal aquaticRegionID As Integer, ByVal certain As String, ByVal extinct As String, ByVal introduced As String, ByVal reIntroduced As String, ByVal speciesAquaticDistributionNoteID As Object) As Entity.TaxonomySpeciesAquaticDistribution
            Return Me.Update(speciesAquaticDistributionID, kingdomId, taxonID, taxonTypeID, aquaticRegionID, certain, extinct, introduced, reIntroduced, speciesAquaticDistributionNoteID, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal speciesAquaticDistributionID As Integer, ByVal kingdomId As Integer, ByVal taxonID As Integer, ByVal taxonTypeID As Integer, ByVal aquaticRegionID As Integer, ByVal certain As String, ByVal extinct As String, ByVal introduced As String, ByVal reIntroduced As String, ByVal speciesAquaticDistributionNoteID As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomySpeciesAquaticDistribution
            Return Me.Update(speciesAquaticDistributionID, kingdomId, taxonID, taxonTypeID, aquaticRegionID, certain, extinct, introduced, reIntroduced, speciesAquaticDistributionNoteID, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal speciesAquaticDistributionID As Integer, ByVal kingdomId As Integer, ByVal taxonID As Integer, ByVal taxonTypeID As Integer, ByVal aquaticRegionID As Integer, ByVal certain As String, ByVal extinct As String, ByVal introduced As String, ByVal reIntroduced As String, ByVal speciesAquaticDistributionNoteID As Object, ByVal checkSum As Integer) As Entity.TaxonomySpeciesAquaticDistribution
            Return Me.Update(speciesAquaticDistributionID, kingdomId, taxonID, taxonTypeID, aquaticRegionID, certain, extinct, introduced, reIntroduced, speciesAquaticDistributionNoteID, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal taxonomySpeciesAquaticDistribution As Entity.TaxonomySpeciesAquaticDistribution) As Entity.TaxonomySpeciesAquaticDistribution
            Return Me.Update(taxonomySpeciesAquaticDistribution(0), taxonomySpeciesAquaticDistribution(1), taxonomySpeciesAquaticDistribution(2), taxonomySpeciesAquaticDistribution(3), taxonomySpeciesAquaticDistribution(4), taxonomySpeciesAquaticDistribution(5), taxonomySpeciesAquaticDistribution(6), taxonomySpeciesAquaticDistribution(7), taxonomySpeciesAquaticDistribution(8), taxonomySpeciesAquaticDistribution(9))
        End Function
        
        Public Overloads Function Update(ByVal taxonomySpeciesAquaticDistribution As Entity.TaxonomySpeciesAquaticDistribution, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomySpeciesAquaticDistribution
            Return Me.Update(taxonomySpeciesAquaticDistribution(0), taxonomySpeciesAquaticDistribution(1), taxonomySpeciesAquaticDistribution(2), taxonomySpeciesAquaticDistribution(3), taxonomySpeciesAquaticDistribution(4), taxonomySpeciesAquaticDistribution(5), taxonomySpeciesAquaticDistribution(6), taxonomySpeciesAquaticDistribution(7), taxonomySpeciesAquaticDistribution(8), taxonomySpeciesAquaticDistribution(9), transaction)
        End Function
        
        Public Overloads Function Update(ByVal taxonomySpeciesAquaticDistribution As Entity.TaxonomySpeciesAquaticDistribution, ByVal checkSum As Integer) As Entity.TaxonomySpeciesAquaticDistribution
            Return Me.Update(taxonomySpeciesAquaticDistribution(0), taxonomySpeciesAquaticDistribution(1), taxonomySpeciesAquaticDistribution(2), taxonomySpeciesAquaticDistribution(3), taxonomySpeciesAquaticDistribution(4), taxonomySpeciesAquaticDistribution(5), taxonomySpeciesAquaticDistribution(6), taxonomySpeciesAquaticDistribution(7), taxonomySpeciesAquaticDistribution(8), taxonomySpeciesAquaticDistribution(9), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal taxonomySpeciesAquaticDistribution As Entity.TaxonomySpeciesAquaticDistribution, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomySpeciesAquaticDistribution
            Return Me.Update(taxonomySpeciesAquaticDistribution(0), taxonomySpeciesAquaticDistribution(1), taxonomySpeciesAquaticDistribution(2), taxonomySpeciesAquaticDistribution(3), taxonomySpeciesAquaticDistribution(4), taxonomySpeciesAquaticDistribution(5), taxonomySpeciesAquaticDistribution(6), taxonomySpeciesAquaticDistribution(7), taxonomySpeciesAquaticDistribution(8), taxonomySpeciesAquaticDistribution(9), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_TaxonomySpeciesAquaticDistribution(ByVal kingdomId As Integer, ByVal taxonID As Integer, ByVal taxonTypeID As Integer) As EntitySet.TaxonomySpeciesAquaticDistributionSet
            Return Sprocs.eosp_SelectTaxonomySpeciesAquaticDistribution(speciesAquaticDistributionID:=Nothing, Index_KingdomId:=[kingdomId], Index_TaxonID:=[taxonID], Index_TaxonTypeID:=[taxonTypeID], Index_AquaticRegionID:=Nothing, Index_SpeciesAquaticDistributionNoteID:=Nothing, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_TaxonomySpeciesAquaticDistribution(ByVal kingdomId As Integer, ByVal taxonID As Integer, ByVal taxonTypeID As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.TaxonomySpeciesAquaticDistributionSet
            Return Sprocs.eosp_SelectTaxonomySpeciesAquaticDistribution(speciesAquaticDistributionID:=Nothing, Index_KingdomId:=[kingdomId], Index_TaxonID:=[taxonID], Index_TaxonTypeID:=[taxonTypeID], Index_AquaticRegionID:=Nothing, Index_SpeciesAquaticDistributionNoteID:=Nothing, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_TaxonomySpeciesAquaticDistribution_1(ByVal aquaticRegionID As Integer) As EntitySet.TaxonomySpeciesAquaticDistributionSet
            Return Sprocs.eosp_SelectTaxonomySpeciesAquaticDistribution(speciesAquaticDistributionID:=Nothing, Index_AquaticRegionID:=[aquaticRegionID], Index_KingdomId:=Nothing, Index_TaxonID:=Nothing, Index_TaxonTypeID:=Nothing, Index_SpeciesAquaticDistributionNoteID:=Nothing, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_TaxonomySpeciesAquaticDistribution_1(ByVal aquaticRegionID As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.TaxonomySpeciesAquaticDistributionSet
            Return Sprocs.eosp_SelectTaxonomySpeciesAquaticDistribution(speciesAquaticDistributionID:=Nothing, Index_AquaticRegionID:=[aquaticRegionID], Index_KingdomId:=Nothing, Index_TaxonID:=Nothing, Index_TaxonTypeID:=Nothing, Index_SpeciesAquaticDistributionNoteID:=Nothing, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_TaxonomySpeciesAquaticDistribution_2(ByVal speciesAquaticDistributionNoteID As Integer) As EntitySet.TaxonomySpeciesAquaticDistributionSet
            Return Sprocs.eosp_SelectTaxonomySpeciesAquaticDistribution(speciesAquaticDistributionID:=Nothing, Index_SpeciesAquaticDistributionNoteID:=[speciesAquaticDistributionNoteID], Index_KingdomId:=Nothing, Index_TaxonID:=Nothing, Index_TaxonTypeID:=Nothing, Index_AquaticRegionID:=Nothing, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_TaxonomySpeciesAquaticDistribution_2(ByVal speciesAquaticDistributionNoteID As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.TaxonomySpeciesAquaticDistributionSet
            Return Sprocs.eosp_SelectTaxonomySpeciesAquaticDistribution(speciesAquaticDistributionID:=Nothing, Index_SpeciesAquaticDistributionNoteID:=[speciesAquaticDistributionNoteID], Index_KingdomId:=Nothing, Index_TaxonID:=Nothing, Index_TaxonTypeID:=Nothing, Index_AquaticRegionID:=Nothing, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            IX_TaxonomySpeciesAquaticDistribution
            
            IX_TaxonomySpeciesAquaticDistribution_1
            
            IX_TaxonomySpeciesAquaticDistribution_2
            
            
        End Enum
    End Class
End Namespace
