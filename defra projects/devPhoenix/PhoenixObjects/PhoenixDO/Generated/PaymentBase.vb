'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'Payment'
    '*DO NOT* modify this file.
    'Add new properties and methods to Payment instead.
    Public MustInherit Class PaymentBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal paymentId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(paymentId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal paymentId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(paymentId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property PaymentId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Property PartyId As Integer
            Get
                Return CType(Me(1),Integer)
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(10)>  _
        Public Property PaymentReference As String
            Get
                If (Me.IsPaymentReferenceNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(2),String)
                End If
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        Public Property PaymentMethodId As Integer
            Get
                If (Me.IsPaymentMethodIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(3),Integer)
                End If
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        Public Property InitiatedByCustomer As Boolean
            Get
                If (Me.IsInitiatedByCustomerNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(4),Boolean)
                End If
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        Public Property PaymentDateTime As Date
            Get
                If (Me.IsPaymentDateTimeNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(5),Date)
                End If
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        Public Property PaymentAmount As Decimal
            Get
                If (Me.IsPaymentAmountNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(6),Decimal)
                End If
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        Public Property AvailableBalance As Decimal
            Get
                If (Me.IsAvailableBalanceNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(7),Decimal)
                End If
            End Get
            Set
                Me(7) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(6)>  _
        Public Property GatewayAuthorisationCode As String
            Get
                If (Me.IsGatewayAuthorisationCodeNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(8),String)
                End If
            End Get
            Set
                Me(8) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property GatewayBankReference As String
            Get
                If (Me.IsGatewayBankReferenceNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(9),String)
                End If
            End Get
            Set
                Me(9) = value
            End Set
        End Property
        
        Public Property EnteredApplicationsCovered As Integer
            Get
                If (Me.IsEnteredApplicationsCoveredNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(10),Integer)
                End If
            End Get
            Set
                Me(10) = value
            End Set
        End Property
        
        Public Property ActualApplicationsCovered As Integer
            Get
                If (Me.IsActualApplicationsCoveredNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(11),Integer)
                End If
            End Get
            Set
                Me(11) = value
            End Set
        End Property
        
        Public Property ReceiptPrinted As Boolean
            Get
                If (Me.IsReceiptPrintedNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(12),Boolean)
                End If
            End Get
            Set
                Me(12) = value
            End Set
        End Property
        
        Public Property ReportDate As Date
            Get
                If (Me.IsReportDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(13),Date)
                End If
            End Get
            Set
                Me(13) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(14),Integer)
                End If
            End Get
            Set
                Me(14) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.PaymentService
            Get
                Return CType(GetServiceObject(GetType(Service.PaymentService)),Service.PaymentService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsPaymentReferenceNull() As Boolean
            Return Me.IsNull(2)
        End Function
        
        Public Sub SetPaymentReferenceToNull()
            Me(2) = System.DBNull.Value
        End Sub
        
        Public Function IsPaymentMethodIdNull() As Boolean
            Return Me.IsNull(3)
        End Function
        
        Public Sub SetPaymentMethodIdToNull()
            Me(3) = System.DBNull.Value
        End Sub
        
        Public Function IsInitiatedByCustomerNull() As Boolean
            Return Me.IsNull(4)
        End Function
        
        Public Sub SetInitiatedByCustomerToNull()
            Me(4) = System.DBNull.Value
        End Sub
        
        Public Function IsPaymentDateTimeNull() As Boolean
            Return Me.IsNull(5)
        End Function
        
        Public Sub SetPaymentDateTimeToNull()
            Me(5) = System.DBNull.Value
        End Sub
        
        Public Function IsPaymentAmountNull() As Boolean
            Return Me.IsNull(6)
        End Function
        
        Public Sub SetPaymentAmountToNull()
            Me(6) = System.DBNull.Value
        End Sub
        
        Public Function IsAvailableBalanceNull() As Boolean
            Return Me.IsNull(7)
        End Function
        
        Public Sub SetAvailableBalanceToNull()
            Me(7) = System.DBNull.Value
        End Sub
        
        Public Function IsGatewayAuthorisationCodeNull() As Boolean
            Return Me.IsNull(8)
        End Function
        
        Public Sub SetGatewayAuthorisationCodeToNull()
            Me(8) = System.DBNull.Value
        End Sub
        
        Public Function IsGatewayBankReferenceNull() As Boolean
            Return Me.IsNull(9)
        End Function
        
        Public Sub SetGatewayBankReferenceToNull()
            Me(9) = System.DBNull.Value
        End Sub
        
        Public Function IsEnteredApplicationsCoveredNull() As Boolean
            Return Me.IsNull(10)
        End Function
        
        Public Sub SetEnteredApplicationsCoveredToNull()
            Me(10) = System.DBNull.Value
        End Sub
        
        Public Function IsActualApplicationsCoveredNull() As Boolean
            Return Me.IsNull(11)
        End Function
        
        Public Sub SetActualApplicationsCoveredToNull()
            Me(11) = System.DBNull.Value
        End Sub
        
        Public Function IsReceiptPrintedNull() As Boolean
            Return Me.IsNull(12)
        End Function
        
        Public Sub SetReceiptPrintedToNull()
            Me(12) = System.DBNull.Value
        End Sub
        
        Public Function IsReportDateNull() As Boolean
            Return Me.IsNull(13)
        End Function
        
        Public Sub SetReportDateToNull()
            Me(13) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(14)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(14) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(15)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.PaymentSet
            Return PaymentBase.GetAll(false, false, PaymentServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.PaymentSet
            Return PaymentBase.GetAll(includeHyphen, false, PaymentServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As PaymentServiceBase.OrderBy) As EntitySet.PaymentSet
            Dim service As Service.PaymentService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As PaymentServiceBase.OrderBy) As EntitySet.PaymentSet
            Return PaymentBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal paymentId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.Payment
            Dim service As Service.PaymentService
            service = ServiceObject
            Return service.GetById(PaymentId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal paymentId As Integer) As Entity.Payment
            Dim service As Service.PaymentService
            service = ServiceObject
            Return service.GetById(PaymentId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal paymentId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.PaymentService
            service = ServiceObject
            Return service.DeleteById(paymentId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal paymentId As Integer) As Boolean
            Return PaymentBase.DeleteById(paymentId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal paymentId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return PaymentBase.DeleteById(paymentId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForParty(ByVal partyId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PaymentSet
            Dim service As Service.PaymentService
            service = ServiceObject
            Return service.GetForParty(partyId, tran)
        End Function
        
        Public Overloads Shared Function GetForParty(ByVal partyId As Integer) As EntitySet.PaymentSet
            Return PaymentBase.GetForParty(partyId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForPaymentMethod(ByVal paymentMethodID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PaymentSet
            Dim service As Service.PaymentService
            service = ServiceObject
            Return service.GetForPaymentMethod(paymentMethodID, tran)
        End Function
        
        Public Overloads Shared Function GetForPaymentMethod(ByVal paymentMethodID As Integer) As EntitySet.PaymentSet
            Return PaymentBase.GetForPaymentMethod(paymentMethodID, Nothing)
        End Function
        
        Public Overloads Function GetRelatedFeeReduction(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.FeeReductionSet
            Return Entity.FeeReduction.GetForPayment(Me.PaymentId, tran)
        End Function
        
        Public Overloads Function GetRelatedFeeReduction() As EntitySet.FeeReductionSet
            Return Me.GetRelatedFeeReduction(Nothing)
        End Function
        
        Public Overloads Function GetRelatedPaymentBasket(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PaymentBasketSet
            Return Entity.PaymentBasket.GetForPayment(Me.PaymentId, tran)
        End Function
        
        Public Overloads Function GetRelatedPaymentBasket() As EntitySet.PaymentBasketSet
            Return Me.GetRelatedPaymentBasket(Nothing)
        End Function
        
        Public Overloads Function GetRelatedPaymentBasketPayment(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PaymentBasketPaymentSet
            Return Entity.PaymentBasketPayment.GetForPayment(Me.PaymentId, tran)
        End Function
        
        Public Overloads Function GetRelatedPaymentBasketPayment() As EntitySet.PaymentBasketPaymentSet
            Return Me.GetRelatedPaymentBasketPayment(Nothing)
        End Function
        
        Public Overloads Function GetRelatedPostalOrder(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PostalOrderSet
            Return Entity.PostalOrder.GetForPayment(Me.PaymentId, tran)
        End Function
        
        Public Overloads Function GetRelatedPostalOrder() As EntitySet.PostalOrderSet
            Return Me.GetRelatedPostalOrder(Nothing)
        End Function
        
        Public Overloads Function GetRelatedRefund(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.RefundSet
            Return Entity.Refund.GetForPayment(Me.PaymentId, tran)
        End Function
        
        Public Overloads Function GetRelatedRefund() As EntitySet.RefundSet
            Return Me.GetRelatedRefund(Nothing)
        End Function
        
        Public Overloads Function GetRelatedCash(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CashSet
            Return Entity.Cash.GetForPayment(Me.PaymentId, tran)
        End Function
        
        Public Overloads Function GetRelatedCash() As EntitySet.CashSet
            Return Me.GetRelatedCash(Nothing)
        End Function
        
        Public Overloads Function GetRelatedCheque(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ChequeSet
            Return Entity.Cheque.GetForPayment(Me.PaymentId, tran)
        End Function
        
        Public Overloads Function GetRelatedCheque() As EntitySet.ChequeSet
            Return Me.GetRelatedCheque(Nothing)
        End Function
        
        Public Shared Function Insert(ByVal partyId As Integer, ByVal paymentReference As Object, ByVal paymentMethodId As Object, ByVal initiatedByCustomer As Object, ByVal paymentDateTime As Object, ByVal paymentAmount As Object, ByVal availableBalance As Object, ByVal gatewayAuthorisationCode As Object, ByVal gatewayBankReference As Object, ByVal enteredApplicationsCovered As Object, ByVal actualApplicationsCovered As Object, ByVal receiptPrinted As Object, ByVal reportDate As Object) As Entity.Payment
            Return Entity.Payment.ServiceObject.Insert(partyId, paymentReference, paymentMethodId, initiatedByCustomer, paymentDateTime, paymentAmount, availableBalance, gatewayAuthorisationCode, gatewayBankReference, enteredApplicationsCovered, actualApplicationsCovered, receiptPrinted, reportDate)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim partyIdParam As Integer = Me.PartyId
            Dim paymentReferenceParam As Object
            If (Me.IsPaymentReferenceNull = false) Then
                paymentReferenceParam = Me.PaymentReference
            Else
                paymentReferenceParam = System.DBNull.Value
            End If
            Dim paymentMethodIdParam As Object
            If (Me.IsPaymentMethodIdNull = false) Then
                paymentMethodIdParam = Me.PaymentMethodId
            Else
                paymentMethodIdParam = System.DBNull.Value
            End If
            Dim initiatedByCustomerParam As Object
            If (Me.IsInitiatedByCustomerNull = false) Then
                initiatedByCustomerParam = Me.InitiatedByCustomer
            Else
                initiatedByCustomerParam = System.DBNull.Value
            End If
            Dim paymentDateTimeParam As Object
            If (Me.IsPaymentDateTimeNull = false) Then
                paymentDateTimeParam = Me.PaymentDateTime
            Else
                paymentDateTimeParam = System.DBNull.Value
            End If
            Dim paymentAmountParam As Object
            If (Me.IsPaymentAmountNull = false) Then
                paymentAmountParam = Me.PaymentAmount
            Else
                paymentAmountParam = System.DBNull.Value
            End If
            Dim availableBalanceParam As Object
            If (Me.IsAvailableBalanceNull = false) Then
                availableBalanceParam = Me.AvailableBalance
            Else
                availableBalanceParam = System.DBNull.Value
            End If
            Dim gatewayAuthorisationCodeParam As Object
            If (Me.IsGatewayAuthorisationCodeNull = false) Then
                gatewayAuthorisationCodeParam = Me.GatewayAuthorisationCode
            Else
                gatewayAuthorisationCodeParam = System.DBNull.Value
            End If
            Dim gatewayBankReferenceParam As Object
            If (Me.IsGatewayBankReferenceNull = false) Then
                gatewayBankReferenceParam = EnterpriseObjects.Common.ParseSQLText(Me.GatewayBankReference)
            Else
                gatewayBankReferenceParam = System.DBNull.Value
            End If
            Dim enteredApplicationsCoveredParam As Object
            If (Me.IsEnteredApplicationsCoveredNull = false) Then
                enteredApplicationsCoveredParam = Me.EnteredApplicationsCovered
            Else
                enteredApplicationsCoveredParam = System.DBNull.Value
            End If
            Dim actualApplicationsCoveredParam As Object
            If (Me.IsActualApplicationsCoveredNull = false) Then
                actualApplicationsCoveredParam = Me.ActualApplicationsCovered
            Else
                actualApplicationsCoveredParam = System.DBNull.Value
            End If
            Dim receiptPrintedParam As Object
            If (Me.IsReceiptPrintedNull = false) Then
                receiptPrintedParam = Me.ReceiptPrinted
            Else
                receiptPrintedParam = System.DBNull.Value
            End If
            Dim reportDateParam As Object
            If (Me.IsReportDateNull = false) Then
                reportDateParam = Me.ReportDate
            Else
                reportDateParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.Payment.ServiceObject.Update(Me.Id, partyIdParam, paymentReferenceParam, paymentMethodIdParam, initiatedByCustomerParam, paymentDateTimeParam, paymentAmountParam, availableBalanceParam, gatewayAuthorisationCodeParam, gatewayBankReferenceParam, enteredApplicationsCoveredParam, actualApplicationsCoveredParam, receiptPrintedParam, reportDateParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
