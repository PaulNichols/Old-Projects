'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'SSORolePermission'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class SSORolePermissionServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.SSORolePermissionSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.SSORolePermissionSet
            Return CType(MyBase.GetAll("eosp_SelectSSORolePermission", GetType(EntitySet.SSORolePermissionSet), includeHyphen, includeInactive, orderBy),EntitySet.SSORolePermissionSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.SSORolePermissionSet
            Return Me.GetAll(includeHyphen, includeInactive, SSORolePermissionServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, SSORolePermissionServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.SSORolePermissionSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Function GetById(ByVal idColumns() As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.SSORolePermission
            Return CType(MyBase.GetById("eosp_SelectSSORolePermission", New String() {"PermissionId", "RoleId"}, idColumns, GetType(EntitySet.SSORolePermissionSet), tran),Entity.SSORolePermission)
        End Function
        
        Public Overloads Function GetById(ByVal idColumns() As Integer) As Entity.SSORolePermission
            Return Me.GetById(idColumns, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal idColumns() As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(idColumns, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal idColumns() As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteSSORolePermission", New String() {"PermissionId", "RoleId"}, idColumns, checkSum, transaction)
        End Function
        
        'GetForSSOPermission - links to the SSOPermission table...
        Public Overloads Function GetForSSOPermission(ByVal PermissionId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SSORolePermissionSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from SSORolePermission where PermissionI"& _ 
"d=" + PermissionId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.SSORolePermissionSet), tran),EntitySet.SSORolePermissionSet)
        End Function
        
        'GetForSSOPermission - links to the SSOPermission table...
        Public Overloads Function GetForSSOPermission(ByVal PermissionId As Integer) As EntitySet.SSORolePermissionSet
            Return Me.GetForSSOPermission(PermissionId, Nothing)
        End Function
        
        'GetForSSORole - links to the SSORole table...
        Public Overloads Function GetForSSORole(ByVal RoleId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SSORolePermissionSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from SSORolePermission where RoleId=" + RoleId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.SSORolePermissionSet), tran),EntitySet.SSORolePermissionSet)
        End Function
        
        'GetForSSORole - links to the SSORole table...
        Public Overloads Function GetForSSORole(ByVal RoleId As Integer) As EntitySet.SSORolePermissionSet
            Return Me.GetForSSORole(RoleId, Nothing)
        End Function
        
        Public Overloads Sub Insert(ByVal permissionId As Integer, ByVal roleId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction)
            Sprocs.eosp_CreateSSORolePermission(permissionId, roleId, transaction)
        End Sub
        
        Public Overloads Sub Insert(ByVal permissionId As Integer, ByVal roleId As Integer)
            Me.Insert(permissionId, roleId, Nothing)
        End Sub
        
        Public Overloads Sub Insert(ByVal sSORolePermission As Entity.SSORolePermission)
            Me.Insert(sSORolePermission(0), sSORolePermission(1))
        End Sub
        
        Public Overloads Sub Insert(ByVal sSORolePermission As Entity.SSORolePermission, ByVal transaction As System.Data.SqlClient.SqlTransaction)
            Me.Insert(sSORolePermission(0), sSORolePermission(1), transaction)
        End Sub
        
        Public Overloads Function Update(ByVal permissionId As Integer, ByVal roleId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.SSORolePermission
            Return Sprocs.eosp_UpdateSSORolePermission(permissionId, roleId, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal permissionId As Integer, ByVal roleId As Integer) As Entity.SSORolePermission
            Return Me.Update(permissionId, roleId, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal permissionId As Integer, ByVal roleId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.SSORolePermission
            Return Me.Update(permissionId, roleId, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal permissionId As Integer, ByVal roleId As Integer, ByVal checkSum As Integer) As Entity.SSORolePermission
            Return Me.Update(permissionId, roleId, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal sSORolePermission As Entity.SSORolePermission) As Entity.SSORolePermission
            Return Me.Update(sSORolePermission(0), sSORolePermission(1))
        End Function
        
        Public Overloads Function Update(ByVal sSORolePermission As Entity.SSORolePermission, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.SSORolePermission
            Return Me.Update(sSORolePermission(0), sSORolePermission(1), transaction)
        End Function
        
        Public Overloads Function Update(ByVal sSORolePermission As Entity.SSORolePermission, ByVal checkSum As Integer) As Entity.SSORolePermission
            Return Me.Update(sSORolePermission(0), sSORolePermission(1), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal sSORolePermission As Entity.SSORolePermission, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.SSORolePermission
            Return Me.Update(sSORolePermission(0), sSORolePermission(1), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_PermissionId(ByVal permissionId As Integer) As EntitySet.SSORolePermissionSet
            Return Sprocs.eosp_SelectSSORolePermission(permissionId:=Nothing, roleId:=Nothing, Index_PermissionId:=[permissionId], Index_RoleId:=Nothing, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_PermissionId(ByVal permissionId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.SSORolePermissionSet
            Return Sprocs.eosp_SelectSSORolePermission(permissionId:=Nothing, roleId:=Nothing, Index_PermissionId:=[permissionId], Index_RoleId:=Nothing, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Overloads Function GetByIndex_RoleId(ByVal roleId As Integer) As EntitySet.SSORolePermissionSet
            Return Sprocs.eosp_SelectSSORolePermission(permissionId:=Nothing, roleId:=Nothing, Index_RoleId:=[roleId], Index_PermissionId:=Nothing, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_RoleId(ByVal roleId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.SSORolePermissionSet
            Return Sprocs.eosp_SelectSSORolePermission(permissionId:=Nothing, roleId:=Nothing, Index_RoleId:=[roleId], Index_PermissionId:=Nothing, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            PermissionId
            
            RoleId
            
            
        End Enum
    End Class
End Namespace
