'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'UOM'
    '*DO NOT* modify this file.
    'Add new properties and methods to UOM instead.
    Public MustInherit Class UOMBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal uOMId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(uOMId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal uOMId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(uOMId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property UOMId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Property Mass As Decimal
            Get
                If (Me.IsMassNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(1),Decimal)
                End If
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        Public Property Qty As Integer
            Get
                If (Me.IsQtyNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(2),Integer)
                End If
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        Public Property UnitOfMeasurementId As Integer
            Get
                If (Me.IsUnitOfMeasurementIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(3),Integer)
                End If
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(4),Integer)
                End If
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.UOMService
            Get
                Return CType(GetServiceObject(GetType(Service.UOMService)),Service.UOMService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsMassNull() As Boolean
            Return Me.IsNull(1)
        End Function
        
        Public Sub SetMassToNull()
            Me(1) = System.DBNull.Value
        End Sub
        
        Public Function IsQtyNull() As Boolean
            Return Me.IsNull(2)
        End Function
        
        Public Sub SetQtyToNull()
            Me(2) = System.DBNull.Value
        End Sub
        
        Public Function IsUnitOfMeasurementIdNull() As Boolean
            Return Me.IsNull(3)
        End Function
        
        Public Sub SetUnitOfMeasurementIdToNull()
            Me(3) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(4)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(4) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(5)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.UOMSet
            Return UOMBase.GetAll(false, false, UOMServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.UOMSet
            Return UOMBase.GetAll(includeHyphen, false, UOMServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As UOMServiceBase.OrderBy) As EntitySet.UOMSet
            Dim service As Service.UOMService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As UOMServiceBase.OrderBy) As EntitySet.UOMSet
            Return UOMBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal uOMId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.UOM
            Dim service As Service.UOMService
            service = ServiceObject
            Return service.GetById(UOMId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal uOMId As Integer) As Entity.UOM
            Dim service As Service.UOMService
            service = ServiceObject
            Return service.GetById(UOMId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal uOMId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.UOMService
            service = ServiceObject
            Return service.DeleteById(uOMId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal uOMId As Integer) As Boolean
            Return UOMBase.DeleteById(uOMId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal uOMId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return UOMBase.DeleteById(uOMId, 0, transaction)
        End Function
        
        Public Overloads Function GetRelatedNotificationSpecieLink(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.NotificationSpecieLinkSet
            Return Entity.NotificationSpecieLink.GetForUOM(Me.UOMId, tran)
        End Function
        
        Public Overloads Function GetRelatedNotificationSpecieLink() As EntitySet.NotificationSpecieLinkSet
            Return Me.GetRelatedNotificationSpecieLink(Nothing)
        End Function
        
        Public Overloads Function GetRelatedPermitSpecimen(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitSpecimenSet
            Return Entity.PermitSpecimen.GetForUOM(Me.UOMId, tran)
        End Function
        
        Public Overloads Function GetRelatedPermitSpecimen() As EntitySet.PermitSpecimenSet
            Return Me.GetRelatedPermitSpecimen(Nothing)
        End Function
        
        Public Shared Function Insert(ByVal mass As Object, ByVal qty As Object, ByVal unitOfMeasurementId As Object) As Entity.UOM
            Return Entity.UOM.ServiceObject.Insert(mass, qty, unitOfMeasurementId)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim massParam As Object
            If (Me.IsMassNull = false) Then
                massParam = Me.Mass
            Else
                massParam = System.DBNull.Value
            End If
            Dim qtyParam As Object
            If (Me.IsQtyNull = false) Then
                qtyParam = Me.Qty
            Else
                qtyParam = System.DBNull.Value
            End If
            Dim unitOfMeasurementIdParam As Object
            If (Me.IsUnitOfMeasurementIdNull = false) Then
                unitOfMeasurementIdParam = Me.UnitOfMeasurementId
            Else
                unitOfMeasurementIdParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.UOM.ServiceObject.Update(Me.Id, massParam, qtyParam, unitOfMeasurementIdParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
