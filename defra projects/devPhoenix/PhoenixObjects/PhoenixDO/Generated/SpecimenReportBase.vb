'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'SpecimenReport'
    '*DO NOT* modify this file.
    'Add new properties and methods to SpecimenReport instead.
    Public MustInherit Class SpecimenReportBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal specimenReportId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(specimenReportId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal specimenReportId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(specimenReportId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property SpecimenReportId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Property SpecimenId As Integer
            Get
                Return CType(Me(1),Integer)
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        Public Property PermitId As Integer
            Get
                Return CType(Me(2),Integer)
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        Public Property OriginId As Integer
            Get
                If (Me.IsOriginIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(3),Integer)
                End If
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        Public Property SeizedByCustoms As Boolean
            Get
                If (Me.IsSeizedByCustomsNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(4),Boolean)
                End If
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property ImportNumber As String
            Get
                If (Me.IsImportNumberNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(5),String)
                End If
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property Importer As String
            Get
                If (Me.IsImporterNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(6),String)
                End If
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property ExportNumber As String
            Get
                If (Me.IsExportNumberNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(7),String)
                End If
            End Get
            Set
                Me(7) = value
            End Set
        End Property
        
        Public Property CountryOfOriginId As Integer
            Get
                If (Me.IsCountryOfOriginIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(8),Integer)
                End If
            End Get
            Set
                Me(8) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property BreedingFactilities As String
            Get
                If (Me.IsBreedingFactilitiesNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(9),String)
                End If
            End Get
            Set
                Me(9) = value
            End Set
        End Property
        
        Public Property SpecimenReportDate As Date
            Get
                Return CType(Me(10),Date)
            End Get
            Set
                Me(10) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property OtherCITESSourceExplanation As String
            Get
                If (Me.IsOtherCITESSourceExplanationNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(11),String)
                End If
            End Get
            Set
                Me(11) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property BreederNameAddress As String
            Get
                If (Me.IsBreederNameAddressNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(12),String)
                End If
            End Get
            Set
                Me(12) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(2)>  _
        Public Property CaptivebredGeneration As String
            Get
                If (Me.IsCaptivebredGenerationNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(13),String)
                End If
            End Get
            Set
                Me(13) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property OtherInformation As String
            Get
                If (Me.IsOtherInformationNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(14),String)
                End If
            End Get
            Set
                Me(14) = value
            End Set
        End Property
        
        Public Property WildTakenDate As Date
            Get
                If (Me.IsWildTakenDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(15),Date)
                End If
            End Get
            Set
                Me(15) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(20)>  _
        Public Property DOENumber As String
            Get
                If (Me.IsDOENumberNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(16),String)
                End If
            End Get
            Set
                Me(16) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property WildTakenDisabilityDetails As String
            Get
                If (Me.IsWildTakenDisabilityDetailsNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(17),String)
                End If
            End Get
            Set
                Me(17) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property BreedingTechniqueDetails As String
            Get
                If (Me.IsBreedingTechniqueDetailsNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(18),String)
                End If
            End Get
            Set
                Me(18) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property FounderBreedingStockDetails As String
            Get
                If (Me.IsFounderBreedingStockDetailsNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(19),String)
                End If
            End Get
            Set
                Me(19) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property EstablishmentBredtoF2Details As String
            Get
                If (Me.IsEstablishmentBredtoF2DetailsNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(20),String)
                End If
            End Get
            Set
                Me(20) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property BreedingwithoutWildAugmentationDetails As String
            Get
                If (Me.IsBreedingwithoutWildAugmentationDetailsNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(21),String)
                End If
            End Get
            Set
                Me(21) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property BreedingStockSizeDetails As String
            Get
                If (Me.IsBreedingStockSizeDetailsNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(22),String)
                End If
            End Get
            Set
                Me(22) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property ImportExportPurposeDetails As String
            Get
                If (Me.IsImportExportPurposeDetailsNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(23),String)
                End If
            End Get
            Set
                Me(23) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property SpeciesConservationDetails As String
            Get
                If (Me.IsSpeciesConservationDetailsNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(24),String)
                End If
            End Get
            Set
                Me(24) = value
            End Set
        End Property
        
        Public Property DeclarationAcknowledged As Boolean
            Get
                If (Me.IsDeclarationAcknowledgedNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(25),Boolean)
                End If
            End Get
            Set
                Me(25) = value
            End Set
        End Property
        
        Public Property EntryDateTime As Date
            Get
                If (Me.IsEntryDateTimeNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(26),Date)
                End If
            End Get
            Set
                Me(26) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(20)>  _
        Public Property StudBookNumber As String
            Get
                If (Me.IsStudBookNumberNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(27),String)
                End If
            End Get
            Set
                Me(27) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property Role As String
            Get
                If (Me.IsRoleNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(28),String)
                End If
            End Get
            Set
                Me(28) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(255)>  _
        Public Property PresentSpecAddress As String
            Get
                If (Me.IsPresentSpecAddressNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(29),String)
                End If
            End Get
            Set
                Me(29) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property SourceUnknownExplanation As String
            Get
                If (Me.IsSourceUnknownExplanationNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(30),String)
                End If
            End Get
            Set
                Me(30) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property AimsObjectives As String
            Get
                If (Me.IsAimsObjectivesNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(31),String)
                End If
            End Get
            Set
                Me(31) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property HowObjectivesAchieved As String
            Get
                If (Me.IsHowObjectivesAchievedNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(32),String)
                End If
            End Get
            Set
                Me(32) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property OtherSpecimensInvolved As String
            Get
                If (Me.IsOtherSpecimensInvolvedNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(33),String)
                End If
            End Get
            Set
                Me(33) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property BreedingSuccess As String
            Get
                If (Me.IsBreedingSuccessNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(34),String)
                End If
            End Get
            Set
                Me(34) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(35),Integer)
                End If
            End Get
            Set
                Me(35) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.SpecimenReportService
            Get
                Return CType(GetServiceObject(GetType(Service.SpecimenReportService)),Service.SpecimenReportService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsOriginIdNull() As Boolean
            Return Me.IsNull(3)
        End Function
        
        Public Sub SetOriginIdToNull()
            Me(3) = System.DBNull.Value
        End Sub
        
        Public Function IsSeizedByCustomsNull() As Boolean
            Return Me.IsNull(4)
        End Function
        
        Public Sub SetSeizedByCustomsToNull()
            Me(4) = System.DBNull.Value
        End Sub
        
        Public Function IsImportNumberNull() As Boolean
            Return Me.IsNull(5)
        End Function
        
        Public Sub SetImportNumberToNull()
            Me(5) = System.DBNull.Value
        End Sub
        
        Public Function IsImporterNull() As Boolean
            Return Me.IsNull(6)
        End Function
        
        Public Sub SetImporterToNull()
            Me(6) = System.DBNull.Value
        End Sub
        
        Public Function IsExportNumberNull() As Boolean
            Return Me.IsNull(7)
        End Function
        
        Public Sub SetExportNumberToNull()
            Me(7) = System.DBNull.Value
        End Sub
        
        Public Function IsCountryOfOriginIdNull() As Boolean
            Return Me.IsNull(8)
        End Function
        
        Public Sub SetCountryOfOriginIdToNull()
            Me(8) = System.DBNull.Value
        End Sub
        
        Public Function IsBreedingFactilitiesNull() As Boolean
            Return Me.IsNull(9)
        End Function
        
        Public Sub SetBreedingFactilitiesToNull()
            Me(9) = System.DBNull.Value
        End Sub
        
        Public Function IsOtherCITESSourceExplanationNull() As Boolean
            Return Me.IsNull(11)
        End Function
        
        Public Sub SetOtherCITESSourceExplanationToNull()
            Me(11) = System.DBNull.Value
        End Sub
        
        Public Function IsBreederNameAddressNull() As Boolean
            Return Me.IsNull(12)
        End Function
        
        Public Sub SetBreederNameAddressToNull()
            Me(12) = System.DBNull.Value
        End Sub
        
        Public Function IsCaptivebredGenerationNull() As Boolean
            Return Me.IsNull(13)
        End Function
        
        Public Sub SetCaptivebredGenerationToNull()
            Me(13) = System.DBNull.Value
        End Sub
        
        Public Function IsOtherInformationNull() As Boolean
            Return Me.IsNull(14)
        End Function
        
        Public Sub SetOtherInformationToNull()
            Me(14) = System.DBNull.Value
        End Sub
        
        Public Function IsWildTakenDateNull() As Boolean
            Return Me.IsNull(15)
        End Function
        
        Public Sub SetWildTakenDateToNull()
            Me(15) = System.DBNull.Value
        End Sub
        
        Public Function IsDOENumberNull() As Boolean
            Return Me.IsNull(16)
        End Function
        
        Public Sub SetDOENumberToNull()
            Me(16) = System.DBNull.Value
        End Sub
        
        Public Function IsWildTakenDisabilityDetailsNull() As Boolean
            Return Me.IsNull(17)
        End Function
        
        Public Sub SetWildTakenDisabilityDetailsToNull()
            Me(17) = System.DBNull.Value
        End Sub
        
        Public Function IsBreedingTechniqueDetailsNull() As Boolean
            Return Me.IsNull(18)
        End Function
        
        Public Sub SetBreedingTechniqueDetailsToNull()
            Me(18) = System.DBNull.Value
        End Sub
        
        Public Function IsFounderBreedingStockDetailsNull() As Boolean
            Return Me.IsNull(19)
        End Function
        
        Public Sub SetFounderBreedingStockDetailsToNull()
            Me(19) = System.DBNull.Value
        End Sub
        
        Public Function IsEstablishmentBredtoF2DetailsNull() As Boolean
            Return Me.IsNull(20)
        End Function
        
        Public Sub SetEstablishmentBredtoF2DetailsToNull()
            Me(20) = System.DBNull.Value
        End Sub
        
        Public Function IsBreedingwithoutWildAugmentationDetailsNull() As Boolean
            Return Me.IsNull(21)
        End Function
        
        Public Sub SetBreedingwithoutWildAugmentationDetailsToNull()
            Me(21) = System.DBNull.Value
        End Sub
        
        Public Function IsBreedingStockSizeDetailsNull() As Boolean
            Return Me.IsNull(22)
        End Function
        
        Public Sub SetBreedingStockSizeDetailsToNull()
            Me(22) = System.DBNull.Value
        End Sub
        
        Public Function IsImportExportPurposeDetailsNull() As Boolean
            Return Me.IsNull(23)
        End Function
        
        Public Sub SetImportExportPurposeDetailsToNull()
            Me(23) = System.DBNull.Value
        End Sub
        
        Public Function IsSpeciesConservationDetailsNull() As Boolean
            Return Me.IsNull(24)
        End Function
        
        Public Sub SetSpeciesConservationDetailsToNull()
            Me(24) = System.DBNull.Value
        End Sub
        
        Public Function IsDeclarationAcknowledgedNull() As Boolean
            Return Me.IsNull(25)
        End Function
        
        Public Sub SetDeclarationAcknowledgedToNull()
            Me(25) = System.DBNull.Value
        End Sub
        
        Public Function IsEntryDateTimeNull() As Boolean
            Return Me.IsNull(26)
        End Function
        
        Public Sub SetEntryDateTimeToNull()
            Me(26) = System.DBNull.Value
        End Sub
        
        Public Function IsStudBookNumberNull() As Boolean
            Return Me.IsNull(27)
        End Function
        
        Public Sub SetStudBookNumberToNull()
            Me(27) = System.DBNull.Value
        End Sub
        
        Public Function IsRoleNull() As Boolean
            Return Me.IsNull(28)
        End Function
        
        Public Sub SetRoleToNull()
            Me(28) = System.DBNull.Value
        End Sub
        
        Public Function IsPresentSpecAddressNull() As Boolean
            Return Me.IsNull(29)
        End Function
        
        Public Sub SetPresentSpecAddressToNull()
            Me(29) = System.DBNull.Value
        End Sub
        
        Public Function IsSourceUnknownExplanationNull() As Boolean
            Return Me.IsNull(30)
        End Function
        
        Public Sub SetSourceUnknownExplanationToNull()
            Me(30) = System.DBNull.Value
        End Sub
        
        Public Function IsAimsObjectivesNull() As Boolean
            Return Me.IsNull(31)
        End Function
        
        Public Sub SetAimsObjectivesToNull()
            Me(31) = System.DBNull.Value
        End Sub
        
        Public Function IsHowObjectivesAchievedNull() As Boolean
            Return Me.IsNull(32)
        End Function
        
        Public Sub SetHowObjectivesAchievedToNull()
            Me(32) = System.DBNull.Value
        End Sub
        
        Public Function IsOtherSpecimensInvolvedNull() As Boolean
            Return Me.IsNull(33)
        End Function
        
        Public Sub SetOtherSpecimensInvolvedToNull()
            Me(33) = System.DBNull.Value
        End Sub
        
        Public Function IsBreedingSuccessNull() As Boolean
            Return Me.IsNull(34)
        End Function
        
        Public Sub SetBreedingSuccessToNull()
            Me(34) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(35)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(35) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(36)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.SpecimenReportSet
            Return SpecimenReportBase.GetAll(false, false, SpecimenReportServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.SpecimenReportSet
            Return SpecimenReportBase.GetAll(includeHyphen, false, SpecimenReportServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As SpecimenReportServiceBase.OrderBy) As EntitySet.SpecimenReportSet
            Dim service As Service.SpecimenReportService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As SpecimenReportServiceBase.OrderBy) As EntitySet.SpecimenReportSet
            Return SpecimenReportBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal specimenReportId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.SpecimenReport
            Dim service As Service.SpecimenReportService
            service = ServiceObject
            Return service.GetById(SpecimenReportId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal specimenReportId As Integer) As Entity.SpecimenReport
            Dim service As Service.SpecimenReportService
            service = ServiceObject
            Return service.GetById(SpecimenReportId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal specimenReportId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.SpecimenReportService
            service = ServiceObject
            Return service.DeleteById(specimenReportId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal specimenReportId As Integer) As Boolean
            Return SpecimenReportBase.DeleteById(specimenReportId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal specimenReportId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return SpecimenReportBase.DeleteById(specimenReportId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForSpecimen(ByVal specimenId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenReportSet
            Dim service As Service.SpecimenReportService
            service = ServiceObject
            Return service.GetForSpecimen(specimenId, tran)
        End Function
        
        Public Overloads Shared Function GetForSpecimen(ByVal specimenId As Integer) As EntitySet.SpecimenReportSet
            Return SpecimenReportBase.GetForSpecimen(specimenId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForPermit(ByVal permitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenReportSet
            Dim service As Service.SpecimenReportService
            service = ServiceObject
            Return service.GetForPermit(permitId, tran)
        End Function
        
        Public Overloads Shared Function GetForPermit(ByVal permitId As Integer) As EntitySet.SpecimenReportSet
            Return SpecimenReportBase.GetForPermit(permitId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForSpecimenReportOrigin(ByVal specimenReportOriginId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenReportSet
            Dim service As Service.SpecimenReportService
            service = ServiceObject
            Return service.GetForSpecimenReportOrigin(specimenReportOriginId, tran)
        End Function
        
        Public Overloads Shared Function GetForSpecimenReportOrigin(ByVal specimenReportOriginId As Integer) As EntitySet.SpecimenReportSet
            Return SpecimenReportBase.GetForSpecimenReportOrigin(specimenReportOriginId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForCountry(ByVal countryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenReportSet
            Dim service As Service.SpecimenReportService
            service = ServiceObject
            Return service.GetForCountry(countryId, tran)
        End Function
        
        Public Overloads Shared Function GetForCountry(ByVal countryId As Integer) As EntitySet.SpecimenReportSet
            Return SpecimenReportBase.GetForCountry(countryId, Nothing)
        End Function
        
        Public Shared Function Insert( _
                    ByVal specimenId As Integer,  _
                    ByVal permitId As Integer,  _
                    ByVal originId As Object,  _
                    ByVal seizedByCustoms As Object,  _
                    ByVal importNumber As Object,  _
                    ByVal importer As Object,  _
                    ByVal exportNumber As Object,  _
                    ByVal countryOfOriginId As Object,  _
                    ByVal breedingFactilities As Object,  _
                    ByVal specimenReportDate As Date,  _
                    ByVal otherCITESSourceExplanation As Object,  _
                    ByVal breederNameAddress As Object,  _
                    ByVal captivebredGeneration As Object,  _
                    ByVal otherInformation As Object,  _
                    ByVal wildTakenDate As Object,  _
                    ByVal dOENumber As Object,  _
                    ByVal wildTakenDisabilityDetails As Object,  _
                    ByVal breedingTechniqueDetails As Object,  _
                    ByVal founderBreedingStockDetails As Object,  _
                    ByVal establishmentBredtoF2Details As Object,  _
                    ByVal breedingwithoutWildAugmentationDetails As Object,  _
                    ByVal breedingStockSizeDetails As Object,  _
                    ByVal importExportPurposeDetails As Object,  _
                    ByVal speciesConservationDetails As Object,  _
                    ByVal declarationAcknowledged As Object,  _
                    ByVal entryDateTime As Object,  _
                    ByVal studBookNumber As Object,  _
                    ByVal role As Object,  _
                    ByVal presentSpecAddress As Object,  _
                    ByVal sourceUnknownExplanation As Object,  _
                    ByVal aimsObjectives As Object,  _
                    ByVal howObjectivesAchieved As Object,  _
                    ByVal otherSpecimensInvolved As Object,  _
                    ByVal breedingSuccess As Object) As Entity.SpecimenReport
            Return Entity.SpecimenReport.ServiceObject.Insert(specimenId, permitId, originId, seizedByCustoms, importNumber, importer, exportNumber, countryOfOriginId, breedingFactilities, specimenReportDate, otherCITESSourceExplanation, breederNameAddress, captivebredGeneration, otherInformation, wildTakenDate, dOENumber, wildTakenDisabilityDetails, breedingTechniqueDetails, founderBreedingStockDetails, establishmentBredtoF2Details, breedingwithoutWildAugmentationDetails, breedingStockSizeDetails, importExportPurposeDetails, speciesConservationDetails, declarationAcknowledged, entryDateTime, studBookNumber, role, presentSpecAddress, sourceUnknownExplanation, aimsObjectives, howObjectivesAchieved, otherSpecimensInvolved, breedingSuccess)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim specimenIdParam As Integer = Me.SpecimenId
            Dim permitIdParam As Integer = Me.PermitId
            Dim originIdParam As Object
            If (Me.IsOriginIdNull = false) Then
                originIdParam = Me.OriginId
            Else
                originIdParam = System.DBNull.Value
            End If
            Dim seizedByCustomsParam As Object
            If (Me.IsSeizedByCustomsNull = false) Then
                seizedByCustomsParam = Me.SeizedByCustoms
            Else
                seizedByCustomsParam = System.DBNull.Value
            End If
            Dim importNumberParam As Object
            If (Me.IsImportNumberNull = false) Then
                importNumberParam = EnterpriseObjects.Common.ParseSQLText(Me.ImportNumber)
            Else
                importNumberParam = System.DBNull.Value
            End If
            Dim importerParam As Object
            If (Me.IsImporterNull = false) Then
                importerParam = EnterpriseObjects.Common.ParseSQLText(Me.Importer)
            Else
                importerParam = System.DBNull.Value
            End If
            Dim exportNumberParam As Object
            If (Me.IsExportNumberNull = false) Then
                exportNumberParam = EnterpriseObjects.Common.ParseSQLText(Me.ExportNumber)
            Else
                exportNumberParam = System.DBNull.Value
            End If
            Dim countryOfOriginIdParam As Object
            If (Me.IsCountryOfOriginIdNull = false) Then
                countryOfOriginIdParam = Me.CountryOfOriginId
            Else
                countryOfOriginIdParam = System.DBNull.Value
            End If
            Dim breedingFactilitiesParam As Object
            If (Me.IsBreedingFactilitiesNull = false) Then
                breedingFactilitiesParam = EnterpriseObjects.Common.ParseSQLText(Me.BreedingFactilities)
            Else
                breedingFactilitiesParam = System.DBNull.Value
            End If
            Dim specimenReportDateParam As Date = Me.SpecimenReportDate
            Dim otherCITESSourceExplanationParam As Object
            If (Me.IsOtherCITESSourceExplanationNull = false) Then
                otherCITESSourceExplanationParam = EnterpriseObjects.Common.ParseSQLText(Me.OtherCITESSourceExplanation)
            Else
                otherCITESSourceExplanationParam = System.DBNull.Value
            End If
            Dim breederNameAddressParam As Object
            If (Me.IsBreederNameAddressNull = false) Then
                breederNameAddressParam = EnterpriseObjects.Common.ParseSQLText(Me.BreederNameAddress)
            Else
                breederNameAddressParam = System.DBNull.Value
            End If
            Dim captivebredGenerationParam As Object
            If (Me.IsCaptivebredGenerationNull = false) Then
                captivebredGenerationParam = Me.CaptivebredGeneration
            Else
                captivebredGenerationParam = System.DBNull.Value
            End If
            Dim otherInformationParam As Object
            If (Me.IsOtherInformationNull = false) Then
                otherInformationParam = EnterpriseObjects.Common.ParseSQLText(Me.OtherInformation)
            Else
                otherInformationParam = System.DBNull.Value
            End If
            Dim wildTakenDateParam As Object
            If (Me.IsWildTakenDateNull = false) Then
                wildTakenDateParam = Me.WildTakenDate
            Else
                wildTakenDateParam = System.DBNull.Value
            End If
            Dim dOENumberParam As Object
            If (Me.IsDOENumberNull = false) Then
                dOENumberParam = EnterpriseObjects.Common.ParseSQLText(Me.DOENumber)
            Else
                dOENumberParam = System.DBNull.Value
            End If
            Dim wildTakenDisabilityDetailsParam As Object
            If (Me.IsWildTakenDisabilityDetailsNull = false) Then
                wildTakenDisabilityDetailsParam = EnterpriseObjects.Common.ParseSQLText(Me.WildTakenDisabilityDetails)
            Else
                wildTakenDisabilityDetailsParam = System.DBNull.Value
            End If
            Dim breedingTechniqueDetailsParam As Object
            If (Me.IsBreedingTechniqueDetailsNull = false) Then
                breedingTechniqueDetailsParam = EnterpriseObjects.Common.ParseSQLText(Me.BreedingTechniqueDetails)
            Else
                breedingTechniqueDetailsParam = System.DBNull.Value
            End If
            Dim founderBreedingStockDetailsParam As Object
            If (Me.IsFounderBreedingStockDetailsNull = false) Then
                founderBreedingStockDetailsParam = EnterpriseObjects.Common.ParseSQLText(Me.FounderBreedingStockDetails)
            Else
                founderBreedingStockDetailsParam = System.DBNull.Value
            End If
            Dim establishmentBredtoF2DetailsParam As Object
            If (Me.IsEstablishmentBredtoF2DetailsNull = false) Then
                establishmentBredtoF2DetailsParam = EnterpriseObjects.Common.ParseSQLText(Me.EstablishmentBredtoF2Details)
            Else
                establishmentBredtoF2DetailsParam = System.DBNull.Value
            End If
            Dim breedingwithoutWildAugmentationDetailsParam As Object
            If (Me.IsBreedingwithoutWildAugmentationDetailsNull = false) Then
                breedingwithoutWildAugmentationDetailsParam = EnterpriseObjects.Common.ParseSQLText(Me.BreedingwithoutWildAugmentationDetails)
            Else
                breedingwithoutWildAugmentationDetailsParam = System.DBNull.Value
            End If
            Dim breedingStockSizeDetailsParam As Object
            If (Me.IsBreedingStockSizeDetailsNull = false) Then
                breedingStockSizeDetailsParam = EnterpriseObjects.Common.ParseSQLText(Me.BreedingStockSizeDetails)
            Else
                breedingStockSizeDetailsParam = System.DBNull.Value
            End If
            Dim importExportPurposeDetailsParam As Object
            If (Me.IsImportExportPurposeDetailsNull = false) Then
                importExportPurposeDetailsParam = EnterpriseObjects.Common.ParseSQLText(Me.ImportExportPurposeDetails)
            Else
                importExportPurposeDetailsParam = System.DBNull.Value
            End If
            Dim speciesConservationDetailsParam As Object
            If (Me.IsSpeciesConservationDetailsNull = false) Then
                speciesConservationDetailsParam = EnterpriseObjects.Common.ParseSQLText(Me.SpeciesConservationDetails)
            Else
                speciesConservationDetailsParam = System.DBNull.Value
            End If
            Dim declarationAcknowledgedParam As Object
            If (Me.IsDeclarationAcknowledgedNull = false) Then
                declarationAcknowledgedParam = Me.DeclarationAcknowledged
            Else
                declarationAcknowledgedParam = System.DBNull.Value
            End If
            Dim entryDateTimeParam As Object
            If (Me.IsEntryDateTimeNull = false) Then
                entryDateTimeParam = Me.EntryDateTime
            Else
                entryDateTimeParam = System.DBNull.Value
            End If
            Dim studBookNumberParam As Object
            If (Me.IsStudBookNumberNull = false) Then
                studBookNumberParam = EnterpriseObjects.Common.ParseSQLText(Me.StudBookNumber)
            Else
                studBookNumberParam = System.DBNull.Value
            End If
            Dim roleParam As Object
            If (Me.IsRoleNull = false) Then
                roleParam = EnterpriseObjects.Common.ParseSQLText(Me.Role)
            Else
                roleParam = System.DBNull.Value
            End If
            Dim presentSpecAddressParam As Object
            If (Me.IsPresentSpecAddressNull = false) Then
                presentSpecAddressParam = EnterpriseObjects.Common.ParseSQLText(Me.PresentSpecAddress)
            Else
                presentSpecAddressParam = System.DBNull.Value
            End If
            Dim sourceUnknownExplanationParam As Object
            If (Me.IsSourceUnknownExplanationNull = false) Then
                sourceUnknownExplanationParam = EnterpriseObjects.Common.ParseSQLText(Me.SourceUnknownExplanation)
            Else
                sourceUnknownExplanationParam = System.DBNull.Value
            End If
            Dim aimsObjectivesParam As Object
            If (Me.IsAimsObjectivesNull = false) Then
                aimsObjectivesParam = EnterpriseObjects.Common.ParseSQLText(Me.AimsObjectives)
            Else
                aimsObjectivesParam = System.DBNull.Value
            End If
            Dim howObjectivesAchievedParam As Object
            If (Me.IsHowObjectivesAchievedNull = false) Then
                howObjectivesAchievedParam = EnterpriseObjects.Common.ParseSQLText(Me.HowObjectivesAchieved)
            Else
                howObjectivesAchievedParam = System.DBNull.Value
            End If
            Dim otherSpecimensInvolvedParam As Object
            If (Me.IsOtherSpecimensInvolvedNull = false) Then
                otherSpecimensInvolvedParam = EnterpriseObjects.Common.ParseSQLText(Me.OtherSpecimensInvolved)
            Else
                otherSpecimensInvolvedParam = System.DBNull.Value
            End If
            Dim breedingSuccessParam As Object
            If (Me.IsBreedingSuccessNull = false) Then
                breedingSuccessParam = EnterpriseObjects.Common.ParseSQLText(Me.BreedingSuccess)
            Else
                breedingSuccessParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.SpecimenReport.ServiceObject.Update(Me.Id, specimenIdParam, permitIdParam, originIdParam, seizedByCustomsParam, importNumberParam, importerParam, exportNumberParam, countryOfOriginIdParam, breedingFactilitiesParam, specimenReportDateParam, otherCITESSourceExplanationParam, breederNameAddressParam, captivebredGenerationParam, otherInformationParam, wildTakenDateParam, dOENumberParam, wildTakenDisabilityDetailsParam, breedingTechniqueDetailsParam, founderBreedingStockDetailsParam, establishmentBredtoF2DetailsParam, breedingwithoutWildAugmentationDetailsParam, breedingStockSizeDetailsParam, importExportPurposeDetailsParam, speciesConservationDetailsParam, declarationAcknowledgedParam, entryDateTimeParam, studBookNumberParam, roleParam, presentSpecAddressParam, sourceUnknownExplanationParam, aimsObjectivesParam, howObjectivesAchievedParam, otherSpecimensInvolvedParam, breedingSuccessParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
