'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'ApplicationNote'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class ApplicationNoteServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.ApplicationNoteSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.ApplicationNoteSet
            Return CType(MyBase.GetAll("eosp_SelectApplicationNote", GetType(EntitySet.ApplicationNoteSet), includeHyphen, includeInactive, orderBy),EntitySet.ApplicationNoteSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.ApplicationNoteSet
            Return Me.GetAll(includeHyphen, includeInactive, ApplicationNoteServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, ApplicationNoteServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Function GetById(ByVal idColumns() As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationNote
            Return CType(MyBase.GetById("eosp_SelectApplicationNote", New String() {"ApplicationId", "NoteId"}, idColumns, GetType(EntitySet.ApplicationNoteSet), tran),Entity.ApplicationNote)
        End Function
        
        Public Overloads Function GetById(ByVal idColumns() As Integer) As Entity.ApplicationNote
            Return Me.GetById(idColumns, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal idColumns() As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(idColumns, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal idColumns() As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteApplicationNote", New String() {"ApplicationId", "NoteId"}, idColumns, checkSum, transaction)
        End Function
        
        'GetForApplication - links to the Application table...
        Public Overloads Function GetForApplication(ByVal ApplicationId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ApplicationNoteSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from ApplicationNote where ApplicationId"& _ 
"=" + ApplicationId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.ApplicationNoteSet), tran),EntitySet.ApplicationNoteSet)
        End Function
        
        'GetForApplication - links to the Application table...
        Public Overloads Function GetForApplication(ByVal ApplicationId As Integer) As EntitySet.ApplicationNoteSet
            Return Me.GetForApplication(ApplicationId, Nothing)
        End Function
        
        'GetForNote - links to the Notes table...
        Public Overloads Function GetForNote(ByVal NoteId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ApplicationNoteSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from ApplicationNote where NoteId=" + NoteId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.ApplicationNoteSet), tran),EntitySet.ApplicationNoteSet)
        End Function
        
        'GetForNote - links to the Notes table...
        Public Overloads Function GetForNote(ByVal NoteId As Integer) As EntitySet.ApplicationNoteSet
            Return Me.GetForNote(NoteId, Nothing)
        End Function
        
        Public Overloads Sub Insert(ByVal applicationId As Integer, ByVal noteId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction)
            Sprocs.eosp_CreateApplicationNote(applicationId, noteId, transaction)
        End Sub
        
        Public Overloads Sub Insert(ByVal applicationId As Integer, ByVal noteId As Integer)
            Me.Insert(applicationId, noteId, Nothing)
        End Sub
        
        Public Overloads Sub Insert(ByVal applicationNote As Entity.ApplicationNote)
            Me.Insert(applicationNote(0), applicationNote(1))
        End Sub
        
        Public Overloads Sub Insert(ByVal applicationNote As Entity.ApplicationNote, ByVal transaction As System.Data.SqlClient.SqlTransaction)
            Me.Insert(applicationNote(0), applicationNote(1), transaction)
        End Sub
        
        Public Overloads Function Update(ByVal applicationId As Integer, ByVal noteId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationNote
            Return Sprocs.eosp_UpdateApplicationNote(applicationId, noteId, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal applicationId As Integer, ByVal noteId As Integer) As Entity.ApplicationNote
            Return Me.Update(applicationId, noteId, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal applicationId As Integer, ByVal noteId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationNote
            Return Me.Update(applicationId, noteId, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal applicationId As Integer, ByVal noteId As Integer, ByVal checkSum As Integer) As Entity.ApplicationNote
            Return Me.Update(applicationId, noteId, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal applicationNote As Entity.ApplicationNote) As Entity.ApplicationNote
            Return Me.Update(applicationNote(0), applicationNote(1))
        End Function
        
        Public Overloads Function Update(ByVal applicationNote As Entity.ApplicationNote, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationNote
            Return Me.Update(applicationNote(0), applicationNote(1), transaction)
        End Function
        
        Public Overloads Function Update(ByVal applicationNote As Entity.ApplicationNote, ByVal checkSum As Integer) As Entity.ApplicationNote
            Return Me.Update(applicationNote(0), applicationNote(1), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal applicationNote As Entity.ApplicationNote, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.ApplicationNote
            Return Me.Update(applicationNote(0), applicationNote(1), checkSum, transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
        End Enum
    End Class
End Namespace
