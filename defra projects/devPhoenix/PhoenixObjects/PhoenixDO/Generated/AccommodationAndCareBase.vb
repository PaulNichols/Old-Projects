'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'AccommodationAndCare'
    '*DO NOT* modify this file.
    'Add new properties and methods to AccommodationAndCare instead.
    Public MustInherit Class AccommodationAndCareBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal accommodationAndCareId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(accommodationAndCareId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal accommodationAndCareId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(accommodationAndCareId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property AccommodationAndCareId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Property PermitId As Integer
            Get
                Return CType(Me(1),Integer)
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property EstablishmentDescription As String
            Get
                If (Me.IsEstablishmentDescriptionNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(2),String)
                End If
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property Enclosures As String
            Get
                If (Me.IsEnclosuresNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(3),String)
                End If
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(255)>  _
        Public Property SpecimensPerEnclosure As String
            Get
                If (Me.IsSpecimensPerEnclosureNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(4),String)
                End If
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property EnclosureFurnishing As String
            Get
                If (Me.IsEnclosureFurnishingNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(5),String)
                End If
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property FoodProvisions As String
            Get
                If (Me.IsFoodProvisionsNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(6),String)
                End If
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property VeterinaryProvisions As String
            Get
                If (Me.IsVeterinaryProvisionsNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(7),String)
                End If
            End Get
            Set
                Me(7) = value
            End Set
        End Property
        
        Public Property QuarantineApproved As Boolean
            Get
                If (Me.IsQuarantineApprovedNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(8),Boolean)
                End If
            End Get
            Set
                Me(8) = value
            End Set
        End Property
        
        Public Property LicensedZoo As Boolean
            Get
                If (Me.IsLicensedZooNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(9),Boolean)
                End If
            End Get
            Set
                Me(9) = value
            End Set
        End Property
        
        Public Property LicensedPetShop As Boolean
            Get
                If (Me.IsLicensedPetShopNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(10),Boolean)
                End If
            End Get
            Set
                Me(10) = value
            End Set
        End Property
        
        Public Property DangerousWildAnimalLicenceHeld As Boolean
            Get
                If (Me.IsDangerousWildAnimalLicenceHeldNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(11),Boolean)
                End If
            End Get
            Set
                Me(11) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property DangerousWildAnimalLicenceNumber As String
            Get
                If (Me.IsDangerousWildAnimalLicenceNumberNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(12),String)
                End If
            End Get
            Set
                Me(12) = value
            End Set
        End Property
        
        Public Property BALAIDeirectiveLicenceHeld As Boolean
            Get
                If (Me.IsBALAIDeirectiveLicenceHeldNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(13),Boolean)
                End If
            End Get
            Set
                Me(13) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property BALAIDeirectiveLicenceNumber As String
            Get
                If (Me.IsBALAIDeirectiveLicenceNumberNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(14),String)
                End If
            End Get
            Set
                Me(14) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property OtherInformation As String
            Get
                If (Me.IsOtherInformationNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(15),String)
                End If
            End Get
            Set
                Me(15) = value
            End Set
        End Property
        
        Public Property DeclarationAcknowledgement As Boolean
            Get
                If (Me.IsDeclarationAcknowledgementNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(16),Boolean)
                End If
            End Get
            Set
                Me(16) = value
            End Set
        End Property
        
        Public Property ReciptDate As Date
            Get
                If (Me.IsReciptDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(17),Date)
                End If
            End Get
            Set
                Me(17) = value
            End Set
        End Property
        
        Public Property EntryDate As Date
            Get
                If (Me.IsEntryDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(18),Date)
                End If
            End Get
            Set
                Me(18) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(255)>  _
        Public Property PremisesDetails As String
            Get
                If (Me.IsPremisesDetailsNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(19),String)
                End If
            End Get
            Set
                Me(19) = value
            End Set
        End Property
        
        Public Property SpecieId As Integer
            Get
                Return CType(Me(20),Integer)
            End Get
            Set
                Me(20) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(500)>  _
        Public Property ApplicantName As String
            Get
                Return CType(Me(21),String)
            End Get
            Set
                Me(21) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property ScientificName As String
            Get
                If (Me.IsScientificNameNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(22),String)
                End If
            End Get
            Set
                Me(22) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property CommonName As String
            Get
                If (Me.IsCommonNameNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(23),String)
                End If
            End Get
            Set
                Me(23) = value
            End Set
        End Property
        
        Public Property TotalNumberOfSpecimens As Integer
            Get
                If (Me.IsTotalNumberOfSpecimensNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(24),Integer)
                End If
            End Get
            Set
                Me(24) = value
            End Set
        End Property
        
        Public Property ApplicantId As Integer
            Get
                If (Me.IsApplicantIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(25),Integer)
                End If
            End Get
            Set
                Me(25) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(8000)>  _
        Public Property DeliveryAddress As String
            Get
                If (Me.IsDeliveryAddressNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(26),String)
                End If
            End Get
            Set
                Me(26) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(27),Integer)
                End If
            End Get
            Set
                Me(27) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.AccommodationAndCareService
            Get
                Return CType(GetServiceObject(GetType(Service.AccommodationAndCareService)),Service.AccommodationAndCareService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsEstablishmentDescriptionNull() As Boolean
            Return Me.IsNull(2)
        End Function
        
        Public Sub SetEstablishmentDescriptionToNull()
            Me(2) = System.DBNull.Value
        End Sub
        
        Public Function IsEnclosuresNull() As Boolean
            Return Me.IsNull(3)
        End Function
        
        Public Sub SetEnclosuresToNull()
            Me(3) = System.DBNull.Value
        End Sub
        
        Public Function IsSpecimensPerEnclosureNull() As Boolean
            Return Me.IsNull(4)
        End Function
        
        Public Sub SetSpecimensPerEnclosureToNull()
            Me(4) = System.DBNull.Value
        End Sub
        
        Public Function IsEnclosureFurnishingNull() As Boolean
            Return Me.IsNull(5)
        End Function
        
        Public Sub SetEnclosureFurnishingToNull()
            Me(5) = System.DBNull.Value
        End Sub
        
        Public Function IsFoodProvisionsNull() As Boolean
            Return Me.IsNull(6)
        End Function
        
        Public Sub SetFoodProvisionsToNull()
            Me(6) = System.DBNull.Value
        End Sub
        
        Public Function IsVeterinaryProvisionsNull() As Boolean
            Return Me.IsNull(7)
        End Function
        
        Public Sub SetVeterinaryProvisionsToNull()
            Me(7) = System.DBNull.Value
        End Sub
        
        Public Function IsQuarantineApprovedNull() As Boolean
            Return Me.IsNull(8)
        End Function
        
        Public Sub SetQuarantineApprovedToNull()
            Me(8) = System.DBNull.Value
        End Sub
        
        Public Function IsLicensedZooNull() As Boolean
            Return Me.IsNull(9)
        End Function
        
        Public Sub SetLicensedZooToNull()
            Me(9) = System.DBNull.Value
        End Sub
        
        Public Function IsLicensedPetShopNull() As Boolean
            Return Me.IsNull(10)
        End Function
        
        Public Sub SetLicensedPetShopToNull()
            Me(10) = System.DBNull.Value
        End Sub
        
        Public Function IsDangerousWildAnimalLicenceHeldNull() As Boolean
            Return Me.IsNull(11)
        End Function
        
        Public Sub SetDangerousWildAnimalLicenceHeldToNull()
            Me(11) = System.DBNull.Value
        End Sub
        
        Public Function IsDangerousWildAnimalLicenceNumberNull() As Boolean
            Return Me.IsNull(12)
        End Function
        
        Public Sub SetDangerousWildAnimalLicenceNumberToNull()
            Me(12) = System.DBNull.Value
        End Sub
        
        Public Function IsBALAIDeirectiveLicenceHeldNull() As Boolean
            Return Me.IsNull(13)
        End Function
        
        Public Sub SetBALAIDeirectiveLicenceHeldToNull()
            Me(13) = System.DBNull.Value
        End Sub
        
        Public Function IsBALAIDeirectiveLicenceNumberNull() As Boolean
            Return Me.IsNull(14)
        End Function
        
        Public Sub SetBALAIDeirectiveLicenceNumberToNull()
            Me(14) = System.DBNull.Value
        End Sub
        
        Public Function IsOtherInformationNull() As Boolean
            Return Me.IsNull(15)
        End Function
        
        Public Sub SetOtherInformationToNull()
            Me(15) = System.DBNull.Value
        End Sub
        
        Public Function IsDeclarationAcknowledgementNull() As Boolean
            Return Me.IsNull(16)
        End Function
        
        Public Sub SetDeclarationAcknowledgementToNull()
            Me(16) = System.DBNull.Value
        End Sub
        
        Public Function IsReciptDateNull() As Boolean
            Return Me.IsNull(17)
        End Function
        
        Public Sub SetReciptDateToNull()
            Me(17) = System.DBNull.Value
        End Sub
        
        Public Function IsEntryDateNull() As Boolean
            Return Me.IsNull(18)
        End Function
        
        Public Sub SetEntryDateToNull()
            Me(18) = System.DBNull.Value
        End Sub
        
        Public Function IsPremisesDetailsNull() As Boolean
            Return Me.IsNull(19)
        End Function
        
        Public Sub SetPremisesDetailsToNull()
            Me(19) = System.DBNull.Value
        End Sub
        
        Public Function IsScientificNameNull() As Boolean
            Return Me.IsNull(22)
        End Function
        
        Public Sub SetScientificNameToNull()
            Me(22) = System.DBNull.Value
        End Sub
        
        Public Function IsCommonNameNull() As Boolean
            Return Me.IsNull(23)
        End Function
        
        Public Sub SetCommonNameToNull()
            Me(23) = System.DBNull.Value
        End Sub
        
        Public Function IsTotalNumberOfSpecimensNull() As Boolean
            Return Me.IsNull(24)
        End Function
        
        Public Sub SetTotalNumberOfSpecimensToNull()
            Me(24) = System.DBNull.Value
        End Sub
        
        Public Function IsApplicantIdNull() As Boolean
            Return Me.IsNull(25)
        End Function
        
        Public Sub SetApplicantIdToNull()
            Me(25) = System.DBNull.Value
        End Sub
        
        Public Function IsDeliveryAddressNull() As Boolean
            Return Me.IsNull(26)
        End Function
        
        Public Sub SetDeliveryAddressToNull()
            Me(26) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(27)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(27) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(28)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.AccommodationAndCareSet
            Return AccommodationAndCareBase.GetAll(false, false, AccommodationAndCareServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.AccommodationAndCareSet
            Return AccommodationAndCareBase.GetAll(includeHyphen, false, AccommodationAndCareServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As AccommodationAndCareServiceBase.OrderBy) As EntitySet.AccommodationAndCareSet
            Dim service As Service.AccommodationAndCareService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As AccommodationAndCareServiceBase.OrderBy) As EntitySet.AccommodationAndCareSet
            Return AccommodationAndCareBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal accommodationAndCareId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.AccommodationAndCare
            Dim service As Service.AccommodationAndCareService
            service = ServiceObject
            Return service.GetById(AccommodationAndCareId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal accommodationAndCareId As Integer) As Entity.AccommodationAndCare
            Dim service As Service.AccommodationAndCareService
            service = ServiceObject
            Return service.GetById(AccommodationAndCareId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal accommodationAndCareId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.AccommodationAndCareService
            service = ServiceObject
            Return service.DeleteById(accommodationAndCareId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal accommodationAndCareId As Integer) As Boolean
            Return AccommodationAndCareBase.DeleteById(accommodationAndCareId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal accommodationAndCareId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return AccommodationAndCareBase.DeleteById(accommodationAndCareId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForSpecie(ByVal specieId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.AccommodationAndCareSet
            Dim service As Service.AccommodationAndCareService
            service = ServiceObject
            Return service.GetForSpecie(specieId, tran)
        End Function
        
        Public Overloads Shared Function GetForSpecie(ByVal specieId As Integer) As EntitySet.AccommodationAndCareSet
            Return AccommodationAndCareBase.GetForSpecie(specieId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForParty(ByVal partyId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.AccommodationAndCareSet
            Dim service As Service.AccommodationAndCareService
            service = ServiceObject
            Return service.GetForParty(partyId, tran)
        End Function
        
        Public Overloads Shared Function GetForParty(ByVal partyId As Integer) As EntitySet.AccommodationAndCareSet
            Return AccommodationAndCareBase.GetForParty(partyId, Nothing)
        End Function
        
        Public Shared Function Insert( _
                    ByVal permitId As Integer,  _
                    ByVal establishmentDescription As Object,  _
                    ByVal enclosures As Object,  _
                    ByVal specimensPerEnclosure As Object,  _
                    ByVal enclosureFurnishing As Object,  _
                    ByVal foodProvisions As Object,  _
                    ByVal veterinaryProvisions As Object,  _
                    ByVal quarantineApproved As Object,  _
                    ByVal licensedZoo As Object,  _
                    ByVal licensedPetShop As Object,  _
                    ByVal dangerousWildAnimalLicenceHeld As Object,  _
                    ByVal dangerousWildAnimalLicenceNumber As Object,  _
                    ByVal bALAIDeirectiveLicenceHeld As Object,  _
                    ByVal bALAIDeirectiveLicenceNumber As Object,  _
                    ByVal otherInformation As Object,  _
                    ByVal declarationAcknowledgement As Object,  _
                    ByVal reciptDate As Object,  _
                    ByVal entryDate As Object,  _
                    ByVal premisesDetails As Object,  _
                    ByVal specieId As Integer,  _
                    ByVal applicantName As String,  _
                    ByVal scientificName As Object,  _
                    ByVal commonName As Object,  _
                    ByVal totalNumberOfSpecimens As Object,  _
                    ByVal applicantId As Object,  _
                    ByVal deliveryAddress As Object) As Entity.AccommodationAndCare
            Return Entity.AccommodationAndCare.ServiceObject.Insert(permitId, establishmentDescription, enclosures, specimensPerEnclosure, enclosureFurnishing, foodProvisions, veterinaryProvisions, quarantineApproved, licensedZoo, licensedPetShop, dangerousWildAnimalLicenceHeld, dangerousWildAnimalLicenceNumber, bALAIDeirectiveLicenceHeld, bALAIDeirectiveLicenceNumber, otherInformation, declarationAcknowledgement, reciptDate, entryDate, premisesDetails, specieId, applicantName, scientificName, commonName, totalNumberOfSpecimens, applicantId, deliveryAddress)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim permitIdParam As Integer = Me.PermitId
            Dim establishmentDescriptionParam As Object
            If (Me.IsEstablishmentDescriptionNull = false) Then
                establishmentDescriptionParam = EnterpriseObjects.Common.ParseSQLText(Me.EstablishmentDescription)
            Else
                establishmentDescriptionParam = System.DBNull.Value
            End If
            Dim enclosuresParam As Object
            If (Me.IsEnclosuresNull = false) Then
                enclosuresParam = EnterpriseObjects.Common.ParseSQLText(Me.Enclosures)
            Else
                enclosuresParam = System.DBNull.Value
            End If
            Dim specimensPerEnclosureParam As Object
            If (Me.IsSpecimensPerEnclosureNull = false) Then
                specimensPerEnclosureParam = EnterpriseObjects.Common.ParseSQLText(Me.SpecimensPerEnclosure)
            Else
                specimensPerEnclosureParam = System.DBNull.Value
            End If
            Dim enclosureFurnishingParam As Object
            If (Me.IsEnclosureFurnishingNull = false) Then
                enclosureFurnishingParam = EnterpriseObjects.Common.ParseSQLText(Me.EnclosureFurnishing)
            Else
                enclosureFurnishingParam = System.DBNull.Value
            End If
            Dim foodProvisionsParam As Object
            If (Me.IsFoodProvisionsNull = false) Then
                foodProvisionsParam = EnterpriseObjects.Common.ParseSQLText(Me.FoodProvisions)
            Else
                foodProvisionsParam = System.DBNull.Value
            End If
            Dim veterinaryProvisionsParam As Object
            If (Me.IsVeterinaryProvisionsNull = false) Then
                veterinaryProvisionsParam = EnterpriseObjects.Common.ParseSQLText(Me.VeterinaryProvisions)
            Else
                veterinaryProvisionsParam = System.DBNull.Value
            End If
            Dim quarantineApprovedParam As Object
            If (Me.IsQuarantineApprovedNull = false) Then
                quarantineApprovedParam = Me.QuarantineApproved
            Else
                quarantineApprovedParam = System.DBNull.Value
            End If
            Dim licensedZooParam As Object
            If (Me.IsLicensedZooNull = false) Then
                licensedZooParam = Me.LicensedZoo
            Else
                licensedZooParam = System.DBNull.Value
            End If
            Dim licensedPetShopParam As Object
            If (Me.IsLicensedPetShopNull = false) Then
                licensedPetShopParam = Me.LicensedPetShop
            Else
                licensedPetShopParam = System.DBNull.Value
            End If
            Dim dangerousWildAnimalLicenceHeldParam As Object
            If (Me.IsDangerousWildAnimalLicenceHeldNull = false) Then
                dangerousWildAnimalLicenceHeldParam = Me.DangerousWildAnimalLicenceHeld
            Else
                dangerousWildAnimalLicenceHeldParam = System.DBNull.Value
            End If
            Dim dangerousWildAnimalLicenceNumberParam As Object
            If (Me.IsDangerousWildAnimalLicenceNumberNull = false) Then
                dangerousWildAnimalLicenceNumberParam = EnterpriseObjects.Common.ParseSQLText(Me.DangerousWildAnimalLicenceNumber)
            Else
                dangerousWildAnimalLicenceNumberParam = System.DBNull.Value
            End If
            Dim bALAIDeirectiveLicenceHeldParam As Object
            If (Me.IsBALAIDeirectiveLicenceHeldNull = false) Then
                bALAIDeirectiveLicenceHeldParam = Me.BALAIDeirectiveLicenceHeld
            Else
                bALAIDeirectiveLicenceHeldParam = System.DBNull.Value
            End If
            Dim bALAIDeirectiveLicenceNumberParam As Object
            If (Me.IsBALAIDeirectiveLicenceNumberNull = false) Then
                bALAIDeirectiveLicenceNumberParam = EnterpriseObjects.Common.ParseSQLText(Me.BALAIDeirectiveLicenceNumber)
            Else
                bALAIDeirectiveLicenceNumberParam = System.DBNull.Value
            End If
            Dim otherInformationParam As Object
            If (Me.IsOtherInformationNull = false) Then
                otherInformationParam = EnterpriseObjects.Common.ParseSQLText(Me.OtherInformation)
            Else
                otherInformationParam = System.DBNull.Value
            End If
            Dim declarationAcknowledgementParam As Object
            If (Me.IsDeclarationAcknowledgementNull = false) Then
                declarationAcknowledgementParam = Me.DeclarationAcknowledgement
            Else
                declarationAcknowledgementParam = System.DBNull.Value
            End If
            Dim reciptDateParam As Object
            If (Me.IsReciptDateNull = false) Then
                reciptDateParam = Me.ReciptDate
            Else
                reciptDateParam = System.DBNull.Value
            End If
            Dim entryDateParam As Object
            If (Me.IsEntryDateNull = false) Then
                entryDateParam = Me.EntryDate
            Else
                entryDateParam = System.DBNull.Value
            End If
            Dim premisesDetailsParam As Object
            If (Me.IsPremisesDetailsNull = false) Then
                premisesDetailsParam = EnterpriseObjects.Common.ParseSQLText(Me.PremisesDetails)
            Else
                premisesDetailsParam = System.DBNull.Value
            End If
            Dim specieIdParam As Integer = Me.SpecieId
            Dim applicantNameParam As String = Me.ApplicantName
            Dim scientificNameParam As Object
            If (Me.IsScientificNameNull = false) Then
                scientificNameParam = EnterpriseObjects.Common.ParseSQLText(Me.ScientificName)
            Else
                scientificNameParam = System.DBNull.Value
            End If
            Dim commonNameParam As Object
            If (Me.IsCommonNameNull = false) Then
                commonNameParam = EnterpriseObjects.Common.ParseSQLText(Me.CommonName)
            Else
                commonNameParam = System.DBNull.Value
            End If
            Dim totalNumberOfSpecimensParam As Object
            If (Me.IsTotalNumberOfSpecimensNull = false) Then
                totalNumberOfSpecimensParam = Me.TotalNumberOfSpecimens
            Else
                totalNumberOfSpecimensParam = System.DBNull.Value
            End If
            Dim applicantIdParam As Object
            If (Me.IsApplicantIdNull = false) Then
                applicantIdParam = Me.ApplicantId
            Else
                applicantIdParam = System.DBNull.Value
            End If
            Dim deliveryAddressParam As Object
            If (Me.IsDeliveryAddressNull = false) Then
                deliveryAddressParam = EnterpriseObjects.Common.ParseSQLText(Me.DeliveryAddress)
            Else
                deliveryAddressParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.AccommodationAndCare.ServiceObject.Update(Me.Id, permitIdParam, establishmentDescriptionParam, enclosuresParam, specimensPerEnclosureParam, enclosureFurnishingParam, foodProvisionsParam, veterinaryProvisionsParam, quarantineApprovedParam, licensedZooParam, licensedPetShopParam, dangerousWildAnimalLicenceHeldParam, dangerousWildAnimalLicenceNumberParam, bALAIDeirectiveLicenceHeldParam, bALAIDeirectiveLicenceNumberParam, otherInformationParam, declarationAcknowledgementParam, reciptDateParam, entryDateParam, premisesDetailsParam, specieIdParam, applicantNameParam, scientificNameParam, commonNameParam, totalNumberOfSpecimensParam, applicantIdParam, deliveryAddressParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
