'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'CITESPermit'
    '*DO NOT* modify this file.
    'Add new properties and methods to CITESPermit instead.
    Public MustInherit Class CITESPermitBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal cITESPermitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(cITESPermitId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal cITESPermitId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(cITESPermitId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property CITESPermitId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Property PermitId As Integer
            Get
                Return CType(Me(1),Integer)
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        Public Property Derivative As Integer
            Get
                If (Me.IsDerivativeNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(2),Integer)
                End If
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        Public Property AuthorityLocation As Integer
            Get
                If (Me.IsAuthorityLocationNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(3),Integer)
                End If
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        Public Property UnderDerogation As Boolean
            Get
                Return CType(Me(4),Boolean)
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        Public Property IsRetrospective As Boolean
            Get
                Return CType(Me(5),Boolean)
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        Public Property PurposeId As Integer
            Get
                If (Me.IsPurposeIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(6),Integer)
                End If
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        Public Property Source1Id As Integer
            Get
                If (Me.IsSource1IdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(7),Integer)
                End If
            End Get
            Set
                Me(7) = value
            End Set
        End Property
        
        Public Property Source2Id As Integer
            Get
                If (Me.IsSource2IdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(8),Integer)
                End If
            End Get
            Set
                Me(8) = value
            End Set
        End Property
        
        Public Property DelegationAuthorityId As Integer
            Get
                If (Me.IsDelegationAuthorityIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(9),Integer)
                End If
            End Get
            Set
                Me(9) = value
            End Set
        End Property
        
        Public Property ExpiryDate As Date
            Get
                If (Me.IsExpiryDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(10),Date)
                End If
            End Get
            Set
                Me(10) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(11),Integer)
                End If
            End Get
            Set
                Me(11) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.CITESPermitService
            Get
                Return CType(GetServiceObject(GetType(Service.CITESPermitService)),Service.CITESPermitService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsDerivativeNull() As Boolean
            Return Me.IsNull(2)
        End Function
        
        Public Sub SetDerivativeToNull()
            Me(2) = System.DBNull.Value
        End Sub
        
        Public Function IsAuthorityLocationNull() As Boolean
            Return Me.IsNull(3)
        End Function
        
        Public Sub SetAuthorityLocationToNull()
            Me(3) = System.DBNull.Value
        End Sub
        
        Public Function IsPurposeIdNull() As Boolean
            Return Me.IsNull(6)
        End Function
        
        Public Sub SetPurposeIdToNull()
            Me(6) = System.DBNull.Value
        End Sub
        
        Public Function IsSource1IdNull() As Boolean
            Return Me.IsNull(7)
        End Function
        
        Public Sub SetSource1IdToNull()
            Me(7) = System.DBNull.Value
        End Sub
        
        Public Function IsSource2IdNull() As Boolean
            Return Me.IsNull(8)
        End Function
        
        Public Sub SetSource2IdToNull()
            Me(8) = System.DBNull.Value
        End Sub
        
        Public Function IsDelegationAuthorityIdNull() As Boolean
            Return Me.IsNull(9)
        End Function
        
        Public Sub SetDelegationAuthorityIdToNull()
            Me(9) = System.DBNull.Value
        End Sub
        
        Public Function IsExpiryDateNull() As Boolean
            Return Me.IsNull(10)
        End Function
        
        Public Sub SetExpiryDateToNull()
            Me(10) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(11)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(11) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(12)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.CITESPermitSet
            Return CITESPermitBase.GetAll(false, false, CITESPermitServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.CITESPermitSet
            Return CITESPermitBase.GetAll(includeHyphen, false, CITESPermitServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As CITESPermitServiceBase.OrderBy) As EntitySet.CITESPermitSet
            Dim service As Service.CITESPermitService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As CITESPermitServiceBase.OrderBy) As EntitySet.CITESPermitSet
            Return CITESPermitBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal cITESPermitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.CITESPermit
            Dim service As Service.CITESPermitService
            service = ServiceObject
            Return service.GetById(CITESPermitId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal cITESPermitId As Integer) As Entity.CITESPermit
            Dim service As Service.CITESPermitService
            service = ServiceObject
            Return service.GetById(CITESPermitId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal cITESPermitId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.CITESPermitService
            service = ServiceObject
            Return service.DeleteById(cITESPermitId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal cITESPermitId As Integer) As Boolean
            Return CITESPermitBase.DeleteById(cITESPermitId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal cITESPermitId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return CITESPermitBase.DeleteById(cITESPermitId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForPermit(ByVal permitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CITESPermitSet
            Dim service As Service.CITESPermitService
            service = ServiceObject
            Return service.GetForPermit(permitId, tran)
        End Function
        
        Public Overloads Shared Function GetForPermit(ByVal permitId As Integer) As EntitySet.CITESPermitSet
            Return CITESPermitBase.GetForPermit(permitId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForCITESDerivative(ByVal cITESDerivativeId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CITESPermitSet
            Dim service As Service.CITESPermitService
            service = ServiceObject
            Return service.GetForCITESDerivative(cITESDerivativeId, tran)
        End Function
        
        Public Overloads Shared Function GetForCITESDerivative(ByVal cITESDerivativeId As Integer) As EntitySet.CITESPermitSet
            Return CITESPermitBase.GetForCITESDerivative(cITESDerivativeId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForCountry(ByVal countryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CITESPermitSet
            Dim service As Service.CITESPermitService
            service = ServiceObject
            Return service.GetForCountry(countryId, tran)
        End Function
        
        Public Overloads Shared Function GetForCountry(ByVal countryId As Integer) As EntitySet.CITESPermitSet
            Return CITESPermitBase.GetForCountry(countryId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForCITESPurpose(ByVal purposeId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CITESPermitSet
            Dim service As Service.CITESPermitService
            service = ServiceObject
            Return service.GetForCITESPurpose(purposeId, tran)
        End Function
        
        Public Overloads Shared Function GetForCITESPurpose(ByVal purposeId As Integer) As EntitySet.CITESPermitSet
            Return CITESPermitBase.GetForCITESPurpose(purposeId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForSource1IdCITESSource(ByVal sourceId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CITESPermitSet
            Dim service As Service.CITESPermitService
            service = ServiceObject
            Return service.GetForSource1IdCITESSource(sourceId, tran)
        End Function
        
        Public Overloads Shared Function GetForSource1IdCITESSource(ByVal sourceId As Integer) As EntitySet.CITESPermitSet
            Return CITESPermitBase.GetForSource1IdCITESSource(sourceId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForSource2IdCITESSource(ByVal sourceId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CITESPermitSet
            Dim service As Service.CITESPermitService
            service = ServiceObject
            Return service.GetForSource2IdCITESSource(sourceId, tran)
        End Function
        
        Public Overloads Shared Function GetForSource2IdCITESSource(ByVal sourceId As Integer) As EntitySet.CITESPermitSet
            Return CITESPermitBase.GetForSource2IdCITESSource(sourceId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForDelegationGuideline(ByVal delegationGuidelineID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CITESPermitSet
            Dim service As Service.CITESPermitService
            service = ServiceObject
            Return service.GetForDelegationGuideline(delegationGuidelineID, tran)
        End Function
        
        Public Overloads Shared Function GetForDelegationGuideline(ByVal delegationGuidelineID As Integer) As EntitySet.CITESPermitSet
            Return CITESPermitBase.GetForDelegationGuideline(delegationGuidelineID, Nothing)
        End Function
        
        Public Overloads Function GetRelatedCITESImportExportPermit(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CITESImportExportPermitSet
            Return Entity.CITESImportExportPermit.GetForCITESPermit(Me.CITESPermitId, tran)
        End Function
        
        Public Overloads Function GetRelatedCITESImportExportPermit() As EntitySet.CITESImportExportPermitSet
            Return Me.GetRelatedCITESImportExportPermit(Nothing)
        End Function
        
        Public Shared Function Insert(ByVal permitId As Integer, ByVal derivative As Object, ByVal authorityLocation As Object, ByVal underDerogation As Boolean, ByVal isRetrospective As Boolean, ByVal purposeId As Object, ByVal source1Id As Object, ByVal source2Id As Object, ByVal delegationAuthorityId As Object, ByVal expiryDate As Object) As Entity.CITESPermit
            Return Entity.CITESPermit.ServiceObject.Insert(permitId, derivative, authorityLocation, underDerogation, isRetrospective, purposeId, source1Id, source2Id, delegationAuthorityId, expiryDate)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim permitIdParam As Integer = Me.PermitId
            Dim derivativeParam As Object
            If (Me.IsDerivativeNull = false) Then
                derivativeParam = Me.Derivative
            Else
                derivativeParam = System.DBNull.Value
            End If
            Dim authorityLocationParam As Object
            If (Me.IsAuthorityLocationNull = false) Then
                authorityLocationParam = Me.AuthorityLocation
            Else
                authorityLocationParam = System.DBNull.Value
            End If
            Dim underDerogationParam As Boolean = Me.UnderDerogation
            Dim isRetrospectiveParam As Boolean = Me.IsRetrospective
            Dim purposeIdParam As Object
            If (Me.IsPurposeIdNull = false) Then
                purposeIdParam = Me.PurposeId
            Else
                purposeIdParam = System.DBNull.Value
            End If
            Dim source1IdParam As Object
            If (Me.IsSource1IdNull = false) Then
                source1IdParam = Me.Source1Id
            Else
                source1IdParam = System.DBNull.Value
            End If
            Dim source2IdParam As Object
            If (Me.IsSource2IdNull = false) Then
                source2IdParam = Me.Source2Id
            Else
                source2IdParam = System.DBNull.Value
            End If
            Dim delegationAuthorityIdParam As Object
            If (Me.IsDelegationAuthorityIdNull = false) Then
                delegationAuthorityIdParam = Me.DelegationAuthorityId
            Else
                delegationAuthorityIdParam = System.DBNull.Value
            End If
            Dim expiryDateParam As Object
            If (Me.IsExpiryDateNull = false) Then
                expiryDateParam = Me.ExpiryDate
            Else
                expiryDateParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.CITESPermit.ServiceObject.Update(Me.Id, permitIdParam, derivativeParam, authorityLocationParam, underDerogationParam, isRetrospectiveParam, purposeIdParam, source1IdParam, source2IdParam, delegationAuthorityIdParam, expiryDateParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
