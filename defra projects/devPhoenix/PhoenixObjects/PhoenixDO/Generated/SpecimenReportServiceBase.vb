'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'SpecimenReport'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class SpecimenReportServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.SpecimenReportSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.SpecimenReportSet
            Return CType(MyBase.GetAll("eosp_SelectSpecimenReport", GetType(EntitySet.SpecimenReportSet), includeHyphen, includeInactive, orderBy),EntitySet.SpecimenReportSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.SpecimenReportSet
            Return Me.GetAll(includeHyphen, includeInactive, SpecimenReportServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, SpecimenReportServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.SpecimenReportSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal specimenReportId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectSpecimenReport", "SpecimenReportId", specimenReportId, GetType(EntitySet.SpecimenReportSet), tran),Entity.SpecimenReport)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal specimenReportId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(specimenReportId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal specimenReportId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.SpecimenReport
            Return CType(MyBase.GetById("eosp_SelectSpecimenReport", "SpecimenReportId", specimenReportId, GetType(EntitySet.SpecimenReportSet), tran),Entity.SpecimenReport)
        End Function
        
        Public Overloads Function GetById(ByVal specimenReportId As Integer) As Entity.SpecimenReport
            Return Me.GetById(specimenReportId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal specimenReportId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(specimenReportId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal specimenReportId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteSpecimenReport", "SpecimenReportId", specimenReportId, checkSum, transaction)
        End Function
        
        'GetForSpecimen - links to the Specimen table...
        Public Overloads Function GetForSpecimen(ByVal SpecimenId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenReportSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from SpecimenReport where SpecimenId=" + SpecimenId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.SpecimenReportSet), tran),EntitySet.SpecimenReportSet)
        End Function
        
        'GetForSpecimen - links to the Specimen table...
        Public Overloads Function GetForSpecimen(ByVal SpecimenId As Integer) As EntitySet.SpecimenReportSet
            Return Me.GetForSpecimen(SpecimenId, Nothing)
        End Function
        
        'GetForPermit - links to the Permit table...
        Public Overloads Function GetForPermit(ByVal PermitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenReportSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from SpecimenReport where PermitId=" + PermitId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.SpecimenReportSet), tran),EntitySet.SpecimenReportSet)
        End Function
        
        'GetForPermit - links to the Permit table...
        Public Overloads Function GetForPermit(ByVal PermitId As Integer) As EntitySet.SpecimenReportSet
            Return Me.GetForPermit(PermitId, Nothing)
        End Function
        
        'GetForSpecimenReportOrigin - links to the SpecimenReportOrigin table...
        Public Overloads Function GetForSpecimenReportOrigin(ByVal SpecimenReportOriginId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenReportSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from SpecimenReport where OriginId=" + SpecimenReportOriginId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.SpecimenReportSet), tran),EntitySet.SpecimenReportSet)
        End Function
        
        'GetForSpecimenReportOrigin - links to the SpecimenReportOrigin table...
        Public Overloads Function GetForSpecimenReportOrigin(ByVal SpecimenReportOriginId As Integer) As EntitySet.SpecimenReportSet
            Return Me.GetForSpecimenReportOrigin(SpecimenReportOriginId, Nothing)
        End Function
        
        'GetForCountry - links to the Country table...
        Public Overloads Function GetForCountry(ByVal CountryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenReportSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from SpecimenReport where CountryOfOrigi"& _ 
"nId=" + CountryId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.SpecimenReportSet), tran),EntitySet.SpecimenReportSet)
        End Function
        
        'GetForCountry - links to the Country table...
        Public Overloads Function GetForCountry(ByVal CountryId As Integer) As EntitySet.SpecimenReportSet
            Return Me.GetForCountry(CountryId, Nothing)
        End Function
        
        Public Overloads Function Insert( _
                    ByVal specimenId As Integer,  _
                    ByVal permitId As Integer,  _
                    ByVal originId As Object,  _
                    ByVal seizedByCustoms As Object,  _
                    ByVal importNumber As Object,  _
                    ByVal importer As Object,  _
                    ByVal exportNumber As Object,  _
                    ByVal countryOfOriginId As Object,  _
                    ByVal breedingFactilities As Object,  _
                    ByVal specimenReportDate As Date,  _
                    ByVal otherCITESSourceExplanation As Object,  _
                    ByVal breederNameAddress As Object,  _
                    ByVal captivebredGeneration As Object,  _
                    ByVal otherInformation As Object,  _
                    ByVal wildTakenDate As Object,  _
                    ByVal dOENumber As Object,  _
                    ByVal wildTakenDisabilityDetails As Object,  _
                    ByVal breedingTechniqueDetails As Object,  _
                    ByVal founderBreedingStockDetails As Object,  _
                    ByVal establishmentBredtoF2Details As Object,  _
                    ByVal breedingwithoutWildAugmentationDetails As Object,  _
                    ByVal breedingStockSizeDetails As Object,  _
                    ByVal importExportPurposeDetails As Object,  _
                    ByVal speciesConservationDetails As Object,  _
                    ByVal declarationAcknowledged As Object,  _
                    ByVal entryDateTime As Object,  _
                    ByVal studBookNumber As Object,  _
                    ByVal role As Object,  _
                    ByVal presentSpecAddress As Object,  _
                    ByVal sourceUnknownExplanation As Object,  _
                    ByVal aimsObjectives As Object,  _
                    ByVal howObjectivesAchieved As Object,  _
                    ByVal otherSpecimensInvolved As Object,  _
                    ByVal breedingSuccess As Object,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.SpecimenReport
            Return Me.GetById(Sprocs.eosp_CreateSpecimenReport(specimenId, permitId, originId, seizedByCustoms, importNumber, importer, exportNumber, countryOfOriginId, breedingFactilities, specimenReportDate, otherCITESSourceExplanation, breederNameAddress, captivebredGeneration, otherInformation, wildTakenDate, dOENumber, wildTakenDisabilityDetails, breedingTechniqueDetails, founderBreedingStockDetails, establishmentBredtoF2Details, breedingwithoutWildAugmentationDetails, breedingStockSizeDetails, importExportPurposeDetails, speciesConservationDetails, declarationAcknowledged, entryDateTime, studBookNumber, role, presentSpecAddress, sourceUnknownExplanation, aimsObjectives, howObjectivesAchieved, otherSpecimensInvolved, breedingSuccess, transaction), transaction)
        End Function
        
        Public Overloads Function Insert( _
                    ByVal specimenId As Integer,  _
                    ByVal permitId As Integer,  _
                    ByVal originId As Object,  _
                    ByVal seizedByCustoms As Object,  _
                    ByVal importNumber As Object,  _
                    ByVal importer As Object,  _
                    ByVal exportNumber As Object,  _
                    ByVal countryOfOriginId As Object,  _
                    ByVal breedingFactilities As Object,  _
                    ByVal specimenReportDate As Date,  _
                    ByVal otherCITESSourceExplanation As Object,  _
                    ByVal breederNameAddress As Object,  _
                    ByVal captivebredGeneration As Object,  _
                    ByVal otherInformation As Object,  _
                    ByVal wildTakenDate As Object,  _
                    ByVal dOENumber As Object,  _
                    ByVal wildTakenDisabilityDetails As Object,  _
                    ByVal breedingTechniqueDetails As Object,  _
                    ByVal founderBreedingStockDetails As Object,  _
                    ByVal establishmentBredtoF2Details As Object,  _
                    ByVal breedingwithoutWildAugmentationDetails As Object,  _
                    ByVal breedingStockSizeDetails As Object,  _
                    ByVal importExportPurposeDetails As Object,  _
                    ByVal speciesConservationDetails As Object,  _
                    ByVal declarationAcknowledged As Object,  _
                    ByVal entryDateTime As Object,  _
                    ByVal studBookNumber As Object,  _
                    ByVal role As Object,  _
                    ByVal presentSpecAddress As Object,  _
                    ByVal sourceUnknownExplanation As Object,  _
                    ByVal aimsObjectives As Object,  _
                    ByVal howObjectivesAchieved As Object,  _
                    ByVal otherSpecimensInvolved As Object,  _
                    ByVal breedingSuccess As Object) As Entity.SpecimenReport
            Return Me.Insert(specimenId, permitId, originId, seizedByCustoms, importNumber, importer, exportNumber, countryOfOriginId, breedingFactilities, specimenReportDate, otherCITESSourceExplanation, breederNameAddress, captivebredGeneration, otherInformation, wildTakenDate, dOENumber, wildTakenDisabilityDetails, breedingTechniqueDetails, founderBreedingStockDetails, establishmentBredtoF2Details, breedingwithoutWildAugmentationDetails, breedingStockSizeDetails, importExportPurposeDetails, speciesConservationDetails, declarationAcknowledged, entryDateTime, studBookNumber, role, presentSpecAddress, sourceUnknownExplanation, aimsObjectives, howObjectivesAchieved, otherSpecimensInvolved, breedingSuccess, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal specimenReport As Entity.SpecimenReport) As Entity.SpecimenReport
            Return Me.Insert(specimenReport(1), specimenReport(2), specimenReport(3), specimenReport(4), specimenReport(5), specimenReport(6), specimenReport(7), specimenReport(8), specimenReport(9), specimenReport(10), specimenReport(11), specimenReport(12), specimenReport(13), specimenReport(14), specimenReport(15), specimenReport(16), specimenReport(17), specimenReport(18), specimenReport(19), specimenReport(20), specimenReport(21), specimenReport(22), specimenReport(23), specimenReport(24), specimenReport(25), specimenReport(26), specimenReport(27), specimenReport(28), specimenReport(29), specimenReport(30), specimenReport(31), specimenReport(32), specimenReport(33), specimenReport(34))
        End Function
        
        Public Overloads Function Insert(ByVal specimenReport As Entity.SpecimenReport, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.SpecimenReport
            Return Me.Insert(specimenReport(1), specimenReport(2), specimenReport(3), specimenReport(4), specimenReport(5), specimenReport(6), specimenReport(7), specimenReport(8), specimenReport(9), specimenReport(10), specimenReport(11), specimenReport(12), specimenReport(13), specimenReport(14), specimenReport(15), specimenReport(16), specimenReport(17), specimenReport(18), specimenReport(19), specimenReport(20), specimenReport(21), specimenReport(22), specimenReport(23), specimenReport(24), specimenReport(25), specimenReport(26), specimenReport(27), specimenReport(28), specimenReport(29), specimenReport(30), specimenReport(31), specimenReport(32), specimenReport(33), specimenReport(34), transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal specimenId As Integer,  _
                    ByVal permitId As Integer,  _
                    ByVal originId As Object,  _
                    ByVal seizedByCustoms As Object,  _
                    ByVal importNumber As Object,  _
                    ByVal importer As Object,  _
                    ByVal exportNumber As Object,  _
                    ByVal countryOfOriginId As Object,  _
                    ByVal breedingFactilities As Object,  _
                    ByVal specimenReportDate As Date,  _
                    ByVal otherCITESSourceExplanation As Object,  _
                    ByVal breederNameAddress As Object,  _
                    ByVal captivebredGeneration As Object,  _
                    ByVal otherInformation As Object,  _
                    ByVal wildTakenDate As Object,  _
                    ByVal dOENumber As Object,  _
                    ByVal wildTakenDisabilityDetails As Object,  _
                    ByVal breedingTechniqueDetails As Object,  _
                    ByVal founderBreedingStockDetails As Object,  _
                    ByVal establishmentBredtoF2Details As Object,  _
                    ByVal breedingwithoutWildAugmentationDetails As Object,  _
                    ByVal breedingStockSizeDetails As Object,  _
                    ByVal importExportPurposeDetails As Object,  _
                    ByVal speciesConservationDetails As Object,  _
                    ByVal declarationAcknowledged As Object,  _
                    ByVal entryDateTime As Object,  _
                    ByVal studBookNumber As Object,  _
                    ByVal role As Object,  _
                    ByVal presentSpecAddress As Object,  _
                    ByVal sourceUnknownExplanation As Object,  _
                    ByVal aimsObjectives As Object,  _
                    ByVal howObjectivesAchieved As Object,  _
                    ByVal otherSpecimensInvolved As Object,  _
                    ByVal breedingSuccess As Object,  _
                    ByVal checkSum As Integer,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.SpecimenReport
            Return Sprocs.eosp_UpdateSpecimenReport(id, specimenId, permitId, originId, seizedByCustoms, importNumber, importer, exportNumber, countryOfOriginId, breedingFactilities, specimenReportDate, otherCITESSourceExplanation, breederNameAddress, captivebredGeneration, otherInformation, wildTakenDate, dOENumber, wildTakenDisabilityDetails, breedingTechniqueDetails, founderBreedingStockDetails, establishmentBredtoF2Details, breedingwithoutWildAugmentationDetails, breedingStockSizeDetails, importExportPurposeDetails, speciesConservationDetails, declarationAcknowledged, entryDateTime, studBookNumber, role, presentSpecAddress, sourceUnknownExplanation, aimsObjectives, howObjectivesAchieved, otherSpecimensInvolved, breedingSuccess, checkSum, transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal specimenId As Integer,  _
                    ByVal permitId As Integer,  _
                    ByVal originId As Object,  _
                    ByVal seizedByCustoms As Object,  _
                    ByVal importNumber As Object,  _
                    ByVal importer As Object,  _
                    ByVal exportNumber As Object,  _
                    ByVal countryOfOriginId As Object,  _
                    ByVal breedingFactilities As Object,  _
                    ByVal specimenReportDate As Date,  _
                    ByVal otherCITESSourceExplanation As Object,  _
                    ByVal breederNameAddress As Object,  _
                    ByVal captivebredGeneration As Object,  _
                    ByVal otherInformation As Object,  _
                    ByVal wildTakenDate As Object,  _
                    ByVal dOENumber As Object,  _
                    ByVal wildTakenDisabilityDetails As Object,  _
                    ByVal breedingTechniqueDetails As Object,  _
                    ByVal founderBreedingStockDetails As Object,  _
                    ByVal establishmentBredtoF2Details As Object,  _
                    ByVal breedingwithoutWildAugmentationDetails As Object,  _
                    ByVal breedingStockSizeDetails As Object,  _
                    ByVal importExportPurposeDetails As Object,  _
                    ByVal speciesConservationDetails As Object,  _
                    ByVal declarationAcknowledged As Object,  _
                    ByVal entryDateTime As Object,  _
                    ByVal studBookNumber As Object,  _
                    ByVal role As Object,  _
                    ByVal presentSpecAddress As Object,  _
                    ByVal sourceUnknownExplanation As Object,  _
                    ByVal aimsObjectives As Object,  _
                    ByVal howObjectivesAchieved As Object,  _
                    ByVal otherSpecimensInvolved As Object,  _
                    ByVal breedingSuccess As Object) As Entity.SpecimenReport
            Return Me.Update(id, specimenId, permitId, originId, seizedByCustoms, importNumber, importer, exportNumber, countryOfOriginId, breedingFactilities, specimenReportDate, otherCITESSourceExplanation, breederNameAddress, captivebredGeneration, otherInformation, wildTakenDate, dOENumber, wildTakenDisabilityDetails, breedingTechniqueDetails, founderBreedingStockDetails, establishmentBredtoF2Details, breedingwithoutWildAugmentationDetails, breedingStockSizeDetails, importExportPurposeDetails, speciesConservationDetails, declarationAcknowledged, entryDateTime, studBookNumber, role, presentSpecAddress, sourceUnknownExplanation, aimsObjectives, howObjectivesAchieved, otherSpecimensInvolved, breedingSuccess, 0, Nothing)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal specimenId As Integer,  _
                    ByVal permitId As Integer,  _
                    ByVal originId As Object,  _
                    ByVal seizedByCustoms As Object,  _
                    ByVal importNumber As Object,  _
                    ByVal importer As Object,  _
                    ByVal exportNumber As Object,  _
                    ByVal countryOfOriginId As Object,  _
                    ByVal breedingFactilities As Object,  _
                    ByVal specimenReportDate As Date,  _
                    ByVal otherCITESSourceExplanation As Object,  _
                    ByVal breederNameAddress As Object,  _
                    ByVal captivebredGeneration As Object,  _
                    ByVal otherInformation As Object,  _
                    ByVal wildTakenDate As Object,  _
                    ByVal dOENumber As Object,  _
                    ByVal wildTakenDisabilityDetails As Object,  _
                    ByVal breedingTechniqueDetails As Object,  _
                    ByVal founderBreedingStockDetails As Object,  _
                    ByVal establishmentBredtoF2Details As Object,  _
                    ByVal breedingwithoutWildAugmentationDetails As Object,  _
                    ByVal breedingStockSizeDetails As Object,  _
                    ByVal importExportPurposeDetails As Object,  _
                    ByVal speciesConservationDetails As Object,  _
                    ByVal declarationAcknowledged As Object,  _
                    ByVal entryDateTime As Object,  _
                    ByVal studBookNumber As Object,  _
                    ByVal role As Object,  _
                    ByVal presentSpecAddress As Object,  _
                    ByVal sourceUnknownExplanation As Object,  _
                    ByVal aimsObjectives As Object,  _
                    ByVal howObjectivesAchieved As Object,  _
                    ByVal otherSpecimensInvolved As Object,  _
                    ByVal breedingSuccess As Object,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.SpecimenReport
            Return Me.Update(id, specimenId, permitId, originId, seizedByCustoms, importNumber, importer, exportNumber, countryOfOriginId, breedingFactilities, specimenReportDate, otherCITESSourceExplanation, breederNameAddress, captivebredGeneration, otherInformation, wildTakenDate, dOENumber, wildTakenDisabilityDetails, breedingTechniqueDetails, founderBreedingStockDetails, establishmentBredtoF2Details, breedingwithoutWildAugmentationDetails, breedingStockSizeDetails, importExportPurposeDetails, speciesConservationDetails, declarationAcknowledged, entryDateTime, studBookNumber, role, presentSpecAddress, sourceUnknownExplanation, aimsObjectives, howObjectivesAchieved, otherSpecimensInvolved, breedingSuccess, 0, transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal specimenId As Integer,  _
                    ByVal permitId As Integer,  _
                    ByVal originId As Object,  _
                    ByVal seizedByCustoms As Object,  _
                    ByVal importNumber As Object,  _
                    ByVal importer As Object,  _
                    ByVal exportNumber As Object,  _
                    ByVal countryOfOriginId As Object,  _
                    ByVal breedingFactilities As Object,  _
                    ByVal specimenReportDate As Date,  _
                    ByVal otherCITESSourceExplanation As Object,  _
                    ByVal breederNameAddress As Object,  _
                    ByVal captivebredGeneration As Object,  _
                    ByVal otherInformation As Object,  _
                    ByVal wildTakenDate As Object,  _
                    ByVal dOENumber As Object,  _
                    ByVal wildTakenDisabilityDetails As Object,  _
                    ByVal breedingTechniqueDetails As Object,  _
                    ByVal founderBreedingStockDetails As Object,  _
                    ByVal establishmentBredtoF2Details As Object,  _
                    ByVal breedingwithoutWildAugmentationDetails As Object,  _
                    ByVal breedingStockSizeDetails As Object,  _
                    ByVal importExportPurposeDetails As Object,  _
                    ByVal speciesConservationDetails As Object,  _
                    ByVal declarationAcknowledged As Object,  _
                    ByVal entryDateTime As Object,  _
                    ByVal studBookNumber As Object,  _
                    ByVal role As Object,  _
                    ByVal presentSpecAddress As Object,  _
                    ByVal sourceUnknownExplanation As Object,  _
                    ByVal aimsObjectives As Object,  _
                    ByVal howObjectivesAchieved As Object,  _
                    ByVal otherSpecimensInvolved As Object,  _
                    ByVal breedingSuccess As Object,  _
                    ByVal checkSum As Integer) As Entity.SpecimenReport
            Return Me.Update(id, specimenId, permitId, originId, seizedByCustoms, importNumber, importer, exportNumber, countryOfOriginId, breedingFactilities, specimenReportDate, otherCITESSourceExplanation, breederNameAddress, captivebredGeneration, otherInformation, wildTakenDate, dOENumber, wildTakenDisabilityDetails, breedingTechniqueDetails, founderBreedingStockDetails, establishmentBredtoF2Details, breedingwithoutWildAugmentationDetails, breedingStockSizeDetails, importExportPurposeDetails, speciesConservationDetails, declarationAcknowledged, entryDateTime, studBookNumber, role, presentSpecAddress, sourceUnknownExplanation, aimsObjectives, howObjectivesAchieved, otherSpecimensInvolved, breedingSuccess, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal specimenReport As Entity.SpecimenReport) As Entity.SpecimenReport
            Return Me.Update(specimenReport.id, specimenReport(1), specimenReport(2), specimenReport(3), specimenReport(4), specimenReport(5), specimenReport(6), specimenReport(7), specimenReport(8), specimenReport(9), specimenReport(10), specimenReport(11), specimenReport(12), specimenReport(13), specimenReport(14), specimenReport(15), specimenReport(16), specimenReport(17), specimenReport(18), specimenReport(19), specimenReport(20), specimenReport(21), specimenReport(22), specimenReport(23), specimenReport(24), specimenReport(25), specimenReport(26), specimenReport(27), specimenReport(28), specimenReport(29), specimenReport(30), specimenReport(31), specimenReport(32), specimenReport(33), specimenReport(34))
        End Function
        
        Public Overloads Function Update(ByVal specimenReport As Entity.SpecimenReport, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.SpecimenReport
            Return Me.Update(specimenReport.id, specimenReport(1), specimenReport(2), specimenReport(3), specimenReport(4), specimenReport(5), specimenReport(6), specimenReport(7), specimenReport(8), specimenReport(9), specimenReport(10), specimenReport(11), specimenReport(12), specimenReport(13), specimenReport(14), specimenReport(15), specimenReport(16), specimenReport(17), specimenReport(18), specimenReport(19), specimenReport(20), specimenReport(21), specimenReport(22), specimenReport(23), specimenReport(24), specimenReport(25), specimenReport(26), specimenReport(27), specimenReport(28), specimenReport(29), specimenReport(30), specimenReport(31), specimenReport(32), specimenReport(33), specimenReport(34), transaction)
        End Function
        
        Public Overloads Function Update(ByVal specimenReport As Entity.SpecimenReport, ByVal checkSum As Integer) As Entity.SpecimenReport
            Return Me.Update(specimenReport.id, specimenReport(1), specimenReport(2), specimenReport(3), specimenReport(4), specimenReport(5), specimenReport(6), specimenReport(7), specimenReport(8), specimenReport(9), specimenReport(10), specimenReport(11), specimenReport(12), specimenReport(13), specimenReport(14), specimenReport(15), specimenReport(16), specimenReport(17), specimenReport(18), specimenReport(19), specimenReport(20), specimenReport(21), specimenReport(22), specimenReport(23), specimenReport(24), specimenReport(25), specimenReport(26), specimenReport(27), specimenReport(28), specimenReport(29), specimenReport(30), specimenReport(31), specimenReport(32), specimenReport(33), specimenReport(34), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal specimenReport As Entity.SpecimenReport, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.SpecimenReport
            Return Me.Update(specimenReport.id, specimenReport(1), specimenReport(2), specimenReport(3), specimenReport(4), specimenReport(5), specimenReport(6), specimenReport(7), specimenReport(8), specimenReport(9), specimenReport(10), specimenReport(11), specimenReport(12), specimenReport(13), specimenReport(14), specimenReport(15), specimenReport(16), specimenReport(17), specimenReport(18), specimenReport(19), specimenReport(20), specimenReport(21), specimenReport(22), specimenReport(23), specimenReport(24), specimenReport(25), specimenReport(26), specimenReport(27), specimenReport(28), specimenReport(29), specimenReport(30), specimenReport(31), specimenReport(32), specimenReport(33), specimenReport(34), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_SpecimenReport(ByVal specimenId As Integer, ByVal permitId As Integer) As EntitySet.SpecimenReportSet
            Return Sprocs.eosp_SelectSpecimenReport(specimenReportId:=Nothing, Index_SpecimenId:=[specimenId], Index_PermitId:=[permitId], transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_SpecimenReport(ByVal specimenId As Integer, ByVal permitId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenReportSet
            Return Sprocs.eosp_SelectSpecimenReport(specimenReportId:=Nothing, Index_SpecimenId:=[specimenId], Index_PermitId:=[permitId], sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            IX_SpecimenReport
            
            
        End Enum
    End Class
End Namespace
