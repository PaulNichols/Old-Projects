'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'ReportAuthorisedQ'
    '*DO NOT* modify this file.
    'Add new properties and methods to ReportAuthorisedQ instead.
    Public MustInherit Class ReportAuthorisedQBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal reportAuthorisedQId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(reportAuthorisedQId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal reportAuthorisedQId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(reportAuthorisedQId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property ReportAuthorisedQId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Property ReportId As Integer
            Get
                Return CType(Me(1),Integer)
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        Public Property ReportPrinterId As Integer
            Get
                Return CType(Me(2),Integer)
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        Public Property PrintSequence As Integer
            Get
                Return CType(Me(3),Integer)
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property PausedBy As String
            Get
                If (Me.IsPausedByNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(4),String)
                End If
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        Public Property PausedDate As Date
            Get
                If (Me.IsPausedDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(5),Date)
                End If
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property AuthorisedBy As String
            Get
                Return CType(Me(6),String)
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        Public Property AuthorisedDate As Date
            Get
                Return CType(Me(7),Date)
            End Get
            Set
                Me(7) = value
            End Set
        End Property
        
        Public Property PrintingDate As Date
            Get
                If (Me.IsPrintingDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(8),Date)
                End If
            End Get
            Set
                Me(8) = value
            End Set
        End Property
        
        Public Property PrintedDate As Date
            Get
                If (Me.IsPrintedDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(9),Date)
                End If
            End Get
            Set
                Me(9) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50)>  _
        Public Property DeletedBy As String
            Get
                If (Me.IsDeletedByNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(10),String)
                End If
            End Get
            Set
                Me(10) = value
            End Set
        End Property
        
        Public Property DeletedDate As Date
            Get
                If (Me.IsDeletedDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(11),Date)
                End If
            End Get
            Set
                Me(11) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(255)>  _
        Public Property LastStatusMessage As String
            Get
                If (Me.IsLastStatusMessageNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(12),String)
                End If
            End Get
            Set
                Me(12) = value
            End Set
        End Property
        
        Public Property StapleOff As Boolean
            Get
                If (Me.IsStapleOffNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(13),Boolean)
                End If
            End Get
            Set
                Me(13) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(14),Integer)
                End If
            End Get
            Set
                Me(14) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.ReportAuthorisedQService
            Get
                Return CType(GetServiceObject(GetType(Service.ReportAuthorisedQService)),Service.ReportAuthorisedQService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsPausedByNull() As Boolean
            Return Me.IsNull(4)
        End Function
        
        Public Sub SetPausedByToNull()
            Me(4) = System.DBNull.Value
        End Sub
        
        Public Function IsPausedDateNull() As Boolean
            Return Me.IsNull(5)
        End Function
        
        Public Sub SetPausedDateToNull()
            Me(5) = System.DBNull.Value
        End Sub
        
        Public Function IsPrintingDateNull() As Boolean
            Return Me.IsNull(8)
        End Function
        
        Public Sub SetPrintingDateToNull()
            Me(8) = System.DBNull.Value
        End Sub
        
        Public Function IsPrintedDateNull() As Boolean
            Return Me.IsNull(9)
        End Function
        
        Public Sub SetPrintedDateToNull()
            Me(9) = System.DBNull.Value
        End Sub
        
        Public Function IsDeletedByNull() As Boolean
            Return Me.IsNull(10)
        End Function
        
        Public Sub SetDeletedByToNull()
            Me(10) = System.DBNull.Value
        End Sub
        
        Public Function IsDeletedDateNull() As Boolean
            Return Me.IsNull(11)
        End Function
        
        Public Sub SetDeletedDateToNull()
            Me(11) = System.DBNull.Value
        End Sub
        
        Public Function IsLastStatusMessageNull() As Boolean
            Return Me.IsNull(12)
        End Function
        
        Public Sub SetLastStatusMessageToNull()
            Me(12) = System.DBNull.Value
        End Sub
        
        Public Function IsStapleOffNull() As Boolean
            Return Me.IsNull(13)
        End Function
        
        Public Sub SetStapleOffToNull()
            Me(13) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(14)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(14) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(15)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.ReportAuthorisedQSet
            Return ReportAuthorisedQBase.GetAll(false, false, ReportAuthorisedQServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.ReportAuthorisedQSet
            Return ReportAuthorisedQBase.GetAll(includeHyphen, false, ReportAuthorisedQServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As ReportAuthorisedQServiceBase.OrderBy) As EntitySet.ReportAuthorisedQSet
            Dim service As Service.ReportAuthorisedQService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As ReportAuthorisedQServiceBase.OrderBy) As EntitySet.ReportAuthorisedQSet
            Return ReportAuthorisedQBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal reportAuthorisedQId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.ReportAuthorisedQ
            Dim service As Service.ReportAuthorisedQService
            service = ServiceObject
            Return service.GetById(ReportAuthorisedQId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal reportAuthorisedQId As Integer) As Entity.ReportAuthorisedQ
            Dim service As Service.ReportAuthorisedQService
            service = ServiceObject
            Return service.GetById(ReportAuthorisedQId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal reportAuthorisedQId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.ReportAuthorisedQService
            service = ServiceObject
            Return service.DeleteById(reportAuthorisedQId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal reportAuthorisedQId As Integer) As Boolean
            Return ReportAuthorisedQBase.DeleteById(reportAuthorisedQId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal reportAuthorisedQId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return ReportAuthorisedQBase.DeleteById(reportAuthorisedQId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForReport(ByVal reportId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ReportAuthorisedQSet
            Dim service As Service.ReportAuthorisedQService
            service = ServiceObject
            Return service.GetForReport(reportId, tran)
        End Function
        
        Public Overloads Shared Function GetForReport(ByVal reportId As Integer) As EntitySet.ReportAuthorisedQSet
            Return ReportAuthorisedQBase.GetForReport(reportId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForReportPrinter(ByVal reportPrinterId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ReportAuthorisedQSet
            Dim service As Service.ReportAuthorisedQService
            service = ServiceObject
            Return service.GetForReportPrinter(reportPrinterId, tran)
        End Function
        
        Public Overloads Shared Function GetForReportPrinter(ByVal reportPrinterId As Integer) As EntitySet.ReportAuthorisedQSet
            Return ReportAuthorisedQBase.GetForReportPrinter(reportPrinterId, Nothing)
        End Function
        
        Public Shared Function Insert(ByVal reportId As Integer, ByVal reportPrinterId As Integer, ByVal printSequence As Integer, ByVal pausedBy As Object, ByVal pausedDate As Object, ByVal authorisedBy As String, ByVal authorisedDate As Date, ByVal printingDate As Object, ByVal printedDate As Object, ByVal deletedBy As Object, ByVal deletedDate As Object, ByVal lastStatusMessage As Object, ByVal stapleOff As Object) As Entity.ReportAuthorisedQ
            Return Entity.ReportAuthorisedQ.ServiceObject.Insert(reportId, reportPrinterId, printSequence, pausedBy, pausedDate, authorisedBy, authorisedDate, printingDate, printedDate, deletedBy, deletedDate, lastStatusMessage, stapleOff)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim reportIdParam As Integer = Me.ReportId
            Dim reportPrinterIdParam As Integer = Me.ReportPrinterId
            Dim printSequenceParam As Integer = Me.PrintSequence
            Dim pausedByParam As Object
            If (Me.IsPausedByNull = false) Then
                pausedByParam = EnterpriseObjects.Common.ParseSQLText(Me.PausedBy)
            Else
                pausedByParam = System.DBNull.Value
            End If
            Dim pausedDateParam As Object
            If (Me.IsPausedDateNull = false) Then
                pausedDateParam = Me.PausedDate
            Else
                pausedDateParam = System.DBNull.Value
            End If
            Dim authorisedByParam As String = Me.AuthorisedBy
            Dim authorisedDateParam As Date = Me.AuthorisedDate
            Dim printingDateParam As Object
            If (Me.IsPrintingDateNull = false) Then
                printingDateParam = Me.PrintingDate
            Else
                printingDateParam = System.DBNull.Value
            End If
            Dim printedDateParam As Object
            If (Me.IsPrintedDateNull = false) Then
                printedDateParam = Me.PrintedDate
            Else
                printedDateParam = System.DBNull.Value
            End If
            Dim deletedByParam As Object
            If (Me.IsDeletedByNull = false) Then
                deletedByParam = EnterpriseObjects.Common.ParseSQLText(Me.DeletedBy)
            Else
                deletedByParam = System.DBNull.Value
            End If
            Dim deletedDateParam As Object
            If (Me.IsDeletedDateNull = false) Then
                deletedDateParam = Me.DeletedDate
            Else
                deletedDateParam = System.DBNull.Value
            End If
            Dim lastStatusMessageParam As Object
            If (Me.IsLastStatusMessageNull = false) Then
                lastStatusMessageParam = EnterpriseObjects.Common.ParseSQLText(Me.LastStatusMessage)
            Else
                lastStatusMessageParam = System.DBNull.Value
            End If
            Dim stapleOffParam As Object
            If (Me.IsStapleOffNull = false) Then
                stapleOffParam = Me.StapleOff
            Else
                stapleOffParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.ReportAuthorisedQ.ServiceObject.Update(Me.Id, reportIdParam, reportPrinterIdParam, printSequenceParam, pausedByParam, pausedDateParam, authorisedByParam, authorisedDateParam, printingDateParam, printedDateParam, deletedByParam, deletedDateParam, lastStatusMessageParam, stapleOffParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
