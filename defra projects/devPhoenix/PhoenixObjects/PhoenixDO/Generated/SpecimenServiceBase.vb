'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'Specimen'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class SpecimenServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.SpecimenSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.SpecimenSet
            Return CType(MyBase.GetAll("eosp_SelectSpecimen", GetType(EntitySet.SpecimenSet), includeHyphen, includeInactive, orderBy),EntitySet.SpecimenSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.SpecimenSet
            Return Me.GetAll(includeHyphen, includeInactive, SpecimenServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, SpecimenServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal specimenId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectSpecimen", "SpecimenId", specimenId, GetType(EntitySet.SpecimenSet), tran),Entity.Specimen)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal specimenId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(specimenId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal specimenId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.Specimen
            Return CType(MyBase.GetById("eosp_SelectSpecimen", "SpecimenId", specimenId, GetType(EntitySet.SpecimenSet), tran),Entity.Specimen)
        End Function
        
        Public Overloads Function GetById(ByVal specimenId As Integer) As Entity.Specimen
            Return Me.GetById(specimenId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal specimenId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(specimenId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal specimenId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteSpecimen", "SpecimenId", specimenId, checkSum, transaction)
        End Function
        
        'GetForSpecimenFate - links to the SpecimenFate table...
        Public Overloads Function GetForSpecimenFate(ByVal SpecimenFateID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from Specimen where FateId=" + SpecimenFateID.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.SpecimenSet), tran),EntitySet.SpecimenSet)
        End Function
        
        'GetForSpecimenFate - links to the SpecimenFate table...
        Public Overloads Function GetForSpecimenFate(ByVal SpecimenFateID As Integer) As EntitySet.SpecimenSet
            Return Me.GetForSpecimenFate(SpecimenFateID, Nothing)
        End Function
        
        'GetForFatherSpecimenSpecimen - links to the Specimen table...
        Public Overloads Function GetForFatherSpecimenSpecimen(ByVal FatherSpecimen As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from Specimen where FatherSpecimen=" + FatherSpecimen.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.SpecimenSet), tran),EntitySet.SpecimenSet)
        End Function
        
        'GetForFatherSpecimenSpecimen - links to the Specimen table...
        Public Overloads Function GetForFatherSpecimenSpecimen(ByVal FatherSpecimen As Integer) As EntitySet.SpecimenSet
            Return Me.GetForFatherSpecimenSpecimen(FatherSpecimen, Nothing)
        End Function
        
        'GetForMotherSpecimenSpecimen - links to the Specimen table...
        Public Overloads Function GetForMotherSpecimenSpecimen(ByVal MotherSpecimen As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecimenSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from Specimen where MotherSpecimen=" + MotherSpecimen.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.SpecimenSet), tran),EntitySet.SpecimenSet)
        End Function
        
        'GetForMotherSpecimenSpecimen - links to the Specimen table...
        Public Overloads Function GetForMotherSpecimenSpecimen(ByVal MotherSpecimen As Integer) As EntitySet.SpecimenSet
            Return Me.GetForMotherSpecimenSpecimen(MotherSpecimen, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal genderId As Object, ByVal dOB As Object, ByVal fateId As Object, ByVal fatherSpecimen As Object, ByVal motherSpecimen As Object, ByVal acquisitionDate As Object, ByVal description As Object, ByVal exactDOB As Boolean, ByVal fateDate As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Specimen
            Return Me.GetById(Sprocs.eosp_CreateSpecimen(genderId, dOB, fateId, fatherSpecimen, motherSpecimen, acquisitionDate, description, exactDOB, fateDate, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal genderId As Object, ByVal dOB As Object, ByVal fateId As Object, ByVal fatherSpecimen As Object, ByVal motherSpecimen As Object, ByVal acquisitionDate As Object, ByVal description As Object, ByVal exactDOB As Boolean, ByVal fateDate As Object) As Entity.Specimen
            Return Me.Insert(genderId, dOB, fateId, fatherSpecimen, motherSpecimen, acquisitionDate, description, exactDOB, fateDate, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal specimen As Entity.Specimen) As Entity.Specimen
            Return Me.Insert(specimen(1), specimen(2), specimen(3), specimen(4), specimen(5), specimen(6), specimen(7), specimen(8), specimen(9))
        End Function
        
        Public Overloads Function Insert(ByVal specimen As Entity.Specimen, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Specimen
            Return Me.Insert(specimen(1), specimen(2), specimen(3), specimen(4), specimen(5), specimen(6), specimen(7), specimen(8), specimen(9), transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal genderId As Object, ByVal dOB As Object, ByVal fateId As Object, ByVal fatherSpecimen As Object, ByVal motherSpecimen As Object, ByVal acquisitionDate As Object, ByVal description As Object, ByVal exactDOB As Boolean, ByVal fateDate As Object, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Specimen
            Return Sprocs.eosp_UpdateSpecimen(id, genderId, dOB, fateId, fatherSpecimen, motherSpecimen, acquisitionDate, description, exactDOB, fateDate, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal genderId As Object, ByVal dOB As Object, ByVal fateId As Object, ByVal fatherSpecimen As Object, ByVal motherSpecimen As Object, ByVal acquisitionDate As Object, ByVal description As Object, ByVal exactDOB As Boolean, ByVal fateDate As Object) As Entity.Specimen
            Return Me.Update(id, genderId, dOB, fateId, fatherSpecimen, motherSpecimen, acquisitionDate, description, exactDOB, fateDate, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal genderId As Object, ByVal dOB As Object, ByVal fateId As Object, ByVal fatherSpecimen As Object, ByVal motherSpecimen As Object, ByVal acquisitionDate As Object, ByVal description As Object, ByVal exactDOB As Boolean, ByVal fateDate As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Specimen
            Return Me.Update(id, genderId, dOB, fateId, fatherSpecimen, motherSpecimen, acquisitionDate, description, exactDOB, fateDate, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal genderId As Object, ByVal dOB As Object, ByVal fateId As Object, ByVal fatherSpecimen As Object, ByVal motherSpecimen As Object, ByVal acquisitionDate As Object, ByVal description As Object, ByVal exactDOB As Boolean, ByVal fateDate As Object, ByVal checkSum As Integer) As Entity.Specimen
            Return Me.Update(id, genderId, dOB, fateId, fatherSpecimen, motherSpecimen, acquisitionDate, description, exactDOB, fateDate, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal specimen As Entity.Specimen) As Entity.Specimen
            Return Me.Update(specimen.id, specimen(1), specimen(2), specimen(3), specimen(4), specimen(5), specimen(6), specimen(7), specimen(8), specimen(9))
        End Function
        
        Public Overloads Function Update(ByVal specimen As Entity.Specimen, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Specimen
            Return Me.Update(specimen.id, specimen(1), specimen(2), specimen(3), specimen(4), specimen(5), specimen(6), specimen(7), specimen(8), specimen(9), transaction)
        End Function
        
        Public Overloads Function Update(ByVal specimen As Entity.Specimen, ByVal checkSum As Integer) As Entity.Specimen
            Return Me.Update(specimen.id, specimen(1), specimen(2), specimen(3), specimen(4), specimen(5), specimen(6), specimen(7), specimen(8), specimen(9), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal specimen As Entity.Specimen, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Specimen
            Return Me.Update(specimen.id, specimen(1), specimen(2), specimen(3), specimen(4), specimen(5), specimen(6), specimen(7), specimen(8), specimen(9), checkSum, transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
        End Enum
    End Class
End Namespace
