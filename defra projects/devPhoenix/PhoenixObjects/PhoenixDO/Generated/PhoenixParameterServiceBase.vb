'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'PhoenixParameter'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class PhoenixParameterServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return true
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.PhoenixParameterSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.PhoenixParameterSet
            Return CType(MyBase.GetAll("eosp_SelectPhoenixParameter", GetType(EntitySet.PhoenixParameterSet), includeHyphen, includeInactive, orderBy),EntitySet.PhoenixParameterSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.PhoenixParameterSet
            Return Me.GetAll(includeHyphen, includeInactive, PhoenixParameterServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, PhoenixParameterServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.PhoenixParameterSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal phoenixParameterID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectPhoenixParameter", "PhoenixParameterID", phoenixParameterID, GetType(EntitySet.PhoenixParameterSet), tran),Entity.PhoenixParameter)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal phoenixParameterID As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(phoenixParameterID, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal phoenixParameterID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.PhoenixParameter
            Return CType(MyBase.GetById("eosp_SelectPhoenixParameter", "PhoenixParameterID", phoenixParameterID, GetType(EntitySet.PhoenixParameterSet), tran),Entity.PhoenixParameter)
        End Function
        
        Public Overloads Function GetById(ByVal phoenixParameterID As Integer) As Entity.PhoenixParameter
            Return Me.GetById(phoenixParameterID, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal phoenixParameterID As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(phoenixParameterID, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal phoenixParameterID As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeletePhoenixParameter", "PhoenixParameterID", phoenixParameterID, checkSum, transaction)
        End Function
        
        Public Overloads Function Insert(ByVal paramName As String, ByVal paramValue As String, ByVal active As Boolean, ByVal validationRegExID As Object, ByVal validationMessage As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PhoenixParameter
            Return Me.GetById(Sprocs.eosp_CreatePhoenixParameter(paramName, paramValue, active, validationRegExID, validationMessage, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal paramName As String, ByVal paramValue As String, ByVal active As Boolean, ByVal validationRegExID As Object, ByVal validationMessage As Object) As Entity.PhoenixParameter
            Return Me.Insert(paramName, paramValue, active, validationRegExID, validationMessage, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal phoenixParameter As Entity.PhoenixParameter) As Entity.PhoenixParameter
            Return Me.Insert(phoenixParameter(1), phoenixParameter(2), phoenixParameter(3), phoenixParameter(4), phoenixParameter(5))
        End Function
        
        Public Overloads Function Insert(ByVal phoenixParameter As Entity.PhoenixParameter, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PhoenixParameter
            Return Me.Insert(phoenixParameter(1), phoenixParameter(2), phoenixParameter(3), phoenixParameter(4), phoenixParameter(5), transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal paramName As String, ByVal paramValue As String, ByVal active As Boolean, ByVal validationRegExID As Object, ByVal validationMessage As Object, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PhoenixParameter
            Return Sprocs.eosp_UpdatePhoenixParameter(id, paramName, paramValue, active, validationRegExID, validationMessage, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal paramName As String, ByVal paramValue As String, ByVal active As Boolean, ByVal validationRegExID As Object, ByVal validationMessage As Object) As Entity.PhoenixParameter
            Return Me.Update(id, paramName, paramValue, active, validationRegExID, validationMessage, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal paramName As String, ByVal paramValue As String, ByVal active As Boolean, ByVal validationRegExID As Object, ByVal validationMessage As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PhoenixParameter
            Return Me.Update(id, paramName, paramValue, active, validationRegExID, validationMessage, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal paramName As String, ByVal paramValue As String, ByVal active As Boolean, ByVal validationRegExID As Object, ByVal validationMessage As Object, ByVal checkSum As Integer) As Entity.PhoenixParameter
            Return Me.Update(id, paramName, paramValue, active, validationRegExID, validationMessage, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal phoenixParameter As Entity.PhoenixParameter) As Entity.PhoenixParameter
            Return Me.Update(phoenixParameter.id, phoenixParameter(1), phoenixParameter(2), phoenixParameter(3), phoenixParameter(4), phoenixParameter(5))
        End Function
        
        Public Overloads Function Update(ByVal phoenixParameter As Entity.PhoenixParameter, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PhoenixParameter
            Return Me.Update(phoenixParameter.id, phoenixParameter(1), phoenixParameter(2), phoenixParameter(3), phoenixParameter(4), phoenixParameter(5), transaction)
        End Function
        
        Public Overloads Function Update(ByVal phoenixParameter As Entity.PhoenixParameter, ByVal checkSum As Integer) As Entity.PhoenixParameter
            Return Me.Update(phoenixParameter.id, phoenixParameter(1), phoenixParameter(2), phoenixParameter(3), phoenixParameter(4), phoenixParameter(5), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal phoenixParameter As Entity.PhoenixParameter, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PhoenixParameter
            Return Me.Update(phoenixParameter.id, phoenixParameter(1), phoenixParameter(2), phoenixParameter(3), phoenixParameter(4), phoenixParameter(5), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_UQ_PhoenixParameter_ParamName(ByVal paramName As String, ByVal includeInactive As Boolean) As EntitySet.PhoenixParameterSet
            Return Sprocs.eosp_SelectPhoenixParameter(phoenixParameterID:=Nothing, Index_ParamName:=[paramName], includeInactive:=includeInactive, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_UQ_PhoenixParameter_ParamName(ByVal paramName As String, ByVal includeInactive As Boolean, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.PhoenixParameterSet
            Return Sprocs.eosp_SelectPhoenixParameter(phoenixParameterID:=Nothing, Index_ParamName:=[paramName], includeInactive:=includeInactive, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            UQ_PhoenixParameter_ParamName
            
            
        End Enum
    End Class
End Namespace
