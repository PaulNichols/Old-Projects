'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'Cheque'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class ChequeServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.ChequeSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.ChequeSet
            Return CType(MyBase.GetAll("eosp_SelectCheque", GetType(EntitySet.ChequeSet), includeHyphen, includeInactive, orderBy),EntitySet.ChequeSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.ChequeSet
            Return Me.GetAll(includeHyphen, includeInactive, ChequeServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, ChequeServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal chequeId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectCheque", "ChequeId", chequeId, GetType(EntitySet.ChequeSet), tran),Entity.Cheque)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal chequeId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(chequeId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal chequeId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.Cheque
            Return CType(MyBase.GetById("eosp_SelectCheque", "ChequeId", chequeId, GetType(EntitySet.ChequeSet), tran),Entity.Cheque)
        End Function
        
        Public Overloads Function GetById(ByVal chequeId As Integer) As Entity.Cheque
            Return Me.GetById(chequeId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal chequeId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(chequeId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal chequeId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteCheque", "ChequeId", chequeId, checkSum, transaction)
        End Function
        
        'GetForPayment - links to the Payment table...
        Public Overloads Function GetForPayment(ByVal PaymentId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ChequeSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from Cheque where PaymentId=" + PaymentId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.ChequeSet), tran),EntitySet.ChequeSet)
        End Function
        
        'GetForPayment - links to the Payment table...
        Public Overloads Function GetForPayment(ByVal PaymentId As Integer) As EntitySet.ChequeSet
            Return Me.GetForPayment(PaymentId, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal paymentId As Integer, ByVal bankSortCode As Object, ByVal bankAccountNumber As Object, ByVal serialNumber As Object, ByVal accountName As Object, ByVal amount As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Cheque
            Return Me.GetById(Sprocs.eosp_CreateCheque(paymentId, bankSortCode, bankAccountNumber, serialNumber, accountName, amount, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal paymentId As Integer, ByVal bankSortCode As Object, ByVal bankAccountNumber As Object, ByVal serialNumber As Object, ByVal accountName As Object, ByVal amount As Object) As Entity.Cheque
            Return Me.Insert(paymentId, bankSortCode, bankAccountNumber, serialNumber, accountName, amount, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal cheque As Entity.Cheque) As Entity.Cheque
            Return Me.Insert(cheque(1), cheque(2), cheque(3), cheque(4), cheque(5), cheque(6))
        End Function
        
        Public Overloads Function Insert(ByVal cheque As Entity.Cheque, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Cheque
            Return Me.Insert(cheque(1), cheque(2), cheque(3), cheque(4), cheque(5), cheque(6), transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal paymentId As Integer, ByVal bankSortCode As Object, ByVal bankAccountNumber As Object, ByVal serialNumber As Object, ByVal accountName As Object, ByVal amount As Object, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Cheque
            Return Sprocs.eosp_UpdateCheque(id, paymentId, bankSortCode, bankAccountNumber, serialNumber, accountName, amount, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal paymentId As Integer, ByVal bankSortCode As Object, ByVal bankAccountNumber As Object, ByVal serialNumber As Object, ByVal accountName As Object, ByVal amount As Object) As Entity.Cheque
            Return Me.Update(id, paymentId, bankSortCode, bankAccountNumber, serialNumber, accountName, amount, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal paymentId As Integer, ByVal bankSortCode As Object, ByVal bankAccountNumber As Object, ByVal serialNumber As Object, ByVal accountName As Object, ByVal amount As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Cheque
            Return Me.Update(id, paymentId, bankSortCode, bankAccountNumber, serialNumber, accountName, amount, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal paymentId As Integer, ByVal bankSortCode As Object, ByVal bankAccountNumber As Object, ByVal serialNumber As Object, ByVal accountName As Object, ByVal amount As Object, ByVal checkSum As Integer) As Entity.Cheque
            Return Me.Update(id, paymentId, bankSortCode, bankAccountNumber, serialNumber, accountName, amount, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal cheque As Entity.Cheque) As Entity.Cheque
            Return Me.Update(cheque.id, cheque(1), cheque(2), cheque(3), cheque(4), cheque(5), cheque(6))
        End Function
        
        Public Overloads Function Update(ByVal cheque As Entity.Cheque, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Cheque
            Return Me.Update(cheque.id, cheque(1), cheque(2), cheque(3), cheque(4), cheque(5), cheque(6), transaction)
        End Function
        
        Public Overloads Function Update(ByVal cheque As Entity.Cheque, ByVal checkSum As Integer) As Entity.Cheque
            Return Me.Update(cheque.id, cheque(1), cheque(2), cheque(3), cheque(4), cheque(5), cheque(6), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal cheque As Entity.Cheque, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Cheque
            Return Me.Update(cheque.id, cheque(1), cheque(2), cheque(3), cheque(4), cheque(5), cheque(6), checkSum, transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
        End Enum
    End Class
End Namespace
