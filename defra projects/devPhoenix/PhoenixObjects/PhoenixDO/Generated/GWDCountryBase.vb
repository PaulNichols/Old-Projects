'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'GWDCountry'
    '*DO NOT* modify this file.
    'Add new properties and methods to GWDCountry instead.
    <EnterpriseObjects.Attributes.TableDescription("GWD Country")>  _
    Public MustInherit Class GWDCountryBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal gWDCountryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(gWDCountryId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal gWDCountryId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(gWDCountryId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property GWDCountryId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Property CountryId As Integer
            Get
                Return CType(Me(1),Integer)
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        Public Property ECMemberState As Boolean
            Get
                Return CType(Me(2),Boolean)
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        Public Property CITESSignatory As Boolean
            Get
                Return CType(Me(3),Boolean)
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        Public Property Active As Boolean
            Get
                Return CType(Me(4),Boolean)
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        Public Property PostCodeValidationId As Integer
            Get
                If (Me.IsPostCodeValidationIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(5),Integer)
                End If
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        Public Property PhoneNumberValidationId As Integer
            Get
                If (Me.IsPhoneNumberValidationIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(6),Integer)
                End If
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(7),Integer)
                End If
            End Get
            Set
                Me(7) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.GWDCountryService
            Get
                Return CType(GetServiceObject(GetType(Service.GWDCountryService)),Service.GWDCountryService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsPostCodeValidationIdNull() As Boolean
            Return Me.IsNull(5)
        End Function
        
        Public Sub SetPostCodeValidationIdToNull()
            Me(5) = System.DBNull.Value
        End Sub
        
        Public Function IsPhoneNumberValidationIdNull() As Boolean
            Return Me.IsNull(6)
        End Function
        
        Public Sub SetPhoneNumberValidationIdToNull()
            Me(6) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(7)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(7) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(8)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.GWDCountrySet
            Return GWDCountryBase.GetAll(false, false, GWDCountryServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.GWDCountrySet
            Return GWDCountryBase.GetAll(includeHyphen, false, GWDCountryServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As GWDCountryServiceBase.OrderBy) As EntitySet.GWDCountrySet
            Dim service As Service.GWDCountryService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As GWDCountryServiceBase.OrderBy) As EntitySet.GWDCountrySet
            Return GWDCountryBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal gWDCountryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.GWDCountry
            Dim service As Service.GWDCountryService
            service = ServiceObject
            Return service.GetById(GWDCountryId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal gWDCountryId As Integer) As Entity.GWDCountry
            Dim service As Service.GWDCountryService
            service = ServiceObject
            Return service.GetById(GWDCountryId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal gWDCountryId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.GWDCountryService
            service = ServiceObject
            Return service.DeleteById(gWDCountryId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal gWDCountryId As Integer) As Boolean
            Return GWDCountryBase.DeleteById(gWDCountryId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal gWDCountryId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return GWDCountryBase.DeleteById(gWDCountryId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForCountry(ByVal countryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.GWDCountrySet
            Dim service As Service.GWDCountryService
            service = ServiceObject
            Return service.GetForCountry(countryId, tran)
        End Function
        
        Public Overloads Shared Function GetForCountry(ByVal countryId As Integer) As EntitySet.GWDCountrySet
            Return GWDCountryBase.GetForCountry(countryId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForPostCodeValidationIdValidationRegEx(ByVal validationRegExID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.GWDCountrySet
            Dim service As Service.GWDCountryService
            service = ServiceObject
            Return service.GetForPostCodeValidationIdValidationRegEx(validationRegExID, tran)
        End Function
        
        Public Overloads Shared Function GetForPostCodeValidationIdValidationRegEx(ByVal validationRegExID As Integer) As EntitySet.GWDCountrySet
            Return GWDCountryBase.GetForPostCodeValidationIdValidationRegEx(validationRegExID, Nothing)
        End Function
        
        Public Overloads Shared Function GetForPhoneNumberValidationIdValidationRegEx(ByVal validationRegExID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.GWDCountrySet
            Dim service As Service.GWDCountryService
            service = ServiceObject
            Return service.GetForPhoneNumberValidationIdValidationRegEx(validationRegExID, tran)
        End Function
        
        Public Overloads Shared Function GetForPhoneNumberValidationIdValidationRegEx(ByVal validationRegExID As Integer) As EntitySet.GWDCountrySet
            Return GWDCountryBase.GetForPhoneNumberValidationIdValidationRegEx(validationRegExID, Nothing)
        End Function
        
        Public Shared Function Insert(ByVal countryId As Integer, ByVal eCMemberState As Boolean, ByVal cITESSignatory As Boolean, ByVal active As Boolean, ByVal postCodeValidationId As Object, ByVal phoneNumberValidationId As Object) As Entity.GWDCountry
            Return Entity.GWDCountry.ServiceObject.Insert(countryId, eCMemberState, cITESSignatory, active, postCodeValidationId, phoneNumberValidationId)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim countryIdParam As Integer = Me.CountryId
            Dim eCMemberStateParam As Boolean = Me.ECMemberState
            Dim cITESSignatoryParam As Boolean = Me.CITESSignatory
            Dim activeParam As Boolean = Me.Active
            Dim postCodeValidationIdParam As Object
            If (Me.IsPostCodeValidationIdNull = false) Then
                postCodeValidationIdParam = Me.PostCodeValidationId
            Else
                postCodeValidationIdParam = System.DBNull.Value
            End If
            Dim phoneNumberValidationIdParam As Object
            If (Me.IsPhoneNumberValidationIdNull = false) Then
                phoneNumberValidationIdParam = Me.PhoneNumberValidationId
            Else
                phoneNumberValidationIdParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.GWDCountry.ServiceObject.Update(Me.Id, countryIdParam, eCMemberStateParam, cITESSignatoryParam, activeParam, postCodeValidationIdParam, phoneNumberValidationIdParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
