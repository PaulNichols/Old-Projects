'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'Specie'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class SpecieServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.SpecieSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.SpecieSet
            Return CType(MyBase.GetAll("eosp_SelectSpecie", GetType(EntitySet.SpecieSet), includeHyphen, includeInactive, orderBy),EntitySet.SpecieSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.SpecieSet
            Return Me.GetAll(includeHyphen, includeInactive, SpecieServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, SpecieServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.SpecieSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal specieId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectSpecie", "SpecieId", specieId, GetType(EntitySet.SpecieSet), tran),Entity.Specie)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal specieId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(specieId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal specieId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.Specie
            Return CType(MyBase.GetById("eosp_SelectSpecie", "SpecieId", specieId, GetType(EntitySet.SpecieSet), tran),Entity.Specie)
        End Function
        
        Public Overloads Function GetById(ByVal specieId As Integer) As Entity.Specie
            Return Me.GetById(specieId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal specieId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(specieId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal specieId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteSpecie", "SpecieId", specieId, checkSum, transaction)
        End Function
        
        'GetForCommonNameSourceTaxonomyCommonName - links to the TaxonomyCommonName table...
        Public Overloads Function GetForCommonNameSourceTaxonomyCommonName(ByVal CommonNameSource As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecieSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from Specie where CommonNameSource=" + CommonNameSource.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.SpecieSet), tran),EntitySet.SpecieSet)
        End Function
        
        'GetForCommonNameSourceTaxonomyCommonName - links to the TaxonomyCommonName table...
        Public Overloads Function GetForCommonNameSourceTaxonomyCommonName(ByVal CommonNameSource As Integer) As EntitySet.SpecieSet
            Return Me.GetForCommonNameSourceTaxonomyCommonName(CommonNameSource, Nothing)
        End Function
        
        'GetForCommonNameIDTaxonomyCommonName - links to the TaxonomyCommonName table...
        Public Overloads Function GetForCommonNameIDTaxonomyCommonName(ByVal CommonNameID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecieSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from Specie where CommonNameID=" + CommonNameID.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.SpecieSet), tran),EntitySet.SpecieSet)
        End Function
        
        'GetForCommonNameIDTaxonomyCommonName - links to the TaxonomyCommonName table...
        Public Overloads Function GetForCommonNameIDTaxonomyCommonName(ByVal CommonNameID As Integer) As EntitySet.SpecieSet
            Return Me.GetForCommonNameIDTaxonomyCommonName(CommonNameID, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal commonName As Object, ByVal eCAnnex As Object, ByVal cITESAppendix As Object, ByVal scientificName As Object, ByVal description As Object, ByVal appliedForName As Object, ByVal lineage As Object, ByVal keyedByApplicant As Object, ByVal hybrid As Object, ByVal commonNameSource As Object, ByVal commonNameID As Object, ByVal isCoral As Boolean, ByVal paymentKingdom As Object, ByVal paymentTaxonType As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Specie
            Return Me.GetById(Sprocs.eosp_CreateSpecie(commonName, eCAnnex, cITESAppendix, scientificName, description, appliedForName, lineage, keyedByApplicant, hybrid, commonNameSource, commonNameID, isCoral, paymentKingdom, paymentTaxonType, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal commonName As Object, ByVal eCAnnex As Object, ByVal cITESAppendix As Object, ByVal scientificName As Object, ByVal description As Object, ByVal appliedForName As Object, ByVal lineage As Object, ByVal keyedByApplicant As Object, ByVal hybrid As Object, ByVal commonNameSource As Object, ByVal commonNameID As Object, ByVal isCoral As Boolean, ByVal paymentKingdom As Object, ByVal paymentTaxonType As Object) As Entity.Specie
            Return Me.Insert(commonName, eCAnnex, cITESAppendix, scientificName, description, appliedForName, lineage, keyedByApplicant, hybrid, commonNameSource, commonNameID, isCoral, paymentKingdom, paymentTaxonType, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal specie As Entity.Specie) As Entity.Specie
            Return Me.Insert(specie(1), specie(2), specie(3), specie(4), specie(5), specie(6), specie(7), specie(8), specie(9), specie(10), specie(11), specie(12), specie(13), specie(14))
        End Function
        
        Public Overloads Function Insert(ByVal specie As Entity.Specie, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Specie
            Return Me.Insert(specie(1), specie(2), specie(3), specie(4), specie(5), specie(6), specie(7), specie(8), specie(9), specie(10), specie(11), specie(12), specie(13), specie(14), transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal commonName As Object,  _
                    ByVal eCAnnex As Object,  _
                    ByVal cITESAppendix As Object,  _
                    ByVal scientificName As Object,  _
                    ByVal description As Object,  _
                    ByVal appliedForName As Object,  _
                    ByVal lineage As Object,  _
                    ByVal keyedByApplicant As Object,  _
                    ByVal hybrid As Object,  _
                    ByVal commonNameSource As Object,  _
                    ByVal commonNameID As Object,  _
                    ByVal isCoral As Boolean,  _
                    ByVal paymentKingdom As Object,  _
                    ByVal paymentTaxonType As Object,  _
                    ByVal checkSum As Integer,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Specie
            Return Sprocs.eosp_UpdateSpecie(id, commonName, eCAnnex, cITESAppendix, scientificName, description, appliedForName, lineage, keyedByApplicant, hybrid, commonNameSource, commonNameID, isCoral, paymentKingdom, paymentTaxonType, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal commonName As Object, ByVal eCAnnex As Object, ByVal cITESAppendix As Object, ByVal scientificName As Object, ByVal description As Object, ByVal appliedForName As Object, ByVal lineage As Object, ByVal keyedByApplicant As Object, ByVal hybrid As Object, ByVal commonNameSource As Object, ByVal commonNameID As Object, ByVal isCoral As Boolean, ByVal paymentKingdom As Object, ByVal paymentTaxonType As Object) As Entity.Specie
            Return Me.Update(id, commonName, eCAnnex, cITESAppendix, scientificName, description, appliedForName, lineage, keyedByApplicant, hybrid, commonNameSource, commonNameID, isCoral, paymentKingdom, paymentTaxonType, 0, Nothing)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal commonName As Object,  _
                    ByVal eCAnnex As Object,  _
                    ByVal cITESAppendix As Object,  _
                    ByVal scientificName As Object,  _
                    ByVal description As Object,  _
                    ByVal appliedForName As Object,  _
                    ByVal lineage As Object,  _
                    ByVal keyedByApplicant As Object,  _
                    ByVal hybrid As Object,  _
                    ByVal commonNameSource As Object,  _
                    ByVal commonNameID As Object,  _
                    ByVal isCoral As Boolean,  _
                    ByVal paymentKingdom As Object,  _
                    ByVal paymentTaxonType As Object,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Specie
            Return Me.Update(id, commonName, eCAnnex, cITESAppendix, scientificName, description, appliedForName, lineage, keyedByApplicant, hybrid, commonNameSource, commonNameID, isCoral, paymentKingdom, paymentTaxonType, 0, transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal commonName As Object,  _
                    ByVal eCAnnex As Object,  _
                    ByVal cITESAppendix As Object,  _
                    ByVal scientificName As Object,  _
                    ByVal description As Object,  _
                    ByVal appliedForName As Object,  _
                    ByVal lineage As Object,  _
                    ByVal keyedByApplicant As Object,  _
                    ByVal hybrid As Object,  _
                    ByVal commonNameSource As Object,  _
                    ByVal commonNameID As Object,  _
                    ByVal isCoral As Boolean,  _
                    ByVal paymentKingdom As Object,  _
                    ByVal paymentTaxonType As Object,  _
                    ByVal checkSum As Integer) As Entity.Specie
            Return Me.Update(id, commonName, eCAnnex, cITESAppendix, scientificName, description, appliedForName, lineage, keyedByApplicant, hybrid, commonNameSource, commonNameID, isCoral, paymentKingdom, paymentTaxonType, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal specie As Entity.Specie) As Entity.Specie
            Return Me.Update(specie.id, specie(1), specie(2), specie(3), specie(4), specie(5), specie(6), specie(7), specie(8), specie(9), specie(10), specie(11), specie(12), specie(13), specie(14))
        End Function
        
        Public Overloads Function Update(ByVal specie As Entity.Specie, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Specie
            Return Me.Update(specie.id, specie(1), specie(2), specie(3), specie(4), specie(5), specie(6), specie(7), specie(8), specie(9), specie(10), specie(11), specie(12), specie(13), specie(14), transaction)
        End Function
        
        Public Overloads Function Update(ByVal specie As Entity.Specie, ByVal checkSum As Integer) As Entity.Specie
            Return Me.Update(specie.id, specie(1), specie(2), specie(3), specie(4), specie(5), specie(6), specie(7), specie(8), specie(9), specie(10), specie(11), specie(12), specie(13), specie(14), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal specie As Entity.Specie, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.Specie
            Return Me.Update(specie.id, specie(1), specie(2), specie(3), specie(4), specie(5), specie(6), specie(7), specie(8), specie(9), specie(10), specie(11), specie(12), specie(13), specie(14), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_Specie(ByVal scientificName As String) As EntitySet.SpecieSet
            Return Sprocs.eosp_SelectSpecie(specieId:=Nothing, Index_ScientificName:=[scientificName], Index_CommonNameSource:=Nothing, Index_CommonNameID:=Nothing, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_Specie(ByVal scientificName As String, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecieSet
            Return Sprocs.eosp_SelectSpecie(specieId:=Nothing, Index_ScientificName:=[scientificName], Index_CommonNameSource:=Nothing, Index_CommonNameID:=Nothing, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_Specie_1(ByVal commonNameSource As Integer, ByVal commonNameID As Integer) As EntitySet.SpecieSet
            Return Sprocs.eosp_SelectSpecie(specieId:=Nothing, Index_CommonNameSource:=[commonNameSource], Index_CommonNameID:=[commonNameID], Index_ScientificName:=Nothing, transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_Specie_1(ByVal commonNameSource As Integer, ByVal commonNameID As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.SpecieSet
            Return Sprocs.eosp_SelectSpecie(specieId:=Nothing, Index_CommonNameSource:=[commonNameSource], Index_CommonNameID:=[commonNameID], Index_ScientificName:=Nothing, sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            IX_Specie
            
            IX_Specie_1
            
            
        End Enum
    End Class
End Namespace
