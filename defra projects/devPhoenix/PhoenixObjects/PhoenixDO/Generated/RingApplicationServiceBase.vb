'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'RingApplication'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class RingApplicationServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.RingApplicationSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.RingApplicationSet
            Return CType(MyBase.GetAll("eosp_SelectRingApplication", GetType(EntitySet.RingApplicationSet), includeHyphen, includeInactive, orderBy),EntitySet.RingApplicationSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.RingApplicationSet
            Return Me.GetAll(includeHyphen, includeInactive, RingApplicationServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, RingApplicationServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.RingApplicationSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal ringApplicationId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectRingApplication", "RingApplicationId", ringApplicationId, GetType(EntitySet.RingApplicationSet), tran),Entity.RingApplication)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal ringApplicationId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(ringApplicationId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal ringApplicationId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.RingApplication
            Return CType(MyBase.GetById("eosp_SelectRingApplication", "RingApplicationId", ringApplicationId, GetType(EntitySet.RingApplicationSet), tran),Entity.RingApplication)
        End Function
        
        Public Overloads Function GetById(ByVal ringApplicationId As Integer) As Entity.RingApplication
            Return Me.GetById(ringApplicationId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal ringApplicationId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(ringApplicationId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal ringApplicationId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteRingApplication", "RingApplicationId", ringApplicationId, checkSum, transaction)
        End Function
        
        'GetForApplication - links to the Application table...
        Public Overloads Function GetForApplication(ByVal ApplicationId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.RingApplicationSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from RingApplication where ApplicationId"& _ 
"=" + ApplicationId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.RingApplicationSet), tran),EntitySet.RingApplicationSet)
        End Function
        
        'GetForApplication - links to the Application table...
        Public Overloads Function GetForApplication(ByVal ApplicationId As Integer) As EntitySet.RingApplicationSet
            Return Me.GetForApplication(ApplicationId, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal applicationId As Integer, ByVal provisionalXML As String, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.RingApplication
            Return Me.GetById(Sprocs.eosp_CreateRingApplication(applicationId, provisionalXML, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal applicationId As Integer, ByVal provisionalXML As String) As Entity.RingApplication
            Return Me.Insert(applicationId, provisionalXML, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal ringApplication As Entity.RingApplication) As Entity.RingApplication
            Return Me.Insert(ringApplication(0), ringApplication(1))
        End Function
        
        Public Overloads Function Insert(ByVal ringApplication As Entity.RingApplication, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.RingApplication
            Return Me.Insert(ringApplication(0), ringApplication(1), transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal applicationId As Integer, ByVal provisionalXML As String, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.RingApplication
            Return Sprocs.eosp_UpdateRingApplication(id, applicationId, provisionalXML, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal applicationId As Integer, ByVal provisionalXML As String) As Entity.RingApplication
            Return Me.Update(id, applicationId, provisionalXML, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal applicationId As Integer, ByVal provisionalXML As String, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.RingApplication
            Return Me.Update(id, applicationId, provisionalXML, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal id As Integer, ByVal applicationId As Integer, ByVal provisionalXML As String, ByVal checkSum As Integer) As Entity.RingApplication
            Return Me.Update(id, applicationId, provisionalXML, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal ringApplication As Entity.RingApplication) As Entity.RingApplication
            Return Me.Update(ringApplication.id, ringApplication(0), ringApplication(1))
        End Function
        
        Public Overloads Function Update(ByVal ringApplication As Entity.RingApplication, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.RingApplication
            Return Me.Update(ringApplication.id, ringApplication(0), ringApplication(1), transaction)
        End Function
        
        Public Overloads Function Update(ByVal ringApplication As Entity.RingApplication, ByVal checkSum As Integer) As Entity.RingApplication
            Return Me.Update(ringApplication.id, ringApplication(0), ringApplication(1), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal ringApplication As Entity.RingApplication, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.RingApplication
            Return Me.Update(ringApplication.id, ringApplication(0), ringApplication(1), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_UniqueApplicationId(ByVal applicationId As Integer) As EntitySet.RingApplicationSet
            Return Sprocs.eosp_SelectRingApplication(ringApplicationId:=Nothing, Index_ApplicationId:=[applicationId], transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_UniqueApplicationId(ByVal applicationId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.RingApplicationSet
            Return Sprocs.eosp_SelectRingApplication(ringApplicationId:=Nothing, Index_ApplicationId:=[applicationId], sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            UniqueApplicationId
            
            
        End Enum
    End Class
End Namespace
