'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'ReportCriteria'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class ReportCriteriaServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.ReportCriteriaSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.ReportCriteriaSet
            Return CType(MyBase.GetAll("eosp_SelectReportCriteria", GetType(EntitySet.ReportCriteriaSet), includeHyphen, includeInactive, orderBy),EntitySet.ReportCriteriaSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.ReportCriteriaSet
            Return Me.GetAll(includeHyphen, includeInactive, ReportCriteriaServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, ReportCriteriaServiceBase.OrderBy.DefaultOrder)
        End Function
        
        'GetForReport - links to the Report table...
        Public Overloads Function GetForReport(ByVal ReportId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ReportCriteriaSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from ReportCriteria where ReportId=" + ReportId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.ReportCriteriaSet), tran),EntitySet.ReportCriteriaSet)
        End Function
        
        'GetForReport - links to the Report table...
        Public Overloads Function GetForReport(ByVal ReportId As Integer) As EntitySet.ReportCriteriaSet
            Return Me.GetForReport(ReportId, Nothing)
        End Function
        
        Public Overloads Sub Insert(ByVal reportId As Integer, ByVal xmlData As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction)
            Sprocs.eosp_CreateReportCriteria(reportId, xmlData, transaction)
        End Sub
        
        Public Overloads Sub Insert(ByVal reportId As Integer, ByVal xmlData As Object)
            Me.Insert(reportId, xmlData, Nothing)
        End Sub
        
        Public Overloads Sub Insert(ByVal reportCriteria As Entity.ReportCriteria)
            Me.Insert(reportCriteria(0), reportCriteria(1))
        End Sub
        
        Public Overloads Sub Insert(ByVal reportCriteria As Entity.ReportCriteria, ByVal transaction As System.Data.SqlClient.SqlTransaction)
            Me.Insert(reportCriteria(0), reportCriteria(1), transaction)
        End Sub
        
        Public Overloads Sub Update(ByVal reportId As Integer, ByVal xmlData As Object, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction)
            Sprocs.eosp_UpdateReportCriteria(reportId, xmlData, checkSum, transaction)
        End Sub
        
        Public Overloads Sub Update(ByVal reportId As Integer, ByVal xmlData As Object)
            Me.Update(reportId, xmlData, 0, Nothing)
        End Sub
        
        Public Overloads Sub Update(ByVal reportId As Integer, ByVal xmlData As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction)
            Me.Update(reportId, xmlData, 0, transaction)
        End Sub
        
        Public Overloads Sub Update(ByVal reportId As Integer, ByVal xmlData As Object, ByVal checkSum As Integer)
            Me.Update(reportId, xmlData, checkSum, Nothing)
        End Sub
        
        Public Overloads Sub Update(ByVal reportCriteria As Entity.ReportCriteria)
            Me.Update(reportCriteria(0), reportCriteria(1))
        End Sub
        
        Public Overloads Sub Update(ByVal reportCriteria As Entity.ReportCriteria, ByVal transaction As System.Data.SqlClient.SqlTransaction)
            Me.Update(reportCriteria(0), reportCriteria(1), transaction)
        End Sub
        
        Public Overloads Sub Update(ByVal reportCriteria As Entity.ReportCriteria, ByVal checkSum As Integer)
            Me.Update(reportCriteria(0), reportCriteria(1), checkSum)
        End Sub
        
        Public Overloads Sub Update(ByVal reportCriteria As Entity.ReportCriteria, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction)
            Me.Update(reportCriteria(0), reportCriteria(1), checkSum, transaction)
        End Sub
        
        Public Overloads Function GetByIndex_ReportCriteriaId(ByVal reportId As Integer) As EntitySet.ReportCriteriaSet
            Return Sprocs.eosp_SelectReportCriteria(Index_ReportId:=[reportId], transaction:=Nothing)
        End Function
        
        Public Overloads Function GetByIndex_ReportCriteriaId(ByVal reportId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.ReportCriteriaSet
            Return Sprocs.eosp_SelectReportCriteria(Index_ReportId:=[reportId], transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
        End Enum
    End Class
End Namespace
