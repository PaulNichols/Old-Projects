'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'PermitInfo'
    '*DO NOT* modify this file.
    'Add new properties and methods to PermitInfo instead.
    Public MustInherit Class PermitInfoBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal permitInfoId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(permitInfoId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal permitInfoId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(permitInfoId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property PermitInfoId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Property PermitId As Integer
            Get
                Return CType(Me(1),Integer)
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        Public Property ProgressStatusPaymentId As Integer
            Get
                If (Me.IsProgressStatusPaymentIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(2),Integer)
                End If
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        Public Property ProgressStatusInspectionId As Integer
            Get
                If (Me.IsProgressStatusInspectionIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(3),Integer)
                End If
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        Public Property ProgressStatusSAAdviceId As Integer
            Get
                If (Me.IsProgressStatusSAAdviceIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(4),Integer)
                End If
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        Public Property ProgressStatusReferralHistoryId As Integer
            Get
                If (Me.IsProgressStatusReferralHistoryIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(5),Integer)
                End If
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        Public Property ProgressStatusReIssuedId As Integer
            Get
                If (Me.IsProgressStatusReIssuedIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(6),Integer)
                End If
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        Public Property PermitStatusId As Integer
            Get
                If (Me.IsPermitStatusIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(7),Integer)
                End If
            End Get
            Set
                Me(7) = value
            End Set
        End Property
        
        Public Property ReReferralCount As Integer
            Get
                Return CType(Me(8),Integer)
            End Get
            Set
                Me(8) = value
            End Set
        End Property
        
        Public Property AssignedTo As Integer
            Get
                Return CType(Me(9),Integer)
            End Get
            Set
                Me(9) = value
            End Set
        End Property
        
        Public Property CreatedDate As Date
            Get
                Return CType(Me(10),Date)
            End Get
            Set
                Me(10) = value
            End Set
        End Property
        
        Public Property CreatedByUserId As Decimal
            Get
                Return CType(Me(11),Decimal)
            End Get
            Set
                Me(11) = value
            End Set
        End Property
        
        Public Property NextActionDate As Date
            Get
                If (Me.IsNextActionDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(12),Date)
                End If
            End Get
            Set
                Me(12) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(255)>  _
        Public Property CancelReason As String
            Get
                If (Me.IsCancelReasonNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(13),String)
                End If
            End Get
            Set
                Me(13) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(255)>  _
        Public Property CancelPendingReason As String
            Get
                If (Me.IsCancelPendingReasonNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(14),String)
                End If
            End Get
            Set
                Me(14) = value
            End Set
        End Property
        
        Public Property SequenceNumber As Integer
            Get
                Return CType(Me(15),Integer)
            End Get
            Set
                Me(15) = value
            End Set
        End Property
        
        Public Property RefusalReasonId As Integer
            Get
                If (Me.IsRefusalReasonIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(16),Integer)
                End If
            End Get
            Set
                Me(16) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(255)>  _
        Public Property RefusalReason As String
            Get
                If (Me.IsRefusalReasonNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(17),String)
                End If
            End Get
            Set
                Me(17) = value
            End Set
        End Property
        
        Public Property IssueDate As Date
            Get
                If (Me.IsIssueDateNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(18),Date)
                End If
            End Get
            Set
                Me(18) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(2)>  _
        Public Property Issue As String
            Get
                If (Me.IsIssueNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(19),String)
                End If
            End Get
            Set
                Me(19) = value
            End Set
        End Property
        
        Public Property IssuedBy As Decimal
            Get
                If (Me.IsIssuedByNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(20),Decimal)
                End If
            End Get
            Set
                Me(20) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(255)>  _
        Public Property PlaceOfIssue As String
            Get
                If (Me.IsPlaceOfIssueNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(21),String)
                End If
            End Get
            Set
                Me(21) = value
            End Set
        End Property
        
        Public Property DateComplete As Date
            Get
                If (Me.IsDateCompleteNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(22),Date)
                End If
            End Get
            Set
                Me(22) = value
            End Set
        End Property
        
        Public Property DateAuthorised As Date
            Get
                If (Me.IsDateAuthorisedNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(23),Date)
                End If
            End Get
            Set
                Me(23) = value
            End Set
        End Property
        
        Public Property DateRefused As Date
            Get
                If (Me.IsDateRefusedNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(24),Date)
                End If
            End Get
            Set
                Me(24) = value
            End Set
        End Property
        
        Public Property DateCancelled As Date
            Get
                If (Me.IsDateCancelledNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(25),Date)
                End If
            End Get
            Set
                Me(25) = value
            End Set
        End Property
        
        Public Property ReportPrintJobId As Integer
            Get
                If (Me.IsReportPrintJobIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(26),Integer)
                End If
            End Get
            Set
                Me(26) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(255)>  _
        Public Property CancelPendingDeclineReason As String
            Get
                If (Me.IsCancelPendingDeclineReasonNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(27),String)
                End If
            End Get
            Set
                Me(27) = value
            End Set
        End Property
        
        Public Property CoveringLetterReportId As Integer
            Get
                If (Me.IsCoveringLetterReportIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(28),Integer)
                End If
            End Get
            Set
                Me(28) = value
            End Set
        End Property
        
        Public Property SemiCompleteSpecimenId As Integer
            Get
                If (Me.IsSemiCompleteSpecimenIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(29),Integer)
                End If
            End Get
            Set
                Me(29) = value
            End Set
        End Property
        
        Public Property SemiCompleteSpecieId As Integer
            Get
                If (Me.IsSemiCompleteSpecieIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(30),Integer)
                End If
            End Get
            Set
                Me(30) = value
            End Set
        End Property
        
        Public Property SemiCompleteSecondPartyId As Integer
            Get
                If (Me.IsSemiCompleteSecondPartyIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(31),Integer)
                End If
            End Get
            Set
                Me(31) = value
            End Set
        End Property
        
        Public Property SemiCompleteCountryId As Integer
            Get
                If (Me.IsSemiCompleteCountryIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(32),Integer)
                End If
            End Get
            Set
                Me(32) = value
            End Set
        End Property
        
        Public Property SemiCompleteUOMId As Integer
            Get
                If (Me.IsSemiCompleteUOMIdNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(33),Integer)
                End If
            End Get
            Set
                Me(33) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(34),Integer)
                End If
            End Get
            Set
                Me(34) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.PermitInfoService
            Get
                Return CType(GetServiceObject(GetType(Service.PermitInfoService)),Service.PermitInfoService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsProgressStatusPaymentIdNull() As Boolean
            Return Me.IsNull(2)
        End Function
        
        Public Sub SetProgressStatusPaymentIdToNull()
            Me(2) = System.DBNull.Value
        End Sub
        
        Public Function IsProgressStatusInspectionIdNull() As Boolean
            Return Me.IsNull(3)
        End Function
        
        Public Sub SetProgressStatusInspectionIdToNull()
            Me(3) = System.DBNull.Value
        End Sub
        
        Public Function IsProgressStatusSAAdviceIdNull() As Boolean
            Return Me.IsNull(4)
        End Function
        
        Public Sub SetProgressStatusSAAdviceIdToNull()
            Me(4) = System.DBNull.Value
        End Sub
        
        Public Function IsProgressStatusReferralHistoryIdNull() As Boolean
            Return Me.IsNull(5)
        End Function
        
        Public Sub SetProgressStatusReferralHistoryIdToNull()
            Me(5) = System.DBNull.Value
        End Sub
        
        Public Function IsProgressStatusReIssuedIdNull() As Boolean
            Return Me.IsNull(6)
        End Function
        
        Public Sub SetProgressStatusReIssuedIdToNull()
            Me(6) = System.DBNull.Value
        End Sub
        
        Public Function IsPermitStatusIdNull() As Boolean
            Return Me.IsNull(7)
        End Function
        
        Public Sub SetPermitStatusIdToNull()
            Me(7) = System.DBNull.Value
        End Sub
        
        Public Function IsNextActionDateNull() As Boolean
            Return Me.IsNull(12)
        End Function
        
        Public Sub SetNextActionDateToNull()
            Me(12) = System.DBNull.Value
        End Sub
        
        Public Function IsCancelReasonNull() As Boolean
            Return Me.IsNull(13)
        End Function
        
        Public Sub SetCancelReasonToNull()
            Me(13) = System.DBNull.Value
        End Sub
        
        Public Function IsCancelPendingReasonNull() As Boolean
            Return Me.IsNull(14)
        End Function
        
        Public Sub SetCancelPendingReasonToNull()
            Me(14) = System.DBNull.Value
        End Sub
        
        Public Function IsRefusalReasonIdNull() As Boolean
            Return Me.IsNull(16)
        End Function
        
        Public Sub SetRefusalReasonIdToNull()
            Me(16) = System.DBNull.Value
        End Sub
        
        Public Function IsRefusalReasonNull() As Boolean
            Return Me.IsNull(17)
        End Function
        
        Public Sub SetRefusalReasonToNull()
            Me(17) = System.DBNull.Value
        End Sub
        
        Public Function IsIssueDateNull() As Boolean
            Return Me.IsNull(18)
        End Function
        
        Public Sub SetIssueDateToNull()
            Me(18) = System.DBNull.Value
        End Sub
        
        Public Function IsIssueNull() As Boolean
            Return Me.IsNull(19)
        End Function
        
        Public Sub SetIssueToNull()
            Me(19) = System.DBNull.Value
        End Sub
        
        Public Function IsIssuedByNull() As Boolean
            Return Me.IsNull(20)
        End Function
        
        Public Sub SetIssuedByToNull()
            Me(20) = System.DBNull.Value
        End Sub
        
        Public Function IsPlaceOfIssueNull() As Boolean
            Return Me.IsNull(21)
        End Function
        
        Public Sub SetPlaceOfIssueToNull()
            Me(21) = System.DBNull.Value
        End Sub
        
        Public Function IsDateCompleteNull() As Boolean
            Return Me.IsNull(22)
        End Function
        
        Public Sub SetDateCompleteToNull()
            Me(22) = System.DBNull.Value
        End Sub
        
        Public Function IsDateAuthorisedNull() As Boolean
            Return Me.IsNull(23)
        End Function
        
        Public Sub SetDateAuthorisedToNull()
            Me(23) = System.DBNull.Value
        End Sub
        
        Public Function IsDateRefusedNull() As Boolean
            Return Me.IsNull(24)
        End Function
        
        Public Sub SetDateRefusedToNull()
            Me(24) = System.DBNull.Value
        End Sub
        
        Public Function IsDateCancelledNull() As Boolean
            Return Me.IsNull(25)
        End Function
        
        Public Sub SetDateCancelledToNull()
            Me(25) = System.DBNull.Value
        End Sub
        
        Public Function IsReportPrintJobIdNull() As Boolean
            Return Me.IsNull(26)
        End Function
        
        Public Sub SetReportPrintJobIdToNull()
            Me(26) = System.DBNull.Value
        End Sub
        
        Public Function IsCancelPendingDeclineReasonNull() As Boolean
            Return Me.IsNull(27)
        End Function
        
        Public Sub SetCancelPendingDeclineReasonToNull()
            Me(27) = System.DBNull.Value
        End Sub
        
        Public Function IsCoveringLetterReportIdNull() As Boolean
            Return Me.IsNull(28)
        End Function
        
        Public Sub SetCoveringLetterReportIdToNull()
            Me(28) = System.DBNull.Value
        End Sub
        
        Public Function IsSemiCompleteSpecimenIdNull() As Boolean
            Return Me.IsNull(29)
        End Function
        
        Public Sub SetSemiCompleteSpecimenIdToNull()
            Me(29) = System.DBNull.Value
        End Sub
        
        Public Function IsSemiCompleteSpecieIdNull() As Boolean
            Return Me.IsNull(30)
        End Function
        
        Public Sub SetSemiCompleteSpecieIdToNull()
            Me(30) = System.DBNull.Value
        End Sub
        
        Public Function IsSemiCompleteSecondPartyIdNull() As Boolean
            Return Me.IsNull(31)
        End Function
        
        Public Sub SetSemiCompleteSecondPartyIdToNull()
            Me(31) = System.DBNull.Value
        End Sub
        
        Public Function IsSemiCompleteCountryIdNull() As Boolean
            Return Me.IsNull(32)
        End Function
        
        Public Sub SetSemiCompleteCountryIdToNull()
            Me(32) = System.DBNull.Value
        End Sub
        
        Public Function IsSemiCompleteUOMIdNull() As Boolean
            Return Me.IsNull(33)
        End Function
        
        Public Sub SetSemiCompleteUOMIdToNull()
            Me(33) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(34)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(34) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(35)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.PermitInfoSet
            Return PermitInfoBase.GetAll(false, false, PermitInfoServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.PermitInfoSet
            Return PermitInfoBase.GetAll(includeHyphen, false, PermitInfoServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As PermitInfoServiceBase.OrderBy) As EntitySet.PermitInfoSet
            Dim service As Service.PermitInfoService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As PermitInfoServiceBase.OrderBy) As EntitySet.PermitInfoSet
            Return PermitInfoBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal permitInfoId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.PermitInfo
            Dim service As Service.PermitInfoService
            service = ServiceObject
            Return service.GetById(PermitInfoId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal permitInfoId As Integer) As Entity.PermitInfo
            Dim service As Service.PermitInfoService
            service = ServiceObject
            Return service.GetById(PermitInfoId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal permitInfoId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.PermitInfoService
            service = ServiceObject
            Return service.DeleteById(permitInfoId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal permitInfoId As Integer) As Boolean
            Return PermitInfoBase.DeleteById(permitInfoId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal permitInfoId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return PermitInfoBase.DeleteById(permitInfoId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForPermit(ByVal permitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim service As Service.PermitInfoService
            service = ServiceObject
            Return service.GetForPermit(permitId, tran)
        End Function
        
        Public Overloads Shared Function GetForPermit(ByVal permitId As Integer) As EntitySet.PermitInfoSet
            Return PermitInfoBase.GetForPermit(permitId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForProgressStatusPayment(ByVal progressStatusPaymentId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim service As Service.PermitInfoService
            service = ServiceObject
            Return service.GetForProgressStatusPayment(progressStatusPaymentId, tran)
        End Function
        
        Public Overloads Shared Function GetForProgressStatusPayment(ByVal progressStatusPaymentId As Integer) As EntitySet.PermitInfoSet
            Return PermitInfoBase.GetForProgressStatusPayment(progressStatusPaymentId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForProgressStatusSAAdvice(ByVal progressStatusSAAdviceId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim service As Service.PermitInfoService
            service = ServiceObject
            Return service.GetForProgressStatusSAAdvice(progressStatusSAAdviceId, tran)
        End Function
        
        Public Overloads Shared Function GetForProgressStatusSAAdvice(ByVal progressStatusSAAdviceId As Integer) As EntitySet.PermitInfoSet
            Return PermitInfoBase.GetForProgressStatusSAAdvice(progressStatusSAAdviceId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForProgressStatusReferralHistory(ByVal progressStatusReferralHistoryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim service As Service.PermitInfoService
            service = ServiceObject
            Return service.GetForProgressStatusReferralHistory(progressStatusReferralHistoryId, tran)
        End Function
        
        Public Overloads Shared Function GetForProgressStatusReferralHistory(ByVal progressStatusReferralHistoryId As Integer) As EntitySet.PermitInfoSet
            Return PermitInfoBase.GetForProgressStatusReferralHistory(progressStatusReferralHistoryId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForProgressStatusReIssued(ByVal progressStatusReIssuedId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim service As Service.PermitInfoService
            service = ServiceObject
            Return service.GetForProgressStatusReIssued(progressStatusReIssuedId, tran)
        End Function
        
        Public Overloads Shared Function GetForProgressStatusReIssued(ByVal progressStatusReIssuedId As Integer) As EntitySet.PermitInfoSet
            Return PermitInfoBase.GetForProgressStatusReIssued(progressStatusReIssuedId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForPermitStatus(ByVal permitStatusId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim service As Service.PermitInfoService
            service = ServiceObject
            Return service.GetForPermitStatus(permitStatusId, tran)
        End Function
        
        Public Overloads Shared Function GetForPermitStatus(ByVal permitStatusId As Integer) As EntitySet.PermitInfoSet
            Return PermitInfoBase.GetForPermitStatus(permitStatusId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForStatusAssignedToGroup(ByVal statusAssignedToGroupId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim service As Service.PermitInfoService
            service = ServiceObject
            Return service.GetForStatusAssignedToGroup(statusAssignedToGroupId, tran)
        End Function
        
        Public Overloads Shared Function GetForStatusAssignedToGroup(ByVal statusAssignedToGroupId As Integer) As EntitySet.PermitInfoSet
            Return PermitInfoBase.GetForStatusAssignedToGroup(statusAssignedToGroupId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForRefusalReason(ByVal refusalReasonID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim service As Service.PermitInfoService
            service = ServiceObject
            Return service.GetForRefusalReason(refusalReasonID, tran)
        End Function
        
        Public Overloads Shared Function GetForRefusalReason(ByVal refusalReasonID As Integer) As EntitySet.PermitInfoSet
            Return PermitInfoBase.GetForRefusalReason(refusalReasonID, Nothing)
        End Function
        
        Public Overloads Shared Function GetForReportPrintJob(ByVal reportPrintJobId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim service As Service.PermitInfoService
            service = ServiceObject
            Return service.GetForReportPrintJob(reportPrintJobId, tran)
        End Function
        
        Public Overloads Shared Function GetForReportPrintJob(ByVal reportPrintJobId As Integer) As EntitySet.PermitInfoSet
            Return PermitInfoBase.GetForReportPrintJob(reportPrintJobId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForSpecimen(ByVal specimenId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim service As Service.PermitInfoService
            service = ServiceObject
            Return service.GetForSpecimen(specimenId, tran)
        End Function
        
        Public Overloads Shared Function GetForSpecimen(ByVal specimenId As Integer) As EntitySet.PermitInfoSet
            Return PermitInfoBase.GetForSpecimen(specimenId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForSpecie(ByVal specieId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim service As Service.PermitInfoService
            service = ServiceObject
            Return service.GetForSpecie(specieId, tran)
        End Function
        
        Public Overloads Shared Function GetForSpecie(ByVal specieId As Integer) As EntitySet.PermitInfoSet
            Return PermitInfoBase.GetForSpecie(specieId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForPartyLink(ByVal partyLinkId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim service As Service.PermitInfoService
            service = ServiceObject
            Return service.GetForPartyLink(partyLinkId, tran)
        End Function
        
        Public Overloads Shared Function GetForPartyLink(ByVal partyLinkId As Integer) As EntitySet.PermitInfoSet
            Return PermitInfoBase.GetForPartyLink(partyLinkId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForCountry(ByVal countryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim service As Service.PermitInfoService
            service = ServiceObject
            Return service.GetForCountry(countryId, tran)
        End Function
        
        Public Overloads Shared Function GetForCountry(ByVal countryId As Integer) As EntitySet.PermitInfoSet
            Return PermitInfoBase.GetForCountry(countryId, Nothing)
        End Function
        
        Public Overloads Shared Function GetForUOM(ByVal uOMId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim service As Service.PermitInfoService
            service = ServiceObject
            Return service.GetForUOM(uOMId, tran)
        End Function
        
        Public Overloads Shared Function GetForUOM(ByVal uOMId As Integer) As EntitySet.PermitInfoSet
            Return PermitInfoBase.GetForUOM(uOMId, Nothing)
        End Function
        
        Public Overloads Function GetRelatedPermitDuplicateRequest(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitDuplicateRequestSet
            Return Entity.PermitDuplicateRequest.GetForPermitInfo(Me.PermitInfoId, tran)
        End Function
        
        Public Overloads Function GetRelatedPermitDuplicateRequest() As EntitySet.PermitDuplicateRequestSet
            Return Me.GetRelatedPermitDuplicateRequest(Nothing)
        End Function
        
        Public Overloads Function GetRelatedPermitHistory(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitHistorySet
            Return Entity.PermitHistory.GetForPermitInfo(Me.PermitInfoId, tran)
        End Function
        
        Public Overloads Function GetRelatedPermitHistory() As EntitySet.PermitHistorySet
            Return Me.GetRelatedPermitHistory(Nothing)
        End Function
        
        Public Overloads Function GetRelatedReturnedPermit(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ReturnedPermitSet
            Return Entity.ReturnedPermit.GetForPermitInfo(Me.PermitInfoId, tran)
        End Function
        
        Public Overloads Function GetRelatedReturnedPermit() As EntitySet.ReturnedPermitSet
            Return Me.GetRelatedReturnedPermit(Nothing)
        End Function
        
        Public Overloads Function GetRelatedCITESClock(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.CITESClockSet
            Return Entity.CITESClock.GetForPermitInfo(Me.PermitInfoId, tran)
        End Function
        
        Public Overloads Function GetRelatedCITESClock() As EntitySet.CITESClockSet
            Return Me.GetRelatedCITESClock(Nothing)
        End Function
        
        Public Shared Function Insert( _
                    ByVal permitId As Integer,  _
                    ByVal progressStatusPaymentId As Object,  _
                    ByVal progressStatusInspectionId As Object,  _
                    ByVal progressStatusSAAdviceId As Object,  _
                    ByVal progressStatusReferralHistoryId As Object,  _
                    ByVal progressStatusReIssuedId As Object,  _
                    ByVal permitStatusId As Object,  _
                    ByVal reReferralCount As Integer,  _
                    ByVal assignedTo As Integer,  _
                    ByVal createdDate As Date,  _
                    ByVal createdByUserId As Decimal,  _
                    ByVal nextActionDate As Object,  _
                    ByVal cancelReason As Object,  _
                    ByVal cancelPendingReason As Object,  _
                    ByVal sequenceNumber As Integer,  _
                    ByVal refusalReasonId As Object,  _
                    ByVal refusalReason As Object,  _
                    ByVal issueDate As Object,  _
                    ByVal issue As Object,  _
                    ByVal issuedBy As Object,  _
                    ByVal placeOfIssue As Object,  _
                    ByVal dateComplete As Object,  _
                    ByVal dateAuthorised As Object,  _
                    ByVal dateRefused As Object,  _
                    ByVal dateCancelled As Object,  _
                    ByVal reportPrintJobId As Object,  _
                    ByVal cancelPendingDeclineReason As Object,  _
                    ByVal coveringLetterReportId As Object,  _
                    ByVal semiCompleteSpecimenId As Object,  _
                    ByVal semiCompleteSpecieId As Object,  _
                    ByVal semiCompleteSecondPartyId As Object,  _
                    ByVal semiCompleteCountryId As Object,  _
                    ByVal semiCompleteUOMId As Object) As Entity.PermitInfo
            Return Entity.PermitInfo.ServiceObject.Insert(permitId, progressStatusPaymentId, progressStatusInspectionId, progressStatusSAAdviceId, progressStatusReferralHistoryId, progressStatusReIssuedId, permitStatusId, reReferralCount, assignedTo, createdDate, createdByUserId, nextActionDate, cancelReason, cancelPendingReason, sequenceNumber, refusalReasonId, refusalReason, issueDate, issue, issuedBy, placeOfIssue, dateComplete, dateAuthorised, dateRefused, dateCancelled, reportPrintJobId, cancelPendingDeclineReason, coveringLetterReportId, semiCompleteSpecimenId, semiCompleteSpecieId, semiCompleteSecondPartyId, semiCompleteCountryId, semiCompleteUOMId)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim permitIdParam As Integer = Me.PermitId
            Dim progressStatusPaymentIdParam As Object
            If (Me.IsProgressStatusPaymentIdNull = false) Then
                progressStatusPaymentIdParam = Me.ProgressStatusPaymentId
            Else
                progressStatusPaymentIdParam = System.DBNull.Value
            End If
            Dim progressStatusInspectionIdParam As Object
            If (Me.IsProgressStatusInspectionIdNull = false) Then
                progressStatusInspectionIdParam = Me.ProgressStatusInspectionId
            Else
                progressStatusInspectionIdParam = System.DBNull.Value
            End If
            Dim progressStatusSAAdviceIdParam As Object
            If (Me.IsProgressStatusSAAdviceIdNull = false) Then
                progressStatusSAAdviceIdParam = Me.ProgressStatusSAAdviceId
            Else
                progressStatusSAAdviceIdParam = System.DBNull.Value
            End If
            Dim progressStatusReferralHistoryIdParam As Object
            If (Me.IsProgressStatusReferralHistoryIdNull = false) Then
                progressStatusReferralHistoryIdParam = Me.ProgressStatusReferralHistoryId
            Else
                progressStatusReferralHistoryIdParam = System.DBNull.Value
            End If
            Dim progressStatusReIssuedIdParam As Object
            If (Me.IsProgressStatusReIssuedIdNull = false) Then
                progressStatusReIssuedIdParam = Me.ProgressStatusReIssuedId
            Else
                progressStatusReIssuedIdParam = System.DBNull.Value
            End If
            Dim permitStatusIdParam As Object
            If (Me.IsPermitStatusIdNull = false) Then
                permitStatusIdParam = Me.PermitStatusId
            Else
                permitStatusIdParam = System.DBNull.Value
            End If
            Dim reReferralCountParam As Integer = Me.ReReferralCount
            Dim assignedToParam As Integer = Me.AssignedTo
            Dim createdDateParam As Date = Me.CreatedDate
            Dim createdByUserIdParam As Decimal = Me.CreatedByUserId
            Dim nextActionDateParam As Object
            If (Me.IsNextActionDateNull = false) Then
                nextActionDateParam = Me.NextActionDate
            Else
                nextActionDateParam = System.DBNull.Value
            End If
            Dim cancelReasonParam As Object
            If (Me.IsCancelReasonNull = false) Then
                cancelReasonParam = EnterpriseObjects.Common.ParseSQLText(Me.CancelReason)
            Else
                cancelReasonParam = System.DBNull.Value
            End If
            Dim cancelPendingReasonParam As Object
            If (Me.IsCancelPendingReasonNull = false) Then
                cancelPendingReasonParam = EnterpriseObjects.Common.ParseSQLText(Me.CancelPendingReason)
            Else
                cancelPendingReasonParam = System.DBNull.Value
            End If
            Dim sequenceNumberParam As Integer = Me.SequenceNumber
            Dim refusalReasonIdParam As Object
            If (Me.IsRefusalReasonIdNull = false) Then
                refusalReasonIdParam = Me.RefusalReasonId
            Else
                refusalReasonIdParam = System.DBNull.Value
            End If
            Dim refusalReasonParam As Object
            If (Me.IsRefusalReasonNull = false) Then
                refusalReasonParam = EnterpriseObjects.Common.ParseSQLText(Me.RefusalReason)
            Else
                refusalReasonParam = System.DBNull.Value
            End If
            Dim issueDateParam As Object
            If (Me.IsIssueDateNull = false) Then
                issueDateParam = Me.IssueDate
            Else
                issueDateParam = System.DBNull.Value
            End If
            Dim issueParam As Object
            If (Me.IsIssueNull = false) Then
                issueParam = EnterpriseObjects.Common.ParseSQLText(Me.Issue)
            Else
                issueParam = System.DBNull.Value
            End If
            Dim issuedByParam As Object
            If (Me.IsIssuedByNull = false) Then
                issuedByParam = Me.IssuedBy
            Else
                issuedByParam = System.DBNull.Value
            End If
            Dim placeOfIssueParam As Object
            If (Me.IsPlaceOfIssueNull = false) Then
                placeOfIssueParam = EnterpriseObjects.Common.ParseSQLText(Me.PlaceOfIssue)
            Else
                placeOfIssueParam = System.DBNull.Value
            End If
            Dim dateCompleteParam As Object
            If (Me.IsDateCompleteNull = false) Then
                dateCompleteParam = Me.DateComplete
            Else
                dateCompleteParam = System.DBNull.Value
            End If
            Dim dateAuthorisedParam As Object
            If (Me.IsDateAuthorisedNull = false) Then
                dateAuthorisedParam = Me.DateAuthorised
            Else
                dateAuthorisedParam = System.DBNull.Value
            End If
            Dim dateRefusedParam As Object
            If (Me.IsDateRefusedNull = false) Then
                dateRefusedParam = Me.DateRefused
            Else
                dateRefusedParam = System.DBNull.Value
            End If
            Dim dateCancelledParam As Object
            If (Me.IsDateCancelledNull = false) Then
                dateCancelledParam = Me.DateCancelled
            Else
                dateCancelledParam = System.DBNull.Value
            End If
            Dim reportPrintJobIdParam As Object
            If (Me.IsReportPrintJobIdNull = false) Then
                reportPrintJobIdParam = Me.ReportPrintJobId
            Else
                reportPrintJobIdParam = System.DBNull.Value
            End If
            Dim cancelPendingDeclineReasonParam As Object
            If (Me.IsCancelPendingDeclineReasonNull = false) Then
                cancelPendingDeclineReasonParam = EnterpriseObjects.Common.ParseSQLText(Me.CancelPendingDeclineReason)
            Else
                cancelPendingDeclineReasonParam = System.DBNull.Value
            End If
            Dim coveringLetterReportIdParam As Object
            If (Me.IsCoveringLetterReportIdNull = false) Then
                coveringLetterReportIdParam = Me.CoveringLetterReportId
            Else
                coveringLetterReportIdParam = System.DBNull.Value
            End If
            Dim semiCompleteSpecimenIdParam As Object
            If (Me.IsSemiCompleteSpecimenIdNull = false) Then
                semiCompleteSpecimenIdParam = Me.SemiCompleteSpecimenId
            Else
                semiCompleteSpecimenIdParam = System.DBNull.Value
            End If
            Dim semiCompleteSpecieIdParam As Object
            If (Me.IsSemiCompleteSpecieIdNull = false) Then
                semiCompleteSpecieIdParam = Me.SemiCompleteSpecieId
            Else
                semiCompleteSpecieIdParam = System.DBNull.Value
            End If
            Dim semiCompleteSecondPartyIdParam As Object
            If (Me.IsSemiCompleteSecondPartyIdNull = false) Then
                semiCompleteSecondPartyIdParam = Me.SemiCompleteSecondPartyId
            Else
                semiCompleteSecondPartyIdParam = System.DBNull.Value
            End If
            Dim semiCompleteCountryIdParam As Object
            If (Me.IsSemiCompleteCountryIdNull = false) Then
                semiCompleteCountryIdParam = Me.SemiCompleteCountryId
            Else
                semiCompleteCountryIdParam = System.DBNull.Value
            End If
            Dim semiCompleteUOMIdParam As Object
            If (Me.IsSemiCompleteUOMIdNull = false) Then
                semiCompleteUOMIdParam = Me.SemiCompleteUOMId
            Else
                semiCompleteUOMIdParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.PermitInfo.ServiceObject.Update(Me.Id, permitIdParam, progressStatusPaymentIdParam, progressStatusInspectionIdParam, progressStatusSAAdviceIdParam, progressStatusReferralHistoryIdParam, progressStatusReIssuedIdParam, permitStatusIdParam, reReferralCountParam, assignedToParam, createdDateParam, createdByUserIdParam, nextActionDateParam, cancelReasonParam, cancelPendingReasonParam, sequenceNumberParam, refusalReasonIdParam, refusalReasonParam, issueDateParam, issueParam, issuedByParam, placeOfIssueParam, dateCompleteParam, dateAuthorisedParam, dateRefusedParam, dateCancelledParam, reportPrintJobIdParam, cancelPendingDeclineReasonParam, coveringLetterReportIdParam, semiCompleteSpecimenIdParam, semiCompleteSpecieIdParam, semiCompleteSecondPartyIdParam, semiCompleteCountryIdParam, semiCompleteUOMIdParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
