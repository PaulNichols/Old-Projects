'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'SeizureToPermitLink'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class SeizureToPermitLinkServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.SeizureToPermitLinkSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.SeizureToPermitLinkSet
            Return CType(MyBase.GetAll("eosp_SelectSeizureToPermitLink", GetType(EntitySet.SeizureToPermitLinkSet), includeHyphen, includeInactive, orderBy),EntitySet.SeizureToPermitLinkSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.SeizureToPermitLinkSet
            Return Me.GetAll(includeHyphen, includeInactive, SeizureToPermitLinkServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, SeizureToPermitLinkServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.SeizureToPermitLinkSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Function GetById(ByVal idColumns() As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.SeizureToPermitLink
            Return CType(MyBase.GetById("eosp_SelectSeizureToPermitLink", New String() {"SeizureNotificationId", "PermitId"}, idColumns, GetType(EntitySet.SeizureToPermitLinkSet), tran),Entity.SeizureToPermitLink)
        End Function
        
        Public Overloads Function GetById(ByVal idColumns() As Integer) As Entity.SeizureToPermitLink
            Return Me.GetById(idColumns, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal idColumns() As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(idColumns, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal idColumns() As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteSeizureToPermitLink", New String() {"SeizureNotificationId", "PermitId"}, idColumns, checkSum, transaction)
        End Function
        
        'GetForSeizureNotification - links to the SeizureNotification table...
        Public Overloads Function GetForSeizureNotification(ByVal SeizureNotificationId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SeizureToPermitLinkSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from SeizureToPermitLink where SeizureNo"& _ 
"tificationId=" + SeizureNotificationId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.SeizureToPermitLinkSet), tran),EntitySet.SeizureToPermitLinkSet)
        End Function
        
        'GetForSeizureNotification - links to the SeizureNotification table...
        Public Overloads Function GetForSeizureNotification(ByVal SeizureNotificationId As Integer) As EntitySet.SeizureToPermitLinkSet
            Return Me.GetForSeizureNotification(SeizureNotificationId, Nothing)
        End Function
        
        'GetForPermit - links to the Permit table...
        Public Overloads Function GetForPermit(ByVal PermitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.SeizureToPermitLinkSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from SeizureToPermitLink where PermitId="& _ 
"" + PermitId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.SeizureToPermitLinkSet), tran),EntitySet.SeizureToPermitLinkSet)
        End Function
        
        'GetForPermit - links to the Permit table...
        Public Overloads Function GetForPermit(ByVal PermitId As Integer) As EntitySet.SeizureToPermitLinkSet
            Return Me.GetForPermit(PermitId, Nothing)
        End Function
        
        Public Overloads Sub Insert(ByVal seizureNotificationId As Integer, ByVal permitId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction)
            Sprocs.eosp_CreateSeizureToPermitLink(seizureNotificationId, permitId, transaction)
        End Sub
        
        Public Overloads Sub Insert(ByVal seizureNotificationId As Integer, ByVal permitId As Integer)
            Me.Insert(seizureNotificationId, permitId, Nothing)
        End Sub
        
        Public Overloads Sub Insert(ByVal seizureToPermitLink As Entity.SeizureToPermitLink)
            Me.Insert(seizureToPermitLink(0), seizureToPermitLink(1))
        End Sub
        
        Public Overloads Sub Insert(ByVal seizureToPermitLink As Entity.SeizureToPermitLink, ByVal transaction As System.Data.SqlClient.SqlTransaction)
            Me.Insert(seizureToPermitLink(0), seizureToPermitLink(1), transaction)
        End Sub
        
        Public Overloads Function Update(ByVal seizureNotificationId As Integer, ByVal permitId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.SeizureToPermitLink
            Return Sprocs.eosp_UpdateSeizureToPermitLink(seizureNotificationId, permitId, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal seizureNotificationId As Integer, ByVal permitId As Integer) As Entity.SeizureToPermitLink
            Return Me.Update(seizureNotificationId, permitId, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal seizureNotificationId As Integer, ByVal permitId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.SeizureToPermitLink
            Return Me.Update(seizureNotificationId, permitId, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal seizureNotificationId As Integer, ByVal permitId As Integer, ByVal checkSum As Integer) As Entity.SeizureToPermitLink
            Return Me.Update(seizureNotificationId, permitId, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal seizureToPermitLink As Entity.SeizureToPermitLink) As Entity.SeizureToPermitLink
            Return Me.Update(seizureToPermitLink(0), seizureToPermitLink(1))
        End Function
        
        Public Overloads Function Update(ByVal seizureToPermitLink As Entity.SeizureToPermitLink, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.SeizureToPermitLink
            Return Me.Update(seizureToPermitLink(0), seizureToPermitLink(1), transaction)
        End Function
        
        Public Overloads Function Update(ByVal seizureToPermitLink As Entity.SeizureToPermitLink, ByVal checkSum As Integer) As Entity.SeizureToPermitLink
            Return Me.Update(seizureToPermitLink(0), seizureToPermitLink(1), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal seizureToPermitLink As Entity.SeizureToPermitLink, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.SeizureToPermitLink
            Return Me.Update(seizureToPermitLink(0), seizureToPermitLink(1), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_IX_SeizureToPermitLink(ByVal seizureNotificationId As Integer, ByVal permitId As Integer) As EntitySet.SeizureToPermitLinkSet
            Return Sprocs.eosp_SelectSeizureToPermitLink(seizureNotificationId:=Nothing, permitId:=Nothing, Index_SeizureNotificationId:=[seizureNotificationId], Index_PermitId:=[permitId], transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_IX_SeizureToPermitLink(ByVal seizureNotificationId As Integer, ByVal permitId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.SeizureToPermitLinkSet
            Return Sprocs.eosp_SelectSeizureToPermitLink(seizureNotificationId:=Nothing, permitId:=Nothing, Index_SeizureNotificationId:=[seizureNotificationId], Index_PermitId:=[permitId], sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            IX_SeizureToPermitLink
            
            
        End Enum
    End Class
End Namespace
