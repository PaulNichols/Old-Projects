'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.573
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'PermitInfo'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class PermitInfoServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.PermitInfoSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.PermitInfoSet
            Return CType(MyBase.GetAll("eosp_SelectPermitInfo", GetType(EntitySet.PermitInfoSet), includeHyphen, includeInactive, orderBy),EntitySet.PermitInfoSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.PermitInfoSet
            Return Me.GetAll(includeHyphen, includeInactive, PermitInfoServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, PermitInfoServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal orderBy As OrderBy) As EntitySet.PermitInfoSet
            Return Me.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal permitInfoId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectPermitInfo", "PermitInfoId", permitInfoId, GetType(EntitySet.PermitInfoSet), tran),Entity.PermitInfo)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal permitInfoId As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(permitInfoId, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal permitInfoId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.PermitInfo
            Return CType(MyBase.GetById("eosp_SelectPermitInfo", "PermitInfoId", permitInfoId, GetType(EntitySet.PermitInfoSet), tran),Entity.PermitInfo)
        End Function
        
        Public Overloads Function GetById(ByVal permitInfoId As Integer) As Entity.PermitInfo
            Return Me.GetById(permitInfoId, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal permitInfoId As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(permitInfoId, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal permitInfoId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeletePermitInfo", "PermitInfoId", permitInfoId, checkSum, transaction)
        End Function
        
        'GetForPermit - links to the Permit table...
        Public Overloads Function GetForPermit(ByVal PermitId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitInfo where PermitId=" + PermitId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitInfoSet), tran),EntitySet.PermitInfoSet)
        End Function
        
        'GetForPermit - links to the Permit table...
        Public Overloads Function GetForPermit(ByVal PermitId As Integer) As EntitySet.PermitInfoSet
            Return Me.GetForPermit(PermitId, Nothing)
        End Function
        
        'GetForProgressStatusPayment - links to the ProgressStatusPayment table...
        Public Overloads Function GetForProgressStatusPayment(ByVal ProgressStatusPaymentId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitInfo where ProgressStatusInsp"& _ 
"ectionId=" + ProgressStatusPaymentId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitInfoSet), tran),EntitySet.PermitInfoSet)
        End Function
        
        'GetForProgressStatusPayment - links to the ProgressStatusPayment table...
        Public Overloads Function GetForProgressStatusPayment(ByVal ProgressStatusPaymentId As Integer) As EntitySet.PermitInfoSet
            Return Me.GetForProgressStatusPayment(ProgressStatusPaymentId, Nothing)
        End Function
        
        'GetForProgressStatusSAAdvice - links to the ProgressStatusSAAdvice table...
        Public Overloads Function GetForProgressStatusSAAdvice(ByVal ProgressStatusSAAdviceId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitInfo where ProgressStatusSAAd"& _ 
"viceId=" + ProgressStatusSAAdviceId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitInfoSet), tran),EntitySet.PermitInfoSet)
        End Function
        
        'GetForProgressStatusSAAdvice - links to the ProgressStatusSAAdvice table...
        Public Overloads Function GetForProgressStatusSAAdvice(ByVal ProgressStatusSAAdviceId As Integer) As EntitySet.PermitInfoSet
            Return Me.GetForProgressStatusSAAdvice(ProgressStatusSAAdviceId, Nothing)
        End Function
        
        'GetForProgressStatusReferralHistory - links to the ProgressStatusReferralHistory table...
        Public Overloads Function GetForProgressStatusReferralHistory(ByVal ProgressStatusReferralHistoryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitInfo where ProgressStatusRefe"& _ 
"rralHistoryId=" + ProgressStatusReferralHistoryId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitInfoSet), tran),EntitySet.PermitInfoSet)
        End Function
        
        'GetForProgressStatusReferralHistory - links to the ProgressStatusReferralHistory table...
        Public Overloads Function GetForProgressStatusReferralHistory(ByVal ProgressStatusReferralHistoryId As Integer) As EntitySet.PermitInfoSet
            Return Me.GetForProgressStatusReferralHistory(ProgressStatusReferralHistoryId, Nothing)
        End Function
        
        'GetForProgressStatusReIssued - links to the ProgressStatusReIssued table...
        Public Overloads Function GetForProgressStatusReIssued(ByVal ProgressStatusReIssuedId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitInfo where ProgressStatusReIs"& _ 
"suedId=" + ProgressStatusReIssuedId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitInfoSet), tran),EntitySet.PermitInfoSet)
        End Function
        
        'GetForProgressStatusReIssued - links to the ProgressStatusReIssued table...
        Public Overloads Function GetForProgressStatusReIssued(ByVal ProgressStatusReIssuedId As Integer) As EntitySet.PermitInfoSet
            Return Me.GetForProgressStatusReIssued(ProgressStatusReIssuedId, Nothing)
        End Function
        
        'GetForPermitStatus - links to the PermitStatus table...
        Public Overloads Function GetForPermitStatus(ByVal PermitStatusId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitInfo where PermitStatusId=" + PermitStatusId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitInfoSet), tran),EntitySet.PermitInfoSet)
        End Function
        
        'GetForPermitStatus - links to the PermitStatus table...
        Public Overloads Function GetForPermitStatus(ByVal PermitStatusId As Integer) As EntitySet.PermitInfoSet
            Return Me.GetForPermitStatus(PermitStatusId, Nothing)
        End Function
        
        'GetForStatusAssignedToGroup - links to the StatusAssignedToGroup table...
        Public Overloads Function GetForStatusAssignedToGroup(ByVal StatusAssignedToGroupId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitInfo where AssignedTo=" + StatusAssignedToGroupId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitInfoSet), tran),EntitySet.PermitInfoSet)
        End Function
        
        'GetForStatusAssignedToGroup - links to the StatusAssignedToGroup table...
        Public Overloads Function GetForStatusAssignedToGroup(ByVal StatusAssignedToGroupId As Integer) As EntitySet.PermitInfoSet
            Return Me.GetForStatusAssignedToGroup(StatusAssignedToGroupId, Nothing)
        End Function
        
        'GetForRefusalReason - links to the RefusalReason table...
        Public Overloads Function GetForRefusalReason(ByVal RefusalReasonID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitInfo where RefusalReasonId=" + RefusalReasonID.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitInfoSet), tran),EntitySet.PermitInfoSet)
        End Function
        
        'GetForRefusalReason - links to the RefusalReason table...
        Public Overloads Function GetForRefusalReason(ByVal RefusalReasonID As Integer) As EntitySet.PermitInfoSet
            Return Me.GetForRefusalReason(RefusalReasonID, Nothing)
        End Function
        
        'GetForReportPrintJob - links to the ReportPrintJob table...
        Public Overloads Function GetForReportPrintJob(ByVal ReportPrintJobId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitInfo where ReportPrintJobId=" + ReportPrintJobId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitInfoSet), tran),EntitySet.PermitInfoSet)
        End Function
        
        'GetForReportPrintJob - links to the ReportPrintJob table...
        Public Overloads Function GetForReportPrintJob(ByVal ReportPrintJobId As Integer) As EntitySet.PermitInfoSet
            Return Me.GetForReportPrintJob(ReportPrintJobId, Nothing)
        End Function
        
        'GetForSpecimen - links to the Specimen table...
        Public Overloads Function GetForSpecimen(ByVal SpecimenId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitInfo where SemiCompleteSpecim"& _ 
"enId=" + SpecimenId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitInfoSet), tran),EntitySet.PermitInfoSet)
        End Function
        
        'GetForSpecimen - links to the Specimen table...
        Public Overloads Function GetForSpecimen(ByVal SpecimenId As Integer) As EntitySet.PermitInfoSet
            Return Me.GetForSpecimen(SpecimenId, Nothing)
        End Function
        
        'GetForSpecie - links to the Specie table...
        Public Overloads Function GetForSpecie(ByVal SpecieId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitInfo where SemiCompleteSpecie"& _ 
"Id=" + SpecieId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitInfoSet), tran),EntitySet.PermitInfoSet)
        End Function
        
        'GetForSpecie - links to the Specie table...
        Public Overloads Function GetForSpecie(ByVal SpecieId As Integer) As EntitySet.PermitInfoSet
            Return Me.GetForSpecie(SpecieId, Nothing)
        End Function
        
        'GetForPartyLink - links to the PartyLink table...
        Public Overloads Function GetForPartyLink(ByVal PartyLinkId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitInfo where SemiCompleteSecond"& _ 
"PartyId=" + PartyLinkId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitInfoSet), tran),EntitySet.PermitInfoSet)
        End Function
        
        'GetForPartyLink - links to the PartyLink table...
        Public Overloads Function GetForPartyLink(ByVal PartyLinkId As Integer) As EntitySet.PermitInfoSet
            Return Me.GetForPartyLink(PartyLinkId, Nothing)
        End Function
        
        'GetForCountry - links to the Country table...
        Public Overloads Function GetForCountry(ByVal CountryId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitInfo where SemiCompleteCountr"& _ 
"yId=" + CountryId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitInfoSet), tran),EntitySet.PermitInfoSet)
        End Function
        
        'GetForCountry - links to the Country table...
        Public Overloads Function GetForCountry(ByVal CountryId As Integer) As EntitySet.PermitInfoSet
            Return Me.GetForCountry(CountryId, Nothing)
        End Function
        
        'GetForUOM - links to the UOM table...
        Public Overloads Function GetForUOM(ByVal UOMId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Dim sql As String
            sql = ("select *, binary_checksum(*) As checkSum from PermitInfo where SemiCompleteUOMId="& _ 
"" + UOMId.ToString)
            Return CType(Me.GetEntitySet(sql, GetType(EntitySet.PermitInfoSet), tran),EntitySet.PermitInfoSet)
        End Function
        
        'GetForUOM - links to the UOM table...
        Public Overloads Function GetForUOM(ByVal UOMId As Integer) As EntitySet.PermitInfoSet
            Return Me.GetForUOM(UOMId, Nothing)
        End Function
        
        Public Overloads Function Insert( _
                    ByVal permitId As Integer,  _
                    ByVal progressStatusPaymentId As Object,  _
                    ByVal progressStatusInspectionId As Object,  _
                    ByVal progressStatusSAAdviceId As Object,  _
                    ByVal progressStatusReferralHistoryId As Object,  _
                    ByVal progressStatusReIssuedId As Object,  _
                    ByVal permitStatusId As Object,  _
                    ByVal reReferralCount As Integer,  _
                    ByVal assignedTo As Integer,  _
                    ByVal createdDate As Date,  _
                    ByVal createdByUserId As Decimal,  _
                    ByVal nextActionDate As Object,  _
                    ByVal cancelReason As Object,  _
                    ByVal cancelPendingReason As Object,  _
                    ByVal sequenceNumber As Integer,  _
                    ByVal refusalReasonId As Object,  _
                    ByVal refusalReason As Object,  _
                    ByVal issueDate As Object,  _
                    ByVal issue As Object,  _
                    ByVal issuedBy As Object,  _
                    ByVal placeOfIssue As Object,  _
                    ByVal dateComplete As Object,  _
                    ByVal dateAuthorised As Object,  _
                    ByVal dateRefused As Object,  _
                    ByVal dateCancelled As Object,  _
                    ByVal reportPrintJobId As Object,  _
                    ByVal cancelPendingDeclineReason As Object,  _
                    ByVal coveringLetterReportId As Object,  _
                    ByVal semiCompleteSpecimenId As Object,  _
                    ByVal semiCompleteSpecieId As Object,  _
                    ByVal semiCompleteSecondPartyId As Object,  _
                    ByVal semiCompleteCountryId As Object,  _
                    ByVal semiCompleteUOMId As Object,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitInfo
            Return Me.GetById(Sprocs.eosp_CreatePermitInfo(permitId, progressStatusPaymentId, progressStatusInspectionId, progressStatusSAAdviceId, progressStatusReferralHistoryId, progressStatusReIssuedId, permitStatusId, reReferralCount, assignedTo, createdDate, createdByUserId, nextActionDate, cancelReason, cancelPendingReason, sequenceNumber, refusalReasonId, refusalReason, issueDate, issue, issuedBy, placeOfIssue, dateComplete, dateAuthorised, dateRefused, dateCancelled, reportPrintJobId, cancelPendingDeclineReason, coveringLetterReportId, semiCompleteSpecimenId, semiCompleteSpecieId, semiCompleteSecondPartyId, semiCompleteCountryId, semiCompleteUOMId, transaction), transaction)
        End Function
        
        Public Overloads Function Insert( _
                    ByVal permitId As Integer,  _
                    ByVal progressStatusPaymentId As Object,  _
                    ByVal progressStatusInspectionId As Object,  _
                    ByVal progressStatusSAAdviceId As Object,  _
                    ByVal progressStatusReferralHistoryId As Object,  _
                    ByVal progressStatusReIssuedId As Object,  _
                    ByVal permitStatusId As Object,  _
                    ByVal reReferralCount As Integer,  _
                    ByVal assignedTo As Integer,  _
                    ByVal createdDate As Date,  _
                    ByVal createdByUserId As Decimal,  _
                    ByVal nextActionDate As Object,  _
                    ByVal cancelReason As Object,  _
                    ByVal cancelPendingReason As Object,  _
                    ByVal sequenceNumber As Integer,  _
                    ByVal refusalReasonId As Object,  _
                    ByVal refusalReason As Object,  _
                    ByVal issueDate As Object,  _
                    ByVal issue As Object,  _
                    ByVal issuedBy As Object,  _
                    ByVal placeOfIssue As Object,  _
                    ByVal dateComplete As Object,  _
                    ByVal dateAuthorised As Object,  _
                    ByVal dateRefused As Object,  _
                    ByVal dateCancelled As Object,  _
                    ByVal reportPrintJobId As Object,  _
                    ByVal cancelPendingDeclineReason As Object,  _
                    ByVal coveringLetterReportId As Object,  _
                    ByVal semiCompleteSpecimenId As Object,  _
                    ByVal semiCompleteSpecieId As Object,  _
                    ByVal semiCompleteSecondPartyId As Object,  _
                    ByVal semiCompleteCountryId As Object,  _
                    ByVal semiCompleteUOMId As Object) As Entity.PermitInfo
            Return Me.Insert(permitId, progressStatusPaymentId, progressStatusInspectionId, progressStatusSAAdviceId, progressStatusReferralHistoryId, progressStatusReIssuedId, permitStatusId, reReferralCount, assignedTo, createdDate, createdByUserId, nextActionDate, cancelReason, cancelPendingReason, sequenceNumber, refusalReasonId, refusalReason, issueDate, issue, issuedBy, placeOfIssue, dateComplete, dateAuthorised, dateRefused, dateCancelled, reportPrintJobId, cancelPendingDeclineReason, coveringLetterReportId, semiCompleteSpecimenId, semiCompleteSpecieId, semiCompleteSecondPartyId, semiCompleteCountryId, semiCompleteUOMId, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal permitInfo As Entity.PermitInfo) As Entity.PermitInfo
            Return Me.Insert(permitInfo(1), permitInfo(2), permitInfo(3), permitInfo(4), permitInfo(5), permitInfo(6), permitInfo(7), permitInfo(8), permitInfo(9), permitInfo(10), permitInfo(11), permitInfo(12), permitInfo(13), permitInfo(14), permitInfo(15), permitInfo(16), permitInfo(17), permitInfo(18), permitInfo(19), permitInfo(20), permitInfo(21), permitInfo(22), permitInfo(23), permitInfo(24), permitInfo(25), permitInfo(26), permitInfo(27), permitInfo(28), permitInfo(29), permitInfo(30), permitInfo(31), permitInfo(32), permitInfo(33))
        End Function
        
        Public Overloads Function Insert(ByVal permitInfo As Entity.PermitInfo, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitInfo
            Return Me.Insert(permitInfo(1), permitInfo(2), permitInfo(3), permitInfo(4), permitInfo(5), permitInfo(6), permitInfo(7), permitInfo(8), permitInfo(9), permitInfo(10), permitInfo(11), permitInfo(12), permitInfo(13), permitInfo(14), permitInfo(15), permitInfo(16), permitInfo(17), permitInfo(18), permitInfo(19), permitInfo(20), permitInfo(21), permitInfo(22), permitInfo(23), permitInfo(24), permitInfo(25), permitInfo(26), permitInfo(27), permitInfo(28), permitInfo(29), permitInfo(30), permitInfo(31), permitInfo(32), permitInfo(33), transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal permitId As Integer,  _
                    ByVal progressStatusPaymentId As Object,  _
                    ByVal progressStatusInspectionId As Object,  _
                    ByVal progressStatusSAAdviceId As Object,  _
                    ByVal progressStatusReferralHistoryId As Object,  _
                    ByVal progressStatusReIssuedId As Object,  _
                    ByVal permitStatusId As Object,  _
                    ByVal reReferralCount As Integer,  _
                    ByVal assignedTo As Integer,  _
                    ByVal createdDate As Date,  _
                    ByVal createdByUserId As Decimal,  _
                    ByVal nextActionDate As Object,  _
                    ByVal cancelReason As Object,  _
                    ByVal cancelPendingReason As Object,  _
                    ByVal sequenceNumber As Integer,  _
                    ByVal refusalReasonId As Object,  _
                    ByVal refusalReason As Object,  _
                    ByVal issueDate As Object,  _
                    ByVal issue As Object,  _
                    ByVal issuedBy As Object,  _
                    ByVal placeOfIssue As Object,  _
                    ByVal dateComplete As Object,  _
                    ByVal dateAuthorised As Object,  _
                    ByVal dateRefused As Object,  _
                    ByVal dateCancelled As Object,  _
                    ByVal reportPrintJobId As Object,  _
                    ByVal cancelPendingDeclineReason As Object,  _
                    ByVal coveringLetterReportId As Object,  _
                    ByVal semiCompleteSpecimenId As Object,  _
                    ByVal semiCompleteSpecieId As Object,  _
                    ByVal semiCompleteSecondPartyId As Object,  _
                    ByVal semiCompleteCountryId As Object,  _
                    ByVal semiCompleteUOMId As Object,  _
                    ByVal checkSum As Integer,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitInfo
            Return Sprocs.eosp_UpdatePermitInfo(id, permitId, progressStatusPaymentId, progressStatusInspectionId, progressStatusSAAdviceId, progressStatusReferralHistoryId, progressStatusReIssuedId, permitStatusId, reReferralCount, assignedTo, createdDate, createdByUserId, nextActionDate, cancelReason, cancelPendingReason, sequenceNumber, refusalReasonId, refusalReason, issueDate, issue, issuedBy, placeOfIssue, dateComplete, dateAuthorised, dateRefused, dateCancelled, reportPrintJobId, cancelPendingDeclineReason, coveringLetterReportId, semiCompleteSpecimenId, semiCompleteSpecieId, semiCompleteSecondPartyId, semiCompleteCountryId, semiCompleteUOMId, checkSum, transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal permitId As Integer,  _
                    ByVal progressStatusPaymentId As Object,  _
                    ByVal progressStatusInspectionId As Object,  _
                    ByVal progressStatusSAAdviceId As Object,  _
                    ByVal progressStatusReferralHistoryId As Object,  _
                    ByVal progressStatusReIssuedId As Object,  _
                    ByVal permitStatusId As Object,  _
                    ByVal reReferralCount As Integer,  _
                    ByVal assignedTo As Integer,  _
                    ByVal createdDate As Date,  _
                    ByVal createdByUserId As Decimal,  _
                    ByVal nextActionDate As Object,  _
                    ByVal cancelReason As Object,  _
                    ByVal cancelPendingReason As Object,  _
                    ByVal sequenceNumber As Integer,  _
                    ByVal refusalReasonId As Object,  _
                    ByVal refusalReason As Object,  _
                    ByVal issueDate As Object,  _
                    ByVal issue As Object,  _
                    ByVal issuedBy As Object,  _
                    ByVal placeOfIssue As Object,  _
                    ByVal dateComplete As Object,  _
                    ByVal dateAuthorised As Object,  _
                    ByVal dateRefused As Object,  _
                    ByVal dateCancelled As Object,  _
                    ByVal reportPrintJobId As Object,  _
                    ByVal cancelPendingDeclineReason As Object,  _
                    ByVal coveringLetterReportId As Object,  _
                    ByVal semiCompleteSpecimenId As Object,  _
                    ByVal semiCompleteSpecieId As Object,  _
                    ByVal semiCompleteSecondPartyId As Object,  _
                    ByVal semiCompleteCountryId As Object,  _
                    ByVal semiCompleteUOMId As Object) As Entity.PermitInfo
            Return Me.Update(id, permitId, progressStatusPaymentId, progressStatusInspectionId, progressStatusSAAdviceId, progressStatusReferralHistoryId, progressStatusReIssuedId, permitStatusId, reReferralCount, assignedTo, createdDate, createdByUserId, nextActionDate, cancelReason, cancelPendingReason, sequenceNumber, refusalReasonId, refusalReason, issueDate, issue, issuedBy, placeOfIssue, dateComplete, dateAuthorised, dateRefused, dateCancelled, reportPrintJobId, cancelPendingDeclineReason, coveringLetterReportId, semiCompleteSpecimenId, semiCompleteSpecieId, semiCompleteSecondPartyId, semiCompleteCountryId, semiCompleteUOMId, 0, Nothing)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal permitId As Integer,  _
                    ByVal progressStatusPaymentId As Object,  _
                    ByVal progressStatusInspectionId As Object,  _
                    ByVal progressStatusSAAdviceId As Object,  _
                    ByVal progressStatusReferralHistoryId As Object,  _
                    ByVal progressStatusReIssuedId As Object,  _
                    ByVal permitStatusId As Object,  _
                    ByVal reReferralCount As Integer,  _
                    ByVal assignedTo As Integer,  _
                    ByVal createdDate As Date,  _
                    ByVal createdByUserId As Decimal,  _
                    ByVal nextActionDate As Object,  _
                    ByVal cancelReason As Object,  _
                    ByVal cancelPendingReason As Object,  _
                    ByVal sequenceNumber As Integer,  _
                    ByVal refusalReasonId As Object,  _
                    ByVal refusalReason As Object,  _
                    ByVal issueDate As Object,  _
                    ByVal issue As Object,  _
                    ByVal issuedBy As Object,  _
                    ByVal placeOfIssue As Object,  _
                    ByVal dateComplete As Object,  _
                    ByVal dateAuthorised As Object,  _
                    ByVal dateRefused As Object,  _
                    ByVal dateCancelled As Object,  _
                    ByVal reportPrintJobId As Object,  _
                    ByVal cancelPendingDeclineReason As Object,  _
                    ByVal coveringLetterReportId As Object,  _
                    ByVal semiCompleteSpecimenId As Object,  _
                    ByVal semiCompleteSpecieId As Object,  _
                    ByVal semiCompleteSecondPartyId As Object,  _
                    ByVal semiCompleteCountryId As Object,  _
                    ByVal semiCompleteUOMId As Object,  _
                    ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitInfo
            Return Me.Update(id, permitId, progressStatusPaymentId, progressStatusInspectionId, progressStatusSAAdviceId, progressStatusReferralHistoryId, progressStatusReIssuedId, permitStatusId, reReferralCount, assignedTo, createdDate, createdByUserId, nextActionDate, cancelReason, cancelPendingReason, sequenceNumber, refusalReasonId, refusalReason, issueDate, issue, issuedBy, placeOfIssue, dateComplete, dateAuthorised, dateRefused, dateCancelled, reportPrintJobId, cancelPendingDeclineReason, coveringLetterReportId, semiCompleteSpecimenId, semiCompleteSpecieId, semiCompleteSecondPartyId, semiCompleteCountryId, semiCompleteUOMId, 0, transaction)
        End Function
        
        Public Overloads Function Update( _
                    ByVal id As Integer,  _
                    ByVal permitId As Integer,  _
                    ByVal progressStatusPaymentId As Object,  _
                    ByVal progressStatusInspectionId As Object,  _
                    ByVal progressStatusSAAdviceId As Object,  _
                    ByVal progressStatusReferralHistoryId As Object,  _
                    ByVal progressStatusReIssuedId As Object,  _
                    ByVal permitStatusId As Object,  _
                    ByVal reReferralCount As Integer,  _
                    ByVal assignedTo As Integer,  _
                    ByVal createdDate As Date,  _
                    ByVal createdByUserId As Decimal,  _
                    ByVal nextActionDate As Object,  _
                    ByVal cancelReason As Object,  _
                    ByVal cancelPendingReason As Object,  _
                    ByVal sequenceNumber As Integer,  _
                    ByVal refusalReasonId As Object,  _
                    ByVal refusalReason As Object,  _
                    ByVal issueDate As Object,  _
                    ByVal issue As Object,  _
                    ByVal issuedBy As Object,  _
                    ByVal placeOfIssue As Object,  _
                    ByVal dateComplete As Object,  _
                    ByVal dateAuthorised As Object,  _
                    ByVal dateRefused As Object,  _
                    ByVal dateCancelled As Object,  _
                    ByVal reportPrintJobId As Object,  _
                    ByVal cancelPendingDeclineReason As Object,  _
                    ByVal coveringLetterReportId As Object,  _
                    ByVal semiCompleteSpecimenId As Object,  _
                    ByVal semiCompleteSpecieId As Object,  _
                    ByVal semiCompleteSecondPartyId As Object,  _
                    ByVal semiCompleteCountryId As Object,  _
                    ByVal semiCompleteUOMId As Object,  _
                    ByVal checkSum As Integer) As Entity.PermitInfo
            Return Me.Update(id, permitId, progressStatusPaymentId, progressStatusInspectionId, progressStatusSAAdviceId, progressStatusReferralHistoryId, progressStatusReIssuedId, permitStatusId, reReferralCount, assignedTo, createdDate, createdByUserId, nextActionDate, cancelReason, cancelPendingReason, sequenceNumber, refusalReasonId, refusalReason, issueDate, issue, issuedBy, placeOfIssue, dateComplete, dateAuthorised, dateRefused, dateCancelled, reportPrintJobId, cancelPendingDeclineReason, coveringLetterReportId, semiCompleteSpecimenId, semiCompleteSpecieId, semiCompleteSecondPartyId, semiCompleteCountryId, semiCompleteUOMId, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal permitInfo As Entity.PermitInfo) As Entity.PermitInfo
            Return Me.Update(permitInfo.id, permitInfo(1), permitInfo(2), permitInfo(3), permitInfo(4), permitInfo(5), permitInfo(6), permitInfo(7), permitInfo(8), permitInfo(9), permitInfo(10), permitInfo(11), permitInfo(12), permitInfo(13), permitInfo(14), permitInfo(15), permitInfo(16), permitInfo(17), permitInfo(18), permitInfo(19), permitInfo(20), permitInfo(21), permitInfo(22), permitInfo(23), permitInfo(24), permitInfo(25), permitInfo(26), permitInfo(27), permitInfo(28), permitInfo(29), permitInfo(30), permitInfo(31), permitInfo(32), permitInfo(33))
        End Function
        
        Public Overloads Function Update(ByVal permitInfo As Entity.PermitInfo, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitInfo
            Return Me.Update(permitInfo.id, permitInfo(1), permitInfo(2), permitInfo(3), permitInfo(4), permitInfo(5), permitInfo(6), permitInfo(7), permitInfo(8), permitInfo(9), permitInfo(10), permitInfo(11), permitInfo(12), permitInfo(13), permitInfo(14), permitInfo(15), permitInfo(16), permitInfo(17), permitInfo(18), permitInfo(19), permitInfo(20), permitInfo(21), permitInfo(22), permitInfo(23), permitInfo(24), permitInfo(25), permitInfo(26), permitInfo(27), permitInfo(28), permitInfo(29), permitInfo(30), permitInfo(31), permitInfo(32), permitInfo(33), transaction)
        End Function
        
        Public Overloads Function Update(ByVal permitInfo As Entity.PermitInfo, ByVal checkSum As Integer) As Entity.PermitInfo
            Return Me.Update(permitInfo.id, permitInfo(1), permitInfo(2), permitInfo(3), permitInfo(4), permitInfo(5), permitInfo(6), permitInfo(7), permitInfo(8), permitInfo(9), permitInfo(10), permitInfo(11), permitInfo(12), permitInfo(13), permitInfo(14), permitInfo(15), permitInfo(16), permitInfo(17), permitInfo(18), permitInfo(19), permitInfo(20), permitInfo(21), permitInfo(22), permitInfo(23), permitInfo(24), permitInfo(25), permitInfo(26), permitInfo(27), permitInfo(28), permitInfo(29), permitInfo(30), permitInfo(31), permitInfo(32), permitInfo(33), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal permitInfo As Entity.PermitInfo, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.PermitInfo
            Return Me.Update(permitInfo.id, permitInfo(1), permitInfo(2), permitInfo(3), permitInfo(4), permitInfo(5), permitInfo(6), permitInfo(7), permitInfo(8), permitInfo(9), permitInfo(10), permitInfo(11), permitInfo(12), permitInfo(13), permitInfo(14), permitInfo(15), permitInfo(16), permitInfo(17), permitInfo(18), permitInfo(19), permitInfo(20), permitInfo(21), permitInfo(22), permitInfo(23), permitInfo(24), permitInfo(25), permitInfo(26), permitInfo(27), permitInfo(28), permitInfo(29), permitInfo(30), permitInfo(31), permitInfo(32), permitInfo(33), checkSum, transaction)
        End Function
        
        Public Overloads Function GetByIndex_PermitId(ByVal permitId As Integer) As EntitySet.PermitInfoSet
            Return Sprocs.eosp_SelectPermitInfo(permitInfoId:=Nothing, Index_PermitId:=[permitId], transaction:=Nothing, sortOrder:=0)
        End Function
        
        Public Overloads Function GetByIndex_PermitId(ByVal permitId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitInfoSet
            Return Sprocs.eosp_SelectPermitInfo(permitInfoId:=Nothing, Index_PermitId:=[permitId], sortOrder:=0, transaction:=transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
            
            PermitId
            
            
        End Enum
    End Class
End Namespace
