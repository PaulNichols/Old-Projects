'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Service base implementation for table 'TaxonomyCITESNotification'
    '*DO NOT* add your modifications to this file
    Public MustInherit Class TaxonomyCITESNotificationServiceBase
        Inherits EnterpriseObjects.Service
        Implements EnterpriseObjects.IServiceAll, EnterpriseObjects.IServiceId
        
        Protected Overrides ReadOnly Property HasStates As Boolean
            Get
                Return false
            End Get
        End Property
        
        Public Overloads Overridable Function GetAll() As EntitySet.TaxonomyCITESNotificationSet
            Return Me.GetAll(false, false, OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As OrderBy) As EntitySet.TaxonomyCITESNotificationSet
            Return CType(MyBase.GetAll("eosp_SelectTaxonomyCITESNotification", GetType(EntitySet.TaxonomyCITESNotificationSet), includeHyphen, includeInactive, orderBy),EntitySet.TaxonomyCITESNotificationSet)
        End Function
        
        Public Overloads Overridable Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EntitySet.TaxonomyCITESNotificationSet
            Return Me.GetAll(includeHyphen, includeInactive, TaxonomyCITESNotificationServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetAllInternal(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean) As EnterpriseObjects.EntitySet Implements EnterpriseObjects.IServiceAll.GetAllInternal
            Return Me.GetAll(includeHyphen, includeInactive, TaxonomyCITESNotificationServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal cITESNotificationID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return CType(MyBase.GetById("eosp_SelectTaxonomyCITESNotification", "CITESNotificationID", cITESNotificationID, GetType(EntitySet.TaxonomyCITESNotificationSet), tran),Entity.TaxonomyCITESNotification)
        End Function
        
        Public Overloads Overridable Function GetByIdInternal(ByVal cITESNotificationID As Integer) As EnterpriseObjects.Entity Implements EnterpriseObjects.IServiceId.GetByIdInternal
            Return Me.GetById(cITESNotificationID, Nothing)
        End Function
        
        Public Overloads Function GetById(ByVal cITESNotificationID As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyCITESNotification
            Return CType(MyBase.GetById("eosp_SelectTaxonomyCITESNotification", "CITESNotificationID", cITESNotificationID, GetType(EntitySet.TaxonomyCITESNotificationSet), tran),Entity.TaxonomyCITESNotification)
        End Function
        
        Public Overloads Function GetById(ByVal cITESNotificationID As Integer) As Entity.TaxonomyCITESNotification
            Return Me.GetById(cITESNotificationID, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal cITESNotificationID As Integer, ByVal checkSum As Integer) As Boolean
            Return Me.DeleteById(cITESNotificationID, checkSum, Nothing)
        End Function
        
        Public Overloads Function DeleteById(ByVal cITESNotificationID As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return MyBase.DeleteById("eosp_DeleteTaxonomyCITESNotification", "CITESNotificationID", cITESNotificationID, checkSum, transaction)
        End Function
        
        Public Overloads Function Insert(ByVal cITESNotificationID As Integer, ByVal cITESNotificationName As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyCITESNotification
            Return Me.GetById(Sprocs.eosp_CreateTaxonomyCITESNotification(cITESNotificationID, cITESNotificationName, transaction), transaction)
        End Function
        
        Public Overloads Function Insert(ByVal cITESNotificationID As Integer, ByVal cITESNotificationName As Object) As Entity.TaxonomyCITESNotification
            Return Me.Insert(cITESNotificationID, cITESNotificationName, Nothing)
        End Function
        
        Public Overloads Function Insert(ByVal taxonomyCITESNotification As Entity.TaxonomyCITESNotification) As Entity.TaxonomyCITESNotification
            Return Me.Insert(taxonomyCITESNotification(0), taxonomyCITESNotification(1))
        End Function
        
        Public Overloads Function Insert(ByVal taxonomyCITESNotification As Entity.TaxonomyCITESNotification, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyCITESNotification
            Return Me.Insert(taxonomyCITESNotification(0), taxonomyCITESNotification(1), transaction)
        End Function
        
        Public Overloads Function Update(ByVal cITESNotificationID As Integer, ByVal cITESNotificationName As Object, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyCITESNotification
            Return Sprocs.eosp_UpdateTaxonomyCITESNotification(cITESNotificationID, cITESNotificationName, checkSum, transaction)
        End Function
        
        Public Overloads Function Update(ByVal cITESNotificationID As Integer, ByVal cITESNotificationName As Object) As Entity.TaxonomyCITESNotification
            Return Me.Update(cITESNotificationID, cITESNotificationName, 0, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal cITESNotificationID As Integer, ByVal cITESNotificationName As Object, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyCITESNotification
            Return Me.Update(cITESNotificationID, cITESNotificationName, 0, transaction)
        End Function
        
        Public Overloads Function Update(ByVal cITESNotificationID As Integer, ByVal cITESNotificationName As Object, ByVal checkSum As Integer) As Entity.TaxonomyCITESNotification
            Return Me.Update(cITESNotificationID, cITESNotificationName, checkSum, Nothing)
        End Function
        
        Public Overloads Function Update(ByVal taxonomyCITESNotification As Entity.TaxonomyCITESNotification) As Entity.TaxonomyCITESNotification
            Return Me.Update(taxonomyCITESNotification(0), taxonomyCITESNotification(1))
        End Function
        
        Public Overloads Function Update(ByVal taxonomyCITESNotification As Entity.TaxonomyCITESNotification, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyCITESNotification
            Return Me.Update(taxonomyCITESNotification(0), taxonomyCITESNotification(1), transaction)
        End Function
        
        Public Overloads Function Update(ByVal taxonomyCITESNotification As Entity.TaxonomyCITESNotification, ByVal checkSum As Integer) As Entity.TaxonomyCITESNotification
            Return Me.Update(taxonomyCITESNotification(0), taxonomyCITESNotification(1), checkSum)
        End Function
        
        Public Overloads Function Update(ByVal taxonomyCITESNotification As Entity.TaxonomyCITESNotification, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Entity.TaxonomyCITESNotification
            Return Me.Update(taxonomyCITESNotification(0), taxonomyCITESNotification(1), checkSum, transaction)
        End Function
        
        Public Enum OrderBy
            
            DefaultOrder
        End Enum
    End Class
End Namespace
