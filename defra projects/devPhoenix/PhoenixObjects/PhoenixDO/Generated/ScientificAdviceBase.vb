'------------------------------------------------------------------------------
' <autogenerated>
'     This code was generated by a tool.
'     Runtime Version: 1.1.4322.2032
'
'     Changes to this file may cause incorrect behavior and will be lost if 
'     the code is regenerated.
' </autogenerated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


Namespace DataObjects.Base
    
    'Base entity implementation for table 'ScientificAdvice'
    '*DO NOT* modify this file.
    'Add new properties and methods to ScientificAdvice instead.
    <EnterpriseObjects.Attributes.TableDescription("Standard Scientific Advice")>  _
    Public MustInherit Class ScientificAdviceBase
        Inherits EnterpriseObjects.Entity
        Implements EnterpriseObjects.IUpdatable
        
        Private mRawDataset As System.Data.DataSet
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Protected Sub New(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
        End Sub
        
        Public Sub New(ByVal scientificAdviceId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction)
            MyBase.New
            MyBase.Populate(Me.GetById(scientificAdviceId, tran).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Sub New(ByVal scientificAdviceId As Integer)
            MyBase.New
            MyBase.Populate(Me.GetById(scientificAdviceId).RawDataset.Tables(0).Rows(0))
        End Sub
        
        Public Property ScientificAdviceId As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        Public Overrides Property Id As Integer
            Get
                Return CType(Me(0),Integer)
            End Get
            Set
                Me(0) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(3),  _
         EnterpriseObjects.Attributes.FieldDescription("Code")>  _
        Public Property Code As String
            Get
                Return CType(Me(1),String)
            End Get
            Set
                Me(1) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(50),  _
         EnterpriseObjects.Attributes.FieldDescription("Subject")>  _
        Public Property Description As String
            Get
                Return CType(Me(2),String)
            End Get
            Set
                Me(2) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(1000),  _
         EnterpriseObjects.Attributes.FieldDescription("Advice Text")>  _
        Public Property AdviceText As String
            Get
                Return CType(Me(3),String)
            End Get
            Set
                Me(3) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(56)>  _
        Public Property CodeDescription As String
            Get
                Return CType(Me(4),String)
            End Get
            Set
                Me(4) = value
            End Set
        End Property
        
        Public Property UserRole As Integer
            Get
                Return CType(Me(5),Integer)
            End Get
            Set
                Me(5) = value
            End Set
        End Property
        
        Public Property Active As Boolean
            Get
                Return CType(Me(6),Boolean)
            End Get
            Set
                Me(6) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldDescription("This is just to ""Reserve a space for it"" for the data object from the special sto"& _ 
"red procedure.")>  _
        Public Property Editable As Boolean
            Get
                Return CType(Me(7),Boolean)
            End Get
            Set
                Me(7) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldSize(1000),  _
         EnterpriseObjects.Attributes.FieldDescription("Default Advice Text")>  _
        Public Property DefaultAdviceText As String
            Get
                Return CType(Me(8),String)
            End Get
            Set
                Me(8) = value
            End Set
        End Property
        
        <EnterpriseObjects.Attributes.FieldDescription("Recommended Status")>  _
        Public Property RecommendedStatus As Integer
            Get
                If (Me.IsRecommendedStatusNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(9),Integer)
                End If
            End Get
            Set
                Me(9) = value
            End Set
        End Property
        
        Public Overrides Property CheckSum As Integer Implements EnterpriseObjects.IUpdatable.CheckSum
            Get
                If (Me.IsCheckSumNull = true) Then
                    Return Nothing
                Else
                    Return CType(Me(10),Integer)
                End If
            End Get
            Set
                Me(10) = value
            End Set
        End Property
        
        Public Shared ReadOnly Property ServiceObject As Service.ScientificAdviceService
            Get
                Return CType(GetServiceObject(GetType(Service.ScientificAdviceService)),Service.ScientificAdviceService)
            End Get
        End Property
        
        Public Overridable Property RawDataset As System.Data.DataSet Implements EnterpriseObjects.IUpdatable.RawDataset
            Get
                Return mRawDataset
            End Get
            Set
                mRawDataset = value
            End Set
        End Property
        
        Public Overrides Sub GetObjectData(ByVal info As System.Runtime.Serialization.SerializationInfo, ByVal context As System.Runtime.Serialization.StreamingContext)
            MyBase.GetObjectData(info, context)
        End Sub
        
        Public Function IsRecommendedStatusNull() As Boolean
            Return Me.IsNull(9)
        End Function
        
        Public Sub SetRecommendedStatusToNull()
            Me(9) = System.DBNull.Value
        End Sub
        
        Public Function IsCheckSumNull() As Boolean
            Return Me.IsNull(10)
        End Function
        
        Public Sub SetCheckSumToNull()
            Me(10) = System.DBNull.Value
        End Sub
        
        Public Overrides Sub CreateEmptyEntity()
            MyBase.CreateEmpty(11)
        End Sub
        
        Public Overloads Shared Function GetAll() As EntitySet.ScientificAdviceSet
            Return ScientificAdviceBase.GetAll(false, false, ScientificAdviceServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean) As EntitySet.ScientificAdviceSet
            Return ScientificAdviceBase.GetAll(includeHyphen, false, ScientificAdviceServiceBase.OrderBy.DefaultOrder)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal includeHyphen As Boolean, ByVal includeInactive As Boolean, ByVal orderBy As ScientificAdviceServiceBase.OrderBy) As EntitySet.ScientificAdviceSet
            Dim service As Service.ScientificAdviceService
            service = ServiceObject
            Return service.GetAll(includeHyphen, includeInactive, orderBy)
        End Function
        
        Public Overloads Shared Function GetAll(ByVal orderBy As ScientificAdviceServiceBase.OrderBy) As EntitySet.ScientificAdviceSet
            Return ScientificAdviceBase.GetAll(false, false, orderBy)
        End Function
        
        Public Overloads Shared Function GetById(ByVal scientificAdviceId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As Entity.ScientificAdvice
            Dim service As Service.ScientificAdviceService
            service = ServiceObject
            Return service.GetById(ScientificAdviceId, tran)
        End Function
        
        Public Overloads Shared Function GetById(ByVal scientificAdviceId As Integer) As Entity.ScientificAdvice
            Dim service As Service.ScientificAdviceService
            service = ServiceObject
            Return service.GetById(ScientificAdviceId)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal scientificAdviceId As Integer, ByVal checkSum As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Dim service As Service.ScientificAdviceService
            service = ServiceObject
            Return service.DeleteById(scientificAdviceId, checkSum, transaction)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal scientificAdviceId As Integer) As Boolean
            Return ScientificAdviceBase.DeleteById(scientificAdviceId, 0, Nothing)
        End Function
        
        Public Overloads Shared Function DeleteById(ByVal scientificAdviceId As Integer, ByVal transaction As System.Data.SqlClient.SqlTransaction) As Boolean
            Return ScientificAdviceBase.DeleteById(scientificAdviceId, 0, transaction)
        End Function
        
        Public Overloads Shared Function GetForProgressStatusSAAdvice(ByVal progressStatusSAAdviceId As Integer, ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.ScientificAdviceSet
            Dim service As Service.ScientificAdviceService
            service = ServiceObject
            Return service.GetForProgressStatusSAAdvice(progressStatusSAAdviceId, tran)
        End Function
        
        Public Overloads Shared Function GetForProgressStatusSAAdvice(ByVal progressStatusSAAdviceId As Integer) As EntitySet.ScientificAdviceSet
            Return ScientificAdviceBase.GetForProgressStatusSAAdvice(progressStatusSAAdviceId, Nothing)
        End Function
        
        Public Overloads Function GetRelatedPermitScientificAdvice(ByVal tran As System.Data.SqlClient.SqlTransaction) As EntitySet.PermitScientificAdviceSet
            Return Entity.PermitScientificAdvice.GetForScientificAdvice(Me.ScientificAdviceId, tran)
        End Function
        
        Public Overloads Function GetRelatedPermitScientificAdvice() As EntitySet.PermitScientificAdviceSet
            Return Me.GetRelatedPermitScientificAdvice(Nothing)
        End Function
        
        Public Shared Function Insert(ByVal code As String, ByVal description As String, ByVal adviceText As String, ByVal userRole As Integer, ByVal active As Boolean, ByVal editable As Boolean, ByVal defaultAdviceText As String, ByVal recommendedStatus As Object) As Entity.ScientificAdvice
            Return Entity.ScientificAdvice.ServiceObject.Insert(code, description, adviceText, userRole, active, editable, defaultAdviceText, recommendedStatus)
        End Function
        
        Public Overridable Function SaveChanges() As Boolean Implements EnterpriseObjects.IUpdatable.SaveChanges
            'line up the update params...
            Dim codeParam As String = Me.Code
            Dim descriptionParam As String = Me.Description
            Dim adviceTextParam As String = Me.AdviceText
            Dim userRoleParam As Integer = Me.UserRole
            Dim activeParam As Boolean = Me.Active
            Dim editableParam As Boolean = Me.Editable
            Dim defaultAdviceTextParam As String = Me.DefaultAdviceText
            Dim recommendedStatusParam As Object
            If (Me.IsRecommendedStatusNull = false) Then
                recommendedStatusParam = Me.RecommendedStatus
            Else
                recommendedStatusParam = System.DBNull.Value
            End If
            Dim checkSum As Integer
            If (Me.UseConcurrency = true) Then
                checkSum = Me.CheckSum
            Else
                checkSum = 0
            End If
            Dim Result As uk.gov.defra.EnterpriseObjects.Entity = Entity.ScientificAdvice.ServiceObject.Update(Me.Id, codeParam, descriptionParam, adviceTextParam, userRoleParam, activeParam, editableParam, defaultAdviceTextParam, recommendedStatusParam, checkSum)
            If (Me.UseConcurrency = true) Then
                Me.CheckSum = Result.checkSum
            End If
            Return (Not (Result) Is Nothing)
        End Function
    End Class
End Namespace
